Release Notes -- Apache Jackrabbit Oak -- Version 1.7.7

Introduction
------------

Jackrabbit Oak is a scalable, high-performance hierarchical content
repository designed for use as the foundation of modern world-class
web sites and other demanding content applications.

Apache Jackrabbit Oak 1.7.7 is an unstable release cut directly from
Jackrabbit Oak trunk, with a focus on new features and other
improvements. For production use we recommend the latest stable 1.6.x
release.

The Oak effort is a part of the Apache Jackrabbit project.
Apache Jackrabbit is a project of the Apache Software Foundation.

Changes in Oak 1.7.7
---------------------

Technical task

    [OAK-6506] - Ensure unique property indexes are consistent when
    mounting NodeStores
    [OAK-6581] - Ensure mounts are consistent with the namespace
    registry
    [OAK-6591] - Refactor ValuePattern related logic to utility
    methods
    [OAK-6603] - [oak-blob-cloud] Remove the older S3 connector
    relying on JR caching
    [OAK-6612] - Refactor encoding logic in property index to utility
    class
    [OAK-6630] - Remove older cached FileDataStore relying on JR
    caching

Bug

    [OAK-6560] - Sidegrade uses too much memory
    [OAK-6572] - IndexReaderClosed exception seen after some run
    [OAK-6573] - The --src-external-ds option does not mandate
    argument but reads it later
    [OAK-6596] - Blob store consistency check can show bogus errors
    about missing blobs
    [OAK-6598] - LuceneIndexAggregationTest2 doesn't get executed by
    mvn test
    [OAK-6601] - SegmentWriteOperation.isOldGeneration() too eager
    [OAK-6602] - Improve resource management in BulkTransferBenchmark
    [OAK-6604] - Oak Blob Cloud is not used by oak-upgrade
    [OAK-6611] - [upgrade][oak-blob-cloud] Many S3DataStore errors
    during migration with oak-upgrade
    [OAK-6620] - NodeStoreFixtureProvider should unregister services
    registered with whiteboard
    [OAK-6624] - InitialContentMigrator overwrites an existing
    repository
    [OAK-6640] - test failure in ResponseDecoderTest

Improvement

    [OAK-2710] - Remove Utils.unshareString
    [OAK-4906] - Lucene: Support relative property based query by
    transforming the path
    [OAK-5192] - Reduce Lucene related growth of repository size
    [OAK-6030] - Add tests for TarFiles
    [OAK-6563] - Session.hasCapability(...) should reflect read-only
    status of mounts
    [OAK-6568] - TarFiles returns null instead of an empty list in the
    graph
    [OAK-6569] - TarFiles should uniformly use TAR file names instead
    of paths
    [OAK-6570] - TarFiles represents referenced segments in a graph as
    a list instead of a set
    [OAK-6574] - Lucene index: include/exclude key pattern list
    [OAK-6578] - Enhance the UniqueEntryStoreStrategy to return list
    of matching values and paths
    [OAK-6585] - Allow to use patterns in the
    Mount#pathSupportingFragments
    [OAK-6587] - Provide a way to "force" Tika to treat binaries with
    a different mime type than the jcr:mimeType property
    [OAK-6588] - MongoDocumentStore should avoid logging warning when
    connect in read only mode
    [OAK-6589] - Close the fixture in oak run console
    [OAK-6590] - Avoid logging import statements for :load command
    execution
    [OAK-6592] - Remove path and rootBuilder from the
    CompositeNodeBuilder
    [OAK-6595] - Pre-populate the default store when running composite
    node store
    [OAK-6605] - Provide job name for async index update
    [OAK-6609] - Provide job name for JournalGC and RevisionGC job
    [OAK-6613] - Provide list of all bundled nodes within a given
    DocumentNodeState
    [OAK-6614] - Add ability to add 'excludeFromAggregation' setting
    while building index definition
    [OAK-6617] - Mounts.DefaultMount.getName() should not be empty
    [OAK-6621] - Initialize a default sensible stats provider in
    UploadStagingCache
    [OAK-6622] - Configure default core pool size for thread pool used
    by oak-lucene
    [OAK-6625] - Avoid oak-run compact inadvertently upgrading the
    segment format
    [OAK-6634] - Confusing log entries when memory requirements are
    not met at start of OnRC
    [OAK-6636] - Create a path cache for the CompositeNodeState
    [OAK-6637] - Release IndexNode lock in finally clause

New Feature

    [OAK-4348] - Cross language search via SMT
    [OAK-6514] - Make Lucene merge policy configurable
    [OAK-6593] - CacheStats metrics

Task

    [OAK-6576] - Refactor OakDirectory to be more manageable
    [OAK-6599] - Review testcases which do not confirm to Maven test
    pattern
    [OAK-6629] - Remove unused datastore code relying on JR2 data
    store caching

In addition to the above-mentioned changes, this release contains
all changes included up to the Apache Jackrabbit Oak 1.7.x release.

For more detailed information about all the changes in this and other
Oak releases, please see the Oak issue tracker at

  https://issues.apache.org/jira/browse/OAK

Release Contents
----------------

This release consists of a single source archive packaged as a zip file.
The archive can be unpacked with the jar tool from your JDK installation.
See the README.md file for instructions on how to build this release.

The source archive is accompanied by SHA1 and MD5 checksums and a PGP
signature that you can use to verify the authenticity of your download.
The public key used for the PGP signature can be found at
http://www.apache.org/dist/jackrabbit/KEYS.

About Apache Jackrabbit Oak
---------------------------

Jackrabbit Oak is a scalable, high-performance hierarchical content
repository designed for use as the foundation of modern world-class
web sites and other demanding content applications.

The Oak effort is a part of the Apache Jackrabbit project.
Apache Jackrabbit is a project of the Apache Software Foundation.

For more information, visit http://jackrabbit.apache.org/oak

About The Apache Software Foundation
------------------------------------

Established in 1999, The Apache Software Foundation provides organizational,
legal, and financial support for more than 140 freely-available,
collaboratively-developed Open Source projects. The pragmatic Apache License
enables individual and commercial users to easily deploy Apache software;
the Foundation's intellectual property framework limits the legal exposure
of its 3,800+ contributors.

For more information, visit http://www.apache.org/
