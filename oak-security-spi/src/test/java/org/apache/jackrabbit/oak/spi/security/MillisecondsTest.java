begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|FOREVER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|NEVER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|NULL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_class
specifier|public
class|class
name|MillisecondsTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testDurationParser
parameter_list|()
block|{
name|assertNull
argument_list|(
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1ms"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"  1ms"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"  1ms   "
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"  1ms  foobar"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1s"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1500
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1.5s"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1500
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1s 500ms"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1m"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|90
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1m30s"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
operator|*
literal|60
operator|*
literal|1000
operator|+
literal|90
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1h1m30s"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|36
operator|*
literal|60
operator|*
literal|60
operator|*
literal|1000
operator|+
literal|60
operator|*
literal|60
operator|*
literal|1000
operator|+
literal|90
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1.5d1h1m30s"
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDurationParserWithDefault
parameter_list|()
block|{
name|ConfigurationParameters
operator|.
name|Milliseconds
name|defValue
init|=
name|FOREVER
decl_stmt|;
name|assertEquals
argument_list|(
name|defValue
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|""
argument_list|,
name|defValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defValue
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|null
argument_list|,
name|defValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1ms"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"  1ms"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"  1ms   "
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"  1ms  foobar"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1s"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1500
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1.5s"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1500
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1s 500ms"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1m"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|90
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1m30s"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
operator|*
literal|60
operator|*
literal|1000
operator|+
literal|90
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1h1m30s"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|36
operator|*
literal|60
operator|*
literal|60
operator|*
literal|1000
operator|+
literal|60
operator|*
literal|60
operator|*
literal|1000
operator|+
literal|90
operator|*
literal|1000
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1.5d1h1m30s"
argument_list|,
name|defValue
argument_list|)
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullMilliseconds
parameter_list|()
block|{
name|assertSame
argument_list|(
name|NULL
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testForeverMilliseconds
parameter_list|()
block|{
name|assertSame
argument_list|(
name|FOREVER
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNeverMilliseconds
parameter_list|()
block|{
name|assertSame
argument_list|(
name|NEVER
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
name|Long
operator|.
name|MIN_VALUE
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|NEVER
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
name|NEVER
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHashCode
parameter_list|()
block|{
name|assertNotEquals
argument_list|(
name|NEVER
operator|.
name|hashCode
argument_list|()
argument_list|,
name|FOREVER
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|FOREVER
operator|.
name|hashCode
argument_list|()
argument_list|,
name|NULL
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1ms"
argument_list|,
name|NULL
argument_list|)
operator|.
name|hashCode
argument_list|()
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1s"
argument_list|,
name|NULL
argument_list|)
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotEquals
parameter_list|()
block|{
name|ConfigurationParameters
operator|.
name|Milliseconds
name|milliseconds
init|=
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1ms"
argument_list|,
name|NULL
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|NEVER
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|NULL
argument_list|,
name|milliseconds
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|milliseconds
argument_list|,
name|FOREVER
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|milliseconds
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1h"
argument_list|,
name|NULL
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|NEVER
operator|.
name|equals
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|NULL
operator|.
name|equals
argument_list|(
name|NULL
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEquals
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|NEVER
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
name|NEVER
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NULL
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
name|NULL
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FOREVER
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
name|FOREVER
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|ConfigurationParameters
operator|.
name|Milliseconds
name|milliseconds
init|=
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
literal|"1ms"
argument_list|,
name|NULL
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|milliseconds
argument_list|,
name|ConfigurationParameters
operator|.
name|Milliseconds
operator|.
name|of
argument_list|(
name|milliseconds
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

