begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
package|;
end_package

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|Privilege
operator|.
name|JCR_READ
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|jackrabbit
operator|.
name|authorization
operator|.
name|AccessControlUtils
operator|.
name|addAccessControlEntry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|security
operator|.
name|principal
operator|.
name|EveryonePrincipal
import|;
end_import

begin_comment
comment|/**  * {@code MessedUpCharacterCaseGetNodeTest} implements a performance test, which reads  * nodes from the repository. To determine the effect of access control  * evaluation the test can either run with anonymous or with admin.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|MessedUpCharacterCaseGetNodeTest
extends|extends
name|AbstractTest
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
name|Node
name|testRoot
decl_stmt|;
specifier|public
specifier|static
name|Benchmark
name|withAdmin
parameter_list|()
block|{
return|return
operator|new
name|MessedUpCharacterCaseGetNodeTest
argument_list|(
literal|"GetNodeWithAdmin"
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|Session
name|login
parameter_list|()
block|{
return|return
name|loginWriter
argument_list|()
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
name|Benchmark
name|withAnonymous
parameter_list|()
block|{
return|return
operator|new
name|MessedUpCharacterCaseGetNodeTest
argument_list|(
literal|"GetNodeWithAnonymous"
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|Session
name|login
parameter_list|()
block|{
return|return
name|loginAnonymous
argument_list|()
return|;
block|}
block|}
return|;
block|}
specifier|protected
name|MessedUpCharacterCaseGetNodeTest
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|Session
name|login
parameter_list|()
function_decl|;
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|beforeSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|loginWriter
argument_list|()
decl_stmt|;
name|testRoot
operator|=
name|session
operator|.
name|getRootNode
argument_list|()
operator|.
name|addNode
argument_list|(
name|MessedUpCharacterCaseGetNodeTest
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|"nt:unstructured"
argument_list|)
expr_stmt|;
name|testRoot
operator|.
name|addNode
argument_list|(
literal|"node1"
argument_list|)
operator|.
name|addNode
argument_list|(
literal|"node2"
argument_list|)
expr_stmt|;
name|addAccessControlEntry
argument_list|(
name|session
argument_list|,
name|testRoot
operator|.
name|getPath
argument_list|()
argument_list|,
name|EveryonePrincipal
operator|.
name|getInstance
argument_list|()
argument_list|,
operator|new
name|String
index|[]
block|{
name|JCR_READ
block|}
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|testRoot
operator|=
name|login
argument_list|()
operator|.
name|getNode
argument_list|(
name|testRoot
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|session
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|runTest
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
name|i
operator|++
control|)
block|{
name|testRoot
operator|.
name|getNode
argument_list|(
literal|"node1"
argument_list|)
operator|.
name|getNode
argument_list|(
literal|"node2"
argument_list|)
expr_stmt|;
name|testRoot
operator|.
name|getNode
argument_list|(
literal|"node1/node2"
argument_list|)
expr_stmt|;
name|testRoot
operator|.
name|hasNode
argument_list|(
literal|"node-does-not-exist"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|afterSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|loginWriter
argument_list|()
decl_stmt|;
name|session
operator|.
name|getNode
argument_list|(
name|testRoot
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|testRoot
operator|.
name|getSession
argument_list|()
operator|.
name|logout
argument_list|()
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|session
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

