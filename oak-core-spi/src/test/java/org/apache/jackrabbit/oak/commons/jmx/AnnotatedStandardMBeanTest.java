begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanAttributeInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanOperationInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanParameterInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|jmx
operator|.
name|Description
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|jmx
operator|.
name|Impact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|jmx
operator|.
name|ImpactOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|jmx
operator|.
name|Name
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"ALL"
argument_list|)
specifier|public
class|class
name|AnnotatedStandardMBeanTest
block|{
specifier|protected
specifier|static
name|ObjectName
name|objectName
decl_stmt|;
specifier|protected
specifier|static
name|MBeanServer
name|server
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
name|AnnotatedStandardMBean
name|object
init|=
operator|new
name|AnnotatedStandardMBean
argument_list|(
operator|new
name|Foo
argument_list|()
argument_list|,
name|FooMBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|objectName
operator|=
operator|new
name|ObjectName
argument_list|(
literal|"abc:TYPE=Test"
argument_list|)
expr_stmt|;
name|server
operator|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
expr_stmt|;
name|server
operator|.
name|registerMBean
argument_list|(
name|object
argument_list|,
name|objectName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|.
name|unregisterMBean
argument_list|(
name|objectName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|MBeanInfo
name|info
init|=
name|server
operator|.
name|getMBeanInfo
argument_list|(
name|objectName
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"MBean desc."
argument_list|,
name|info
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|MBeanAttributeInfo
name|a0
init|=
name|findAttribute
argument_list|(
name|info
argument_list|,
literal|"Getter"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getter"
argument_list|,
name|a0
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|MBeanAttributeInfo
name|a1
init|=
name|findAttribute
argument_list|(
name|info
argument_list|,
literal|"It"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"is"
argument_list|,
name|a1
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|MBeanAttributeInfo
name|a2
init|=
name|findAttribute
argument_list|(
name|info
argument_list|,
literal|"Setter"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"setter"
argument_list|,
name|a2
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|MBeanOperationInfo
name|op0
init|=
name|info
operator|.
name|getOperations
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"run"
argument_list|,
name|op0
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MBeanOperationInfo
operator|.
name|INFO
argument_list|,
name|op0
operator|.
name|getImpact
argument_list|()
argument_list|)
expr_stmt|;
name|MBeanParameterInfo
name|p0
init|=
name|op0
operator|.
name|getSignature
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"timeout"
argument_list|,
name|p0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"how long?"
argument_list|,
name|p0
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|MBeanAttributeInfo
name|findAttribute
parameter_list|(
name|MBeanInfo
name|info
parameter_list|,
name|String
name|name
parameter_list|)
block|{
for|for
control|(
name|MBeanAttributeInfo
name|a
range|:
name|info
operator|.
name|getAttributes
argument_list|()
control|)
block|{
if|if
condition|(
name|a
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
return|return
name|a
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Description
argument_list|(
literal|"MBean desc."
argument_list|)
specifier|public
interface|interface
name|FooMBean
block|{
annotation|@
name|Description
argument_list|(
literal|"getter"
argument_list|)
name|String
name|getGetter
parameter_list|()
function_decl|;
annotation|@
name|Description
argument_list|(
literal|"is"
argument_list|)
name|boolean
name|isIt
parameter_list|()
function_decl|;
annotation|@
name|Description
argument_list|(
literal|"setter"
argument_list|)
name|void
name|setSetter
parameter_list|(
name|long
name|s
parameter_list|)
function_decl|;
annotation|@
name|Description
argument_list|(
literal|"run"
argument_list|)
annotation|@
name|Impact
argument_list|(
name|ImpactOption
operator|.
name|INFO
argument_list|)
name|void
name|run
parameter_list|(
annotation|@
name|Name
argument_list|(
literal|"timeout"
argument_list|)
annotation|@
name|Description
argument_list|(
literal|"how long?"
argument_list|)
name|long
name|timeout
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
class|class
name|Foo
implements|implements
name|FooMBean
block|{
specifier|public
name|String
name|getGetter
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isIt
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|setSetter
parameter_list|(
name|long
name|s
parameter_list|)
block|{         }
specifier|public
name|void
name|run
parameter_list|(
name|long
name|timeout
parameter_list|)
block|{         }
block|}
block|}
end_class

end_unit

