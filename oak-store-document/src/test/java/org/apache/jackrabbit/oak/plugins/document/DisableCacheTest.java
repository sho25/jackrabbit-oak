begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_CHILDREN_CACHE_PERCENTAGE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_DIFF_CACHE_PERCENTAGE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_PREV_DOC_CACHE_PERCENTAGE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|DisableCacheTest
block|{
annotation|@
name|Rule
specifier|public
name|DocumentMKBuilderProvider
name|builderProvider
init|=
operator|new
name|DocumentMKBuilderProvider
argument_list|()
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|temp
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|disableNodeCache
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|cacheFolder
init|=
name|temp
operator|.
name|newFolder
argument_list|()
decl_stmt|;
name|DocumentMK
operator|.
name|Builder
name|builder
init|=
name|builderProvider
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setPersistentCache
argument_list|(
name|cacheFolder
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|memoryCacheDistribution
argument_list|(
literal|0
argument_list|,
name|DEFAULT_PREV_DOC_CACHE_PERCENTAGE
argument_list|,
name|DEFAULT_CHILDREN_CACHE_PERCENTAGE
argument_list|,
name|DEFAULT_DIFF_CACHE_PERCENTAGE
argument_list|)
expr_stmt|;
name|DocumentNodeStore
name|nodeStore
init|=
name|builder
operator|.
name|getNodeStore
argument_list|()
decl_stmt|;
name|Cache
argument_list|<
name|PathRev
argument_list|,
name|DocumentNodeState
argument_list|>
name|cache
init|=
name|nodeStore
operator|.
name|getNodeCache
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

