begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|NoSuchWorkspaceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|ValueFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|SimpleValueFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Descriptors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|kernel
operator|.
name|KernelNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|CompositeQueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|AuthenticationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|LoginContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|LoginContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|util
operator|.
name|GenericDescriptors
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|IDENTIFIER_STABILITY
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|LEVEL_1_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|LEVEL_2_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_AUTOCREATED_DEFINITIONS_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_INHERITANCE
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_INHERITANCE_SINGLE
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_MULTIPLE_BINARY_PROPERTIES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_MULTIVALUED_PROPERTIES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_ORDERABLE_CHILD_NODES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_OVERRIDES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_PRIMARY_ITEM_NAME_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_PROPERTY_TYPES
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_RESIDUAL_DEFINITIONS_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_SAME_NAME_SIBLINGS_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_UPDATE_IN_USE_SUPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|NODE_TYPE_MANAGEMENT_VALUE_CONSTRAINTS_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_ACCESS_CONTROL_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_ACTIVITIES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_BASELINES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_JOURNALED_OBSERVATION_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_LIFECYCLE_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_LOCKING_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_NODE_AND_PROPERTY_WITH_SAME_NAME_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_NODE_TYPE_MANAGEMENT_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_OBSERVATION_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_QUERY_SQL_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_RETENTION_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_SHAREABLE_NODES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_SIMPLE_VERSIONING_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_TRANSACTIONS_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_UNFILED_CONTENT_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_UPDATE_MIXIN_NODE_TYPES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_UPDATE_PRIMARY_NODE_TYPE_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_VERSIONING_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_WORKSPACE_MANAGEMENT_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_XML_EXPORT_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|OPTION_XML_IMPORT_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|QUERY_FULL_TEXT_SEARCH_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|QUERY_JOINS
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|QUERY_JOINS_NONE
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|QUERY_LANGUAGES
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|QUERY_STORED_QUERIES_SUPPORTED
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|QUERY_XPATH_DOC_ORDER
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|QUERY_XPATH_POS_INDEX
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|REP_NAME_DESC
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|REP_VENDOR_DESC
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|REP_VENDOR_URL_DESC
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|REP_VERSION_DESC
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|SPEC_NAME_DESC
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|SPEC_VERSION_DESC
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|jcr
operator|.
name|Repository
operator|.
name|WRITE_SUPPORTED
import|;
end_import

begin_comment
comment|/**  * {@code MicroKernel}-based implementation of  * the {@link ContentRepository} interface.  */
end_comment

begin_class
specifier|public
class|class
name|ContentRepositoryImpl
implements|implements
name|ContentRepository
block|{
specifier|private
specifier|final
name|NodeStore
name|nodeStore
decl_stmt|;
specifier|private
specifier|final
name|CommitHook
name|commitHook
decl_stmt|;
specifier|private
specifier|final
name|String
name|defaultWorkspaceName
decl_stmt|;
specifier|private
specifier|final
name|SecurityProvider
name|securityProvider
decl_stmt|;
specifier|private
specifier|final
name|QueryIndexProvider
name|indexProvider
decl_stmt|;
specifier|private
name|GenericDescriptors
name|descriptors
decl_stmt|;
comment|/**      * Creates an content repository instance based on the given, already      * initialized components.      *      * @param nodeStore            the node store this repository is based upon.      * @param commitHook           the hook to use for processing commits      * @param defaultWorkspaceName the default workspace name;      * @param indexProvider        index provider      * @param securityProvider     The configured security provider.      */
specifier|public
name|ContentRepositoryImpl
parameter_list|(
annotation|@
name|Nonnull
name|NodeStore
name|nodeStore
parameter_list|,
annotation|@
name|Nonnull
name|CommitHook
name|commitHook
parameter_list|,
annotation|@
name|Nonnull
name|String
name|defaultWorkspaceName
parameter_list|,
annotation|@
name|Nullable
name|QueryIndexProvider
name|indexProvider
parameter_list|,
annotation|@
name|Nonnull
name|SecurityProvider
name|securityProvider
parameter_list|)
block|{
name|this
operator|.
name|nodeStore
operator|=
name|checkNotNull
argument_list|(
name|nodeStore
argument_list|)
expr_stmt|;
name|this
operator|.
name|commitHook
operator|=
name|checkNotNull
argument_list|(
name|commitHook
argument_list|)
expr_stmt|;
name|this
operator|.
name|defaultWorkspaceName
operator|=
name|checkNotNull
argument_list|(
name|defaultWorkspaceName
argument_list|)
expr_stmt|;
name|this
operator|.
name|securityProvider
operator|=
name|checkNotNull
argument_list|(
name|securityProvider
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexProvider
operator|=
name|indexProvider
operator|!=
literal|null
condition|?
name|indexProvider
else|:
operator|new
name|CompositeQueryIndexProvider
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|ContentSession
name|login
parameter_list|(
name|Credentials
name|credentials
parameter_list|,
name|String
name|workspaceName
parameter_list|)
throws|throws
name|LoginException
throws|,
name|NoSuchWorkspaceException
block|{
if|if
condition|(
name|workspaceName
operator|==
literal|null
condition|)
block|{
name|workspaceName
operator|=
name|defaultWorkspaceName
expr_stmt|;
block|}
comment|// TODO: support multiple workspaces. See OAK-118
if|if
condition|(
operator|!
name|defaultWorkspaceName
operator|.
name|equals
argument_list|(
name|workspaceName
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|NoSuchWorkspaceException
argument_list|(
name|workspaceName
argument_list|)
throw|;
block|}
name|LoginContextProvider
name|lcProvider
init|=
name|securityProvider
operator|.
name|getConfiguration
argument_list|(
name|AuthenticationConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getLoginContextProvider
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|LoginContext
name|loginContext
init|=
name|lcProvider
operator|.
name|getLoginContext
argument_list|(
name|credentials
argument_list|,
name|workspaceName
argument_list|)
decl_stmt|;
name|loginContext
operator|.
name|login
argument_list|()
expr_stmt|;
return|return
operator|new
name|ContentSessionImpl
argument_list|(
name|loginContext
argument_list|,
name|securityProvider
argument_list|,
name|workspaceName
argument_list|,
name|nodeStore
argument_list|,
name|commitHook
argument_list|,
name|indexProvider
argument_list|)
return|;
block|}
specifier|public
name|NodeStore
name|getNodeStore
parameter_list|()
block|{
return|return
name|nodeStore
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Descriptors
name|getDescriptors
parameter_list|()
block|{
if|if
condition|(
name|descriptors
operator|==
literal|null
condition|)
block|{
name|descriptors
operator|=
name|createDescriptors
argument_list|()
expr_stmt|;
block|}
return|return
name|descriptors
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Nonnull
specifier|protected
name|GenericDescriptors
name|createDescriptors
parameter_list|()
block|{
specifier|final
name|ValueFactory
name|valueFactory
init|=
operator|new
name|SimpleValueFactory
argument_list|()
decl_stmt|;
specifier|final
name|Value
name|trueValue
init|=
name|valueFactory
operator|.
name|createValue
argument_list|(
literal|true
argument_list|)
decl_stmt|;
specifier|final
name|Value
name|falseValue
init|=
name|valueFactory
operator|.
name|createValue
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|GenericDescriptors
name|gd
init|=
operator|new
name|GenericDescriptors
argument_list|()
operator|.
name|put
argument_list|(
name|IDENTIFIER_STABILITY
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|Repository
operator|.
name|IDENTIFIER_STABILITY_METHOD_DURATION
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|LEVEL_1_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|LEVEL_2_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_NODE_TYPE_MANAGEMENT_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_AUTOCREATED_DEFINITIONS_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_INHERITANCE
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|NODE_TYPE_MANAGEMENT_INHERITANCE_SINGLE
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_MULTIPLE_BINARY_PROPERTIES_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_MULTIVALUED_PROPERTIES_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_ORDERABLE_CHILD_NODES_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_OVERRIDES_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_PRIMARY_ITEM_NAME_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_PROPERTY_TYPES
argument_list|,
operator|new
name|Value
index|[]
block|{
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_STRING
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_BINARY
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_LONG
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_LONG
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_DOUBLE
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_DECIMAL
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_DATE
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_BOOLEAN
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_NAME
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_PATH
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_REFERENCE
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_WEAKREFERENCE
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_URI
argument_list|)
block|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|PropertyType
operator|.
name|TYPENAME_UNDEFINED
argument_list|)
block|}
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_RESIDUAL_DEFINITIONS_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// SNS are not supported (OAK-1224)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_SAME_NAME_SIBLINGS_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_VALUE_CONSTRAINTS_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|NODE_TYPE_MANAGEMENT_UPDATE_IN_USE_SUPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_ACCESS_CONTROL_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_JOURNALED_OBSERVATION_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_LIFECYCLE_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// locking support added via JCR layer
operator|.
name|put
argument_list|(
name|OPTION_LOCKING_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_OBSERVATION_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_NODE_AND_PROPERTY_WITH_SAME_NAME_SUPPORTED
argument_list|,
name|supportsSameNameNodeAndProperties
argument_list|()
condition|?
name|trueValue
else|:
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_QUERY_SQL_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_RETENTION_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_SHAREABLE_NODES_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// todo: let plugin set the descriptor
operator|.
name|put
argument_list|(
name|OPTION_SIMPLE_VERSIONING_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_TRANSACTIONS_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_UNFILED_CONTENT_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_UPDATE_MIXIN_NODE_TYPES_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_UPDATE_PRIMARY_NODE_TYPE_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|OPTION_VERSIONING_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// TODO OAK-118
operator|.
name|put
argument_list|(
name|OPTION_WORKSPACE_MANAGEMENT_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// xml export support added via JCR layer
operator|.
name|put
argument_list|(
name|OPTION_XML_EXPORT_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// xml import support added via JCR layer
operator|.
name|put
argument_list|(
name|OPTION_XML_IMPORT_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// TODO OAK-827
operator|.
name|put
argument_list|(
name|OPTION_ACTIVITIES_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
comment|// TODO OAK-1403
operator|.
name|put
argument_list|(
name|OPTION_BASELINES_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|QUERY_FULL_TEXT_SEARCH_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|QUERY_JOINS
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|QUERY_JOINS_NONE
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|QUERY_LANGUAGES
argument_list|,
operator|new
name|Value
index|[
literal|0
index|]
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|QUERY_STORED_QUERIES_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|QUERY_XPATH_DOC_ORDER
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|QUERY_XPATH_POS_INDEX
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|REP_NAME_DESC
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
literal|"Apache Jackrabbit Oak"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|REP_VERSION_DESC
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
name|getVersion
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|REP_VENDOR_DESC
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
literal|"The Apache Software Foundation"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|REP_VENDOR_URL_DESC
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
literal|"http://www.apache.org/"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|SPEC_NAME_DESC
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
literal|"Content Repository for Java Technology API"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|SPEC_VERSION_DESC
argument_list|,
name|valueFactory
operator|.
name|createValue
argument_list|(
literal|"2.0"
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
operator|.
name|put
argument_list|(
name|WRITE_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
comment|// jackrabbit API specific descriptors
name|gd
operator|.
name|put
argument_list|(
name|JackrabbitRepository
operator|.
name|OPTION_USER_MANAGEMENT_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|gd
operator|.
name|put
argument_list|(
name|JackrabbitRepository
operator|.
name|OPTION_PRINCIPAL_MANAGEMENT_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|gd
operator|.
name|put
argument_list|(
name|JackrabbitRepository
operator|.
name|OPTION_PRIVILEGE_MANAGEMENT_SUPPORTED
argument_list|,
name|falseValue
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|SecurityConfiguration
name|sc
range|:
name|securityProvider
operator|.
name|getConfigurations
argument_list|()
control|)
block|{
name|String
name|name
init|=
name|sc
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|UserConfiguration
operator|.
name|NAME
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|gd
operator|.
name|put
argument_list|(
name|JackrabbitRepository
operator|.
name|OPTION_USER_MANAGEMENT_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|PrincipalConfiguration
operator|.
name|NAME
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|gd
operator|.
name|put
argument_list|(
name|JackrabbitRepository
operator|.
name|OPTION_PRINCIPAL_MANAGEMENT_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|PrivilegeConfiguration
operator|.
name|NAME
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|gd
operator|.
name|put
argument_list|(
name|JackrabbitRepository
operator|.
name|OPTION_PRIVILEGE_MANAGEMENT_SUPPORTED
argument_list|,
name|trueValue
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|gd
return|;
block|}
comment|/**      * Checks if this repository supports same name node and properties. currently this is tied to the underlying      * node store implementation class.      *      * @return {@code true} if this repository supports SNNP.      */
specifier|private
name|boolean
name|supportsSameNameNodeAndProperties
parameter_list|()
block|{
return|return
operator|!
operator|(
name|nodeStore
operator|instanceof
name|KernelNodeStore
operator|)
return|;
block|}
comment|/**      * Returns the version of this repository implementation.      * @return the version      */
annotation|@
name|Nonnull
specifier|private
specifier|static
name|String
name|getVersion
parameter_list|()
block|{
name|InputStream
name|stream
init|=
name|ContentRepositoryImpl
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/META-INF/maven/org.apache.jackrabbit/oak-core/pom.properties"
argument_list|)
decl_stmt|;
if|if
condition|(
name|stream
operator|!=
literal|null
condition|)
block|{
try|try
block|{
try|try
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|stream
argument_list|)
expr_stmt|;
return|return
name|properties
operator|.
name|getProperty
argument_list|(
literal|"version"
argument_list|)
return|;
block|}
finally|finally
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
return|return
literal|"SNAPSHOT"
return|;
block|}
block|}
end_class

end_unit

