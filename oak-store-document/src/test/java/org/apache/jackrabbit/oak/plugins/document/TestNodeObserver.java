begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|observation
operator|.
name|NodeObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
operator|.
name|newHashMap
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
operator|.
name|newHashSet
import|;
end_import

begin_class
specifier|public
class|class
name|TestNodeObserver
extends|extends
name|NodeObserver
block|{
specifier|public
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|added
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|public
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|deleted
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|public
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|changed
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|public
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|properties
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|public
name|TestNodeObserver
parameter_list|(
name|String
name|path
parameter_list|,
name|String
modifier|...
name|propertyNames
parameter_list|)
block|{
name|super
argument_list|(
name|path
argument_list|,
name|propertyNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|added
parameter_list|(
annotation|@
name|NotNull
name|String
name|path
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|added
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|deleted
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|changed
parameter_list|,
annotation|@
name|NotNull
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|,
annotation|@
name|NotNull
name|CommitInfo
name|commitInfo
parameter_list|)
block|{
name|this
operator|.
name|added
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashSet
argument_list|(
name|added
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|properties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashMap
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|deleted
parameter_list|(
annotation|@
name|NotNull
name|String
name|path
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|added
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|deleted
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|changed
parameter_list|,
annotation|@
name|NotNull
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|,
annotation|@
name|NotNull
name|CommitInfo
name|commitInfo
parameter_list|)
block|{
name|this
operator|.
name|deleted
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashSet
argument_list|(
name|deleted
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|properties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashMap
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|changed
parameter_list|(
annotation|@
name|NotNull
name|String
name|path
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|added
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|deleted
parameter_list|,
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|changed
parameter_list|,
annotation|@
name|NotNull
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|,
annotation|@
name|NotNull
name|CommitInfo
name|commitInfo
parameter_list|)
block|{
name|this
operator|.
name|changed
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashSet
argument_list|(
name|changed
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|properties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashMap
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|added
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleted
operator|.
name|clear
argument_list|()
expr_stmt|;
name|changed
operator|.
name|clear
argument_list|()
expr_stmt|;
name|properties
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

