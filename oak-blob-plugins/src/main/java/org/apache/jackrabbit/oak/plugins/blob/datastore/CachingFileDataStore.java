begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|AbstractSharedCachingDataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|AbstractSharedBackend
import|;
end_import

begin_comment
comment|/**  * File system implementation of {@link AbstractSharedCachingDataStore}.  */
end_comment

begin_class
specifier|public
class|class
name|CachingFileDataStore
extends|extends
name|AbstractSharedCachingDataStore
block|{
specifier|private
name|Properties
name|properties
decl_stmt|;
comment|/**      * The minimum size of an object that should be stored in this data store.      */
specifier|private
name|int
name|minRecordLength
init|=
literal|16
operator|*
literal|1024
decl_stmt|;
specifier|protected
name|AbstractSharedBackend
name|createBackend
parameter_list|()
block|{
name|FSBackend
name|backend
init|=
operator|new
name|FSBackend
argument_list|()
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|properties
operator|!=
literal|null
condition|)
block|{
name|backend
operator|.
name|setProperties
argument_list|(
name|this
operator|.
name|properties
argument_list|)
expr_stmt|;
block|}
return|return
name|backend
return|;
block|}
comment|/*------------------------------------------- Getters& Setters-----------------------------**/
comment|/**      * Properties required to configure the Backend      */
specifier|public
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
specifier|protected
name|AbstractSharedBackend
name|getBackend
parameter_list|()
block|{
return|return
name|backend
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getMinRecordLength
parameter_list|()
block|{
return|return
name|minRecordLength
return|;
block|}
specifier|public
name|void
name|setMinRecordLength
parameter_list|(
name|int
name|minRecordLength
parameter_list|)
block|{
name|this
operator|.
name|minRecordLength
operator|=
name|minRecordLength
expr_stmt|;
block|}
block|}
end_class

end_unit

