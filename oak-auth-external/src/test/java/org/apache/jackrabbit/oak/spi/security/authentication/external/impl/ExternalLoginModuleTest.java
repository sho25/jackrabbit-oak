begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|AuthInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NamePathMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|ImpersonationCredentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|PreAuthenticatedLogin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|callback
operator|.
name|CredentialsCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|callback
operator|.
name|RepositoryCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|callback
operator|.
name|WhiteboardCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|credentials
operator|.
name|CredentialsSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityProviderManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|TestIdentityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|EmptyPrincipalProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|DefaultWhiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|Whiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|GuestCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|Callback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|CallbackHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|UnsupportedCallbackException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
operator|.
name|OAK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|AbstractLoginModule
operator|.
name|SHARED_KEY_ATTRIBUTES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|AbstractLoginModule
operator|.
name|SHARED_KEY_PRE_AUTH_LOGIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|TestIdentityProvider
operator|.
name|DEFAULT_IDP_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|ExternalIdentityConstants
operator|.
name|REP_EXTERNAL_ID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|SyncHandlerMapping
operator|.
name|PARAM_IDP_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|SyncHandlerMapping
operator|.
name|PARAM_SYNC_HANDLER_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doThrow
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|never
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|withSettings
import|;
end_import

begin_class
specifier|public
class|class
name|ExternalLoginModuleTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
specifier|final
name|ExternalLoginModule
name|loginModule
init|=
operator|new
name|ExternalLoginModule
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Whiteboard
name|wb
init|=
name|spy
argument_list|(
operator|new
name|DefaultWhiteboard
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|ExternalIdentityProviderManager
name|extIPMgr
init|=
name|mock
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|SyncManager
name|syncManager
init|=
name|mock
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|CallbackHandler
name|createCallbackHandler
parameter_list|(
annotation|@
name|Nullable
name|Whiteboard
name|wb
parameter_list|,
annotation|@
name|Nullable
name|ContentRepository
name|contentRepository
parameter_list|,
annotation|@
name|Nullable
name|SecurityProvider
name|securityProvider
parameter_list|,
annotation|@
name|Nullable
name|Credentials
name|creds
parameter_list|)
block|{
return|return
name|callbacks
lambda|->
block|{
for|for
control|(
name|Callback
name|cb
range|:
name|callbacks
control|)
block|{
if|if
condition|(
name|cb
operator|instanceof
name|WhiteboardCallback
condition|)
block|{
operator|(
operator|(
name|WhiteboardCallback
operator|)
name|cb
operator|)
operator|.
name|setWhiteboard
argument_list|(
name|wb
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|cb
operator|instanceof
name|RepositoryCallback
condition|)
block|{
operator|(
operator|(
name|RepositoryCallback
operator|)
name|cb
operator|)
operator|.
name|setContentRepository
argument_list|(
name|contentRepository
argument_list|)
expr_stmt|;
operator|(
operator|(
name|RepositoryCallback
operator|)
name|cb
operator|)
operator|.
name|setSecurityProvider
argument_list|(
name|securityProvider
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|cb
operator|instanceof
name|CredentialsCallback
condition|)
block|{
operator|(
operator|(
name|CredentialsCallback
operator|)
name|cb
operator|)
operator|.
name|setCredentials
argument_list|(
name|creds
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|UnsupportedCallbackException
argument_list|(
name|cb
argument_list|)
throw|;
block|}
block|}
block|}
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitializeMissingWhiteboard
parameter_list|()
throws|throws
name|LoginException
block|{
name|loginModule
operator|.
name|setIdpManager
argument_list|(
name|extIPMgr
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|setSyncManager
argument_list|(
name|syncManager
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|mock
argument_list|(
name|CallbackHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|cbh
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
literal|"idp"
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|extIPMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|getProvider
argument_list|(
literal|"idp"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|syncManager
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitializeMissingIdpSyncHandler
parameter_list|()
throws|throws
name|LoginException
block|{
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
literal|"idp"
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitializedUnknownIdpSyncHandlerNames
parameter_list|()
throws|throws
name|LoginException
block|{
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
literal|"idp"
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|extIPMgr
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getProvider
argument_list|(
literal|"idp"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|syncManager
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitializEmptyIdpName
parameter_list|()
block|{
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|extIPMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|getProvider
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitializEmptySyncHanderName
parameter_list|()
block|{
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|syncManager
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|getSyncHandler
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoginWithoutInit
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoginMissingSyncHandler
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
literal|"idpName"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
literal|"idpName"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoginMissingUserId
parameter_list|()
throws|throws
name|Exception
block|{
name|ExternalIdentityProvider
name|idp
init|=
name|mock
argument_list|(
name|ExternalIdentityProvider
operator|.
name|class
argument_list|,
name|withSettings
argument_list|()
operator|.
name|extraInterfaces
argument_list|(
name|CredentialsSupport
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
operator|(
operator|(
name|CredentialsSupport
operator|)
name|idp
operator|)
operator|.
name|getUserId
argument_list|(
name|any
argument_list|(
name|Credentials
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|when
argument_list|(
operator|(
operator|(
name|CredentialsSupport
operator|)
name|idp
operator|)
operator|.
name|getCredentialClasses
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|GuestCredentials
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|idp
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|getContentRepository
argument_list|()
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
operator|new
name|GuestCredentials
argument_list|()
argument_list|)
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|cbh
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoginCommitUpdatesSubject
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_ATTRIBUTES
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"att"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|getContentRepository
argument_list|()
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
name|subject
argument_list|,
name|cbh
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loginModule
operator|.
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|AuthInfo
name|authInfo
init|=
name|subject
operator|.
name|getPublicCredentials
argument_list|(
name|AuthInfo
operator|.
name|class
argument_list|)
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|authInfo
operator|.
name|getAttribute
argument_list|(
literal|"att"
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoginCommitEmptyPrincipalSet
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_ATTRIBUTES
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"att"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|PrincipalConfiguration
name|pc
init|=
name|when
argument_list|(
name|mock
argument_list|(
name|PrincipalConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getPrincipalProvider
argument_list|(
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|EmptyPrincipalProvider
operator|.
name|INSTANCE
argument_list|)
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|SecurityProvider
name|sp
init|=
name|spy
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|sp
operator|.
name|getConfiguration
argument_list|(
name|PrincipalConfiguration
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|pc
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|getContentRepository
argument_list|()
argument_list|,
name|sp
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
name|subject
argument_list|,
name|cbh
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|subject
operator|.
name|getPublicCredentials
argument_list|(
name|AuthInfo
operator|.
name|class
argument_list|)
operator|.
name|iterator
argument_list|()
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|subject
operator|.
name|getPrincipals
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoginCommitImpersonationCredentials
parameter_list|()
throws|throws
name|Exception
block|{
name|SimpleCredentials
name|sc
init|=
operator|new
name|SimpleCredentials
argument_list|(
name|ID_TEST_USER
argument_list|,
operator|new
name|char
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|ImpersonationCredentials
name|creds
init|=
operator|new
name|ImpersonationCredentials
argument_list|(
name|sc
argument_list|,
name|AuthInfo
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|ExternalIdentityProvider
name|idp
init|=
name|mock
argument_list|(
name|ExternalIdentityProvider
operator|.
name|class
argument_list|,
name|withSettings
argument_list|()
operator|.
name|extraInterfaces
argument_list|(
name|CredentialsSupport
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|idp
operator|.
name|authenticate
argument_list|(
name|creds
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
operator|.
name|TestUser
argument_list|(
name|ID_TEST_USER
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
operator|(
operator|(
name|CredentialsSupport
operator|)
name|idp
operator|)
operator|.
name|getUserId
argument_list|(
name|any
argument_list|(
name|Credentials
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ID_TEST_USER
argument_list|)
expr_stmt|;
name|when
argument_list|(
operator|(
operator|(
name|CredentialsSupport
operator|)
name|idp
operator|)
operator|.
name|getCredentialClasses
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|ImpersonationCredentials
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Map
name|attr
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"attr"
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|when
argument_list|(
operator|(
operator|(
name|CredentialsSupport
operator|)
name|idp
operator|)
operator|.
name|getAttributes
argument_list|(
name|creds
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|attr
argument_list|)
expr_stmt|;
name|when
argument_list|(
operator|(
operator|(
name|CredentialsSupport
operator|)
name|idp
operator|)
operator|.
name|getAttributes
argument_list|(
name|sc
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|idp
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|getContentRepository
argument_list|()
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
name|creds
argument_list|)
decl_stmt|;
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
name|subject
argument_list|,
name|cbh
argument_list|,
name|Maps
operator|.
name|newHashMap
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loginModule
operator|.
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|AuthInfo
name|authInfo
init|=
name|subject
operator|.
name|getPublicCredentials
argument_list|(
name|AuthInfo
operator|.
name|class
argument_list|)
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|authInfo
operator|.
name|getAttribute
argument_list|(
literal|"attr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoginCommitReadonlySubject
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_ATTRIBUTES
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"att"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|getContentRepository
argument_list|()
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Subject
name|readOnly
init|=
operator|new
name|Subject
argument_list|(
literal|true
argument_list|,
name|Collections
operator|.
name|emptySet
argument_list|()
argument_list|,
name|Collections
operator|.
name|emptySet
argument_list|()
argument_list|,
name|Collections
operator|.
name|emptySet
argument_list|()
argument_list|)
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
name|readOnly
argument_list|,
name|cbh
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|loginModule
operator|.
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|LoginException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testSyncUserMissingRoot
parameter_list|()
throws|throws
name|LoginException
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|loginModule
operator|.
name|login
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LoginException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|SyncException
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|LoginException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testSyncUserMissingUserManager
parameter_list|()
throws|throws
name|LoginException
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|UserConfiguration
name|uc
init|=
name|mock
argument_list|(
name|UserConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|SecurityProvider
name|sp
init|=
name|when
argument_list|(
name|mock
argument_list|(
name|SecurityProvider
operator|.
name|class
argument_list|)
operator|.
name|getConfiguration
argument_list|(
name|UserConfiguration
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|uc
argument_list|)
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|getContentRepository
argument_list|()
argument_list|,
name|sp
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|cbh
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|loginModule
operator|.
name|login
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LoginException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|SyncException
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|LoginException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testSyncUserFailsCommit
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|ContentRepository
name|repository
init|=
name|spy
argument_list|(
name|getContentRepository
argument_list|()
argument_list|)
decl_stmt|;
name|ContentSession
name|s
init|=
name|spy
argument_list|(
name|adminSession
argument_list|)
decl_stmt|;
name|Root
name|r
init|=
name|spy
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|doThrow
argument_list|(
operator|new
name|CommitFailedException
argument_list|(
name|OAK
argument_list|,
operator|-
literal|1
argument_list|,
literal|"error"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|r
argument_list|)
operator|.
name|commit
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|r
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|doReturn
argument_list|(
name|s
argument_list|)
operator|.
name|when
argument_list|(
name|repository
argument_list|)
operator|.
name|login
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|s
operator|.
name|getLatestRoot
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|repository
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
name|ID_TEST_USER
argument_list|)
argument_list|)
expr_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|cbh
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|loginModule
operator|.
name|login
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LoginException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|SyncException
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testValidateUser
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
literal|"local"
argument_list|)
argument_list|)
expr_stmt|;
name|User
name|u
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
literal|"local"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|u
operator|.
name|setProperty
argument_list|(
name|REP_EXTERNAL_ID
argument_list|,
name|getValueFactory
argument_list|()
operator|.
name|createValue
argument_list|(
literal|"local;"
operator|+
name|TestIdentityProvider
operator|.
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|getContentRepository
argument_list|()
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|cbh
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|loginModule
operator|.
name|login
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
literal|"local"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|LoginException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testValidateUserFailsCommit
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|extIPMgr
operator|.
name|getProvider
argument_list|(
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|syncManager
operator|.
name|getSyncHandler
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultSyncHandler
argument_list|(
operator|new
name|DefaultSyncConfigImpl
argument_list|()
operator|.
name|setName
argument_list|(
literal|"syncHandler"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|extIPMgr
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sharedState
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|sharedState
operator|.
name|put
argument_list|(
name|SHARED_KEY_PRE_AUTH_LOGIN
argument_list|,
operator|new
name|PreAuthenticatedLogin
argument_list|(
literal|"local"
argument_list|)
argument_list|)
expr_stmt|;
name|User
name|u
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
literal|"local"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|u
operator|.
name|setProperty
argument_list|(
name|REP_EXTERNAL_ID
argument_list|,
name|getValueFactory
argument_list|()
operator|.
name|createValue
argument_list|(
literal|"local;"
operator|+
name|TestIdentityProvider
operator|.
name|DEFAULT_IDP_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|ContentRepository
name|repository
init|=
name|spy
argument_list|(
name|getContentRepository
argument_list|()
argument_list|)
decl_stmt|;
name|ContentSession
name|s
init|=
name|spy
argument_list|(
name|adminSession
argument_list|)
decl_stmt|;
name|Root
name|r
init|=
name|spy
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|doThrow
argument_list|(
operator|new
name|CommitFailedException
argument_list|(
name|OAK
argument_list|,
operator|-
literal|1
argument_list|,
literal|"error"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|r
argument_list|)
operator|.
name|commit
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|r
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|doReturn
argument_list|(
name|s
argument_list|)
operator|.
name|when
argument_list|(
name|repository
argument_list|)
operator|.
name|login
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|s
operator|.
name|getLatestRoot
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|CallbackHandler
name|cbh
init|=
name|createCallbackHandler
argument_list|(
name|wb
argument_list|,
name|repository
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|loginModule
operator|.
name|initialize
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
name|cbh
argument_list|,
name|sharedState
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_IDP_NAME
argument_list|,
name|DEFAULT_IDP_NAME
argument_list|,
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
literal|"syncHandler"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|loginModule
operator|.
name|login
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LoginException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|SyncException
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
end_class

end_unit

