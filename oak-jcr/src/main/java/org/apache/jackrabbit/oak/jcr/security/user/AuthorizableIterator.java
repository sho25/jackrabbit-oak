begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NoSuchElementException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|flat
operator|.
name|PropertySequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CoreValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * AuthorizableIterator...  */
end_comment

begin_class
class|class
name|AuthorizableIterator
implements|implements
name|Iterator
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AuthorizableIterator
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|Iterator
argument_list|<
name|?
argument_list|>
name|authorizableIds
decl_stmt|;
specifier|private
specifier|final
name|AuthorizableTypePredicate
name|predicate
decl_stmt|;
specifier|private
specifier|final
name|UserManagerImpl
name|userManager
decl_stmt|;
specifier|private
specifier|final
name|long
name|size
decl_stmt|;
specifier|private
name|Authorizable
name|next
decl_stmt|;
name|AuthorizableIterator
parameter_list|(
name|List
argument_list|<
name|CoreValue
argument_list|>
name|authorizableNodeIds
parameter_list|,
name|int
name|authorizableType
parameter_list|,
name|UserManagerImpl
name|userManager
parameter_list|)
block|{
name|this
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|authorizableNodeIds
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|,
name|authorizableType
argument_list|,
name|userManager
argument_list|,
name|authorizableNodeIds
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|AuthorizableIterator
parameter_list|(
name|PropertySequence
name|authorizableNodeIds
parameter_list|,
name|int
name|authorizableType
parameter_list|,
name|UserManagerImpl
name|userManager
parameter_list|)
block|{
name|this
argument_list|(
name|authorizableNodeIds
operator|.
name|iterator
argument_list|()
argument_list|,
name|authorizableType
argument_list|,
name|userManager
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// TODO calculate size here
block|}
name|AuthorizableIterator
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|authorizablePaths
parameter_list|,
name|int
name|authorizableType
parameter_list|,
name|UserManagerImpl
name|userManager
parameter_list|)
block|{
name|this
argument_list|(
name|authorizablePaths
operator|.
name|iterator
argument_list|()
argument_list|,
name|authorizableType
argument_list|,
name|userManager
argument_list|,
name|authorizablePaths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|AuthorizableIterator
parameter_list|(
name|Iterator
argument_list|<
name|?
argument_list|>
name|authorizableIds
parameter_list|,
name|int
name|authorizableType
parameter_list|,
name|UserManagerImpl
name|userManager
parameter_list|,
name|long
name|size
parameter_list|)
block|{
name|this
operator|.
name|authorizableIds
operator|=
name|authorizableIds
expr_stmt|;
name|this
operator|.
name|predicate
operator|=
operator|new
name|AuthorizableTypePredicate
argument_list|(
name|authorizableType
argument_list|)
expr_stmt|;
name|this
operator|.
name|userManager
operator|=
name|userManager
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
name|next
operator|=
name|fetchNext
argument_list|()
expr_stmt|;
block|}
comment|//-----------------------------------------------------------< Iterator>---
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|next
operator|!=
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Authorizable
name|next
parameter_list|()
block|{
if|if
condition|(
name|next
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NoSuchElementException
argument_list|()
throw|;
block|}
name|Authorizable
name|a
init|=
name|next
decl_stmt|;
name|next
operator|=
name|fetchNext
argument_list|()
expr_stmt|;
return|return
name|a
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
comment|//--------------------------------------------------------------------------
name|long
name|getSize
parameter_list|()
block|{
return|return
name|size
return|;
block|}
specifier|private
name|Authorizable
name|fetchNext
parameter_list|()
block|{
while|while
condition|(
name|authorizableIds
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|next
init|=
name|authorizableIds
operator|.
name|next
argument_list|()
decl_stmt|;
try|try
block|{
name|Authorizable
name|a
decl_stmt|;
if|if
condition|(
name|next
operator|instanceof
name|String
condition|)
block|{
name|a
operator|=
name|userManager
operator|.
name|getAuthorizableByPath
argument_list|(
name|next
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|nid
init|=
name|getNodeId
argument_list|(
name|next
argument_list|)
decl_stmt|;
name|a
operator|=
name|userManager
operator|.
name|getAuthorizableByNodeID
argument_list|(
name|nid
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|a
operator|!=
literal|null
operator|&&
name|predicate
operator|.
name|evaluate
argument_list|(
name|a
argument_list|)
condition|)
block|{
return|return
name|a
return|;
block|}
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
specifier|static
name|String
name|getNodeId
parameter_list|(
name|Object
name|o
parameter_list|)
throws|throws
name|RepositoryException
block|{
if|if
condition|(
name|o
operator|instanceof
name|CoreValue
condition|)
block|{
return|return
operator|(
operator|(
name|CoreValue
operator|)
name|o
operator|)
operator|.
name|getString
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|o
operator|instanceof
name|Value
condition|)
block|{
return|return
operator|(
operator|(
name|Value
operator|)
name|o
operator|)
operator|.
name|getString
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|o
operator|instanceof
name|Property
condition|)
block|{
return|return
operator|(
operator|(
name|Property
operator|)
name|o
operator|)
operator|.
name|getParent
argument_list|()
operator|.
name|getUUID
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|o
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

