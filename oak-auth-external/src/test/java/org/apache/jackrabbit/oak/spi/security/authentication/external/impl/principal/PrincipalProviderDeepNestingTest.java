begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|principal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|basic
operator|.
name|DefaultSyncConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|PrincipalProviderDeepNestingTest
extends|extends
name|ExternalGroupPrincipalProviderTest
block|{
annotation|@
name|Override
specifier|protected
name|DefaultSyncConfig
name|createSyncConfig
parameter_list|()
block|{
name|DefaultSyncConfig
name|sc
init|=
name|super
operator|.
name|createSyncConfig
argument_list|()
decl_stmt|;
name|sc
operator|.
name|user
argument_list|()
operator|.
name|setMembershipNestingDepth
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
return|return
name|sc
return|;
block|}
annotation|@
name|Override
annotation|@
name|Test
specifier|public
name|void
name|testGetPrincipalDynamicGroup
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|ExternalIdentityRef
name|ref
range|:
name|idp
operator|.
name|getUser
argument_list|(
name|USER_ID
argument_list|)
operator|.
name|getDeclaredGroups
argument_list|()
control|)
block|{
name|String
name|princName
init|=
name|idp
operator|.
name|getIdentity
argument_list|(
name|ref
argument_list|)
operator|.
name|getPrincipalName
argument_list|()
decl_stmt|;
name|Principal
name|principal
init|=
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|princName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|principal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|principal
operator|instanceof
name|java
operator|.
name|security
operator|.
name|acl
operator|.
name|Group
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|Test
specifier|public
name|void
name|testGetPrincipalInheritedGroups
parameter_list|()
throws|throws
name|Exception
block|{
name|ExternalUser
name|externalUser
init|=
name|idp
operator|.
name|getUser
argument_list|(
name|USER_ID
argument_list|)
decl_stmt|;
for|for
control|(
name|ExternalIdentityRef
name|ref
range|:
name|externalUser
operator|.
name|getDeclaredGroups
argument_list|()
control|)
block|{
name|ExternalIdentity
name|externalGroup
init|=
name|idp
operator|.
name|getIdentity
argument_list|(
name|ref
argument_list|)
decl_stmt|;
name|Principal
name|grPrincipal
init|=
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|externalGroup
operator|.
name|getPrincipalName
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|ExternalIdentityRef
name|inheritedGroupRef
range|:
name|externalGroup
operator|.
name|getDeclaredGroups
argument_list|()
control|)
block|{
name|String
name|inheritedPrincName
init|=
name|idp
operator|.
name|getIdentity
argument_list|(
name|inheritedGroupRef
argument_list|)
operator|.
name|getPrincipalName
argument_list|()
decl_stmt|;
name|Principal
name|principal
init|=
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|inheritedPrincName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|principal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|principal
operator|instanceof
name|java
operator|.
name|security
operator|.
name|acl
operator|.
name|Group
argument_list|)
expr_stmt|;
name|java
operator|.
name|security
operator|.
name|acl
operator|.
name|Group
name|inheritedGrPrincipal
init|=
operator|(
name|java
operator|.
name|security
operator|.
name|acl
operator|.
name|Group
operator|)
name|principal
decl_stmt|;
name|assertTrue
argument_list|(
name|inheritedGrPrincipal
operator|.
name|isMember
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
name|externalUser
operator|.
name|getPrincipalName
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|inheritedGrPrincipal
operator|.
name|isMember
argument_list|(
name|grPrincipal
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
annotation|@
name|Test
specifier|public
name|void
name|testFindPrincipalsByHintTypeGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|expected
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
literal|"aa"
argument_list|)
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
literal|"aaa"
argument_list|)
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|res
init|=
name|ImmutableSet
operator|.
name|copyOf
argument_list|(
name|principalProvider
operator|.
name|findPrincipals
argument_list|(
literal|"a"
argument_list|,
name|PrincipalManager
operator|.
name|SEARCH_TYPE_GROUP
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|Test
specifier|public
name|void
name|testFindPrincipalsByHintTypeAll
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|expected
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
literal|"aa"
argument_list|)
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
literal|"aaa"
argument_list|)
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|res
init|=
name|ImmutableSet
operator|.
name|copyOf
argument_list|(
name|principalProvider
operator|.
name|findPrincipals
argument_list|(
literal|"a"
argument_list|,
name|PrincipalManager
operator|.
name|SEARCH_TYPE_ALL
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

