begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|PropertyOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
operator|.
name|CommitPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
operator|.
name|DefaultSolrConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
operator|.
name|OakSolrConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
operator|.
name|OakSolrConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
operator|.
name|SolrServerConfigurationDefaults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_comment
comment|/**  * OSGi service for {@link org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider}  */
end_comment

begin_class
annotation|@
name|Component
argument_list|(
name|label
operator|=
literal|"Oak Solr indexing / search configuration"
argument_list|,
name|metatype
operator|=
literal|true
argument_list|,
name|immediate
operator|=
literal|true
argument_list|)
annotation|@
name|Service
argument_list|(
name|OakSolrConfigurationProvider
operator|.
name|class
argument_list|)
specifier|public
class|class
name|OakSolrConfigurationProviderService
implements|implements
name|OakSolrConfigurationProvider
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_DESC_FIELD
init|=
name|SolrServerConfigurationDefaults
operator|.
name|DESC_FIELD_NAME
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_CHILD_FIELD
init|=
name|SolrServerConfigurationDefaults
operator|.
name|CHILD_FIELD_NAME
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_PARENT_FIELD
init|=
name|SolrServerConfigurationDefaults
operator|.
name|ANC_FIELD_NAME
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_PATH_FIELD
init|=
name|SolrServerConfigurationDefaults
operator|.
name|PATH_FIELD_NAME
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_CATCHALL_FIELD
init|=
name|SolrServerConfigurationDefaults
operator|.
name|CATCHALL_FIELD
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_ROWS
init|=
name|SolrServerConfigurationDefaults
operator|.
name|ROWS
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
name|DEFAULT_DESC_FIELD
argument_list|,
name|label
operator|=
literal|"field for descendants search"
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|PATH_DESCENDANTS_FIELD
init|=
literal|"path.desc.field"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
name|DEFAULT_CHILD_FIELD
argument_list|,
name|label
operator|=
literal|"field for children search"
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|PATH_CHILDREN_FIELD
init|=
literal|"path.child.field"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
name|DEFAULT_PARENT_FIELD
argument_list|,
name|label
operator|=
literal|"field for parent search"
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PARENT_FIELD
init|=
literal|"path.parent.field"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
name|DEFAULT_PATH_FIELD
argument_list|,
name|label
operator|=
literal|"field for path search"
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|PATH_EXACT_FIELD
init|=
literal|"path.exact.field"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
name|DEFAULT_CATCHALL_FIELD
argument_list|,
name|label
operator|=
literal|"catch all field"
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|CATCH_ALL_FIELD
init|=
literal|"catch.all.field"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|options
operator|=
block|{
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"HARD"
argument_list|,
name|value
operator|=
literal|"Hard commit"
argument_list|)
block|,
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"SOFT"
argument_list|,
name|value
operator|=
literal|"Soft commit"
argument_list|)
block|,
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"AUTO"
argument_list|,
name|value
operator|=
literal|"Auto commit"
argument_list|)
block|}
argument_list|,
name|value
operator|=
literal|"SOFT"
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|COMMIT_POLICY
init|=
literal|"commit.policy"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|intValue
operator|=
name|DEFAULT_ROWS
argument_list|,
name|label
operator|=
literal|"rows"
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|ROWS
init|=
literal|"rows"
decl_stmt|;
specifier|private
name|String
name|pathChildrenFieldName
decl_stmt|;
specifier|private
name|String
name|pathParentFieldName
decl_stmt|;
specifier|private
name|String
name|pathDescendantsFieldName
decl_stmt|;
specifier|private
name|String
name|pathExactFieldName
decl_stmt|;
specifier|private
name|String
name|catchAllField
decl_stmt|;
specifier|private
name|CommitPolicy
name|commitPolicy
decl_stmt|;
specifier|private
name|int
name|rows
decl_stmt|;
specifier|private
name|OakSolrConfiguration
name|oakSolrConfiguration
decl_stmt|;
annotation|@
name|Activate
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|componentContext
parameter_list|)
throws|throws
name|Exception
block|{
name|pathChildrenFieldName
operator|=
name|String
operator|.
name|valueOf
argument_list|(
name|componentContext
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|PATH_CHILDREN_FIELD
argument_list|)
argument_list|)
expr_stmt|;
name|pathParentFieldName
operator|=
name|String
operator|.
name|valueOf
argument_list|(
name|componentContext
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|PATH_PARENT_FIELD
argument_list|)
argument_list|)
expr_stmt|;
name|pathExactFieldName
operator|=
name|String
operator|.
name|valueOf
argument_list|(
name|componentContext
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|PATH_EXACT_FIELD
argument_list|)
argument_list|)
expr_stmt|;
name|pathDescendantsFieldName
operator|=
name|String
operator|.
name|valueOf
argument_list|(
name|componentContext
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|PATH_DESCENDANTS_FIELD
argument_list|)
argument_list|)
expr_stmt|;
name|catchAllField
operator|=
name|String
operator|.
name|valueOf
argument_list|(
name|componentContext
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|CATCH_ALL_FIELD
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|componentContext
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|ROWS
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|commitPolicy
operator|=
name|CommitPolicy
operator|.
name|valueOf
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|componentContext
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|COMMIT_POLICY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|OakSolrConfiguration
name|getConfiguration
parameter_list|()
block|{
if|if
condition|(
name|oakSolrConfiguration
operator|==
literal|null
condition|)
block|{
comment|// extend DefaultOakSolrConfiguration
name|oakSolrConfiguration
operator|=
operator|new
name|DefaultSolrConfiguration
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getPathField
parameter_list|()
block|{
return|return
name|pathExactFieldName
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getFieldForPathRestriction
parameter_list|(
name|Filter
operator|.
name|PathRestriction
name|pathRestriction
parameter_list|)
block|{
name|String
name|fieldName
init|=
literal|null
decl_stmt|;
switch|switch
condition|(
name|pathRestriction
condition|)
block|{
case|case
name|ALL_CHILDREN
case|:
block|{
name|fieldName
operator|=
name|pathDescendantsFieldName
expr_stmt|;
break|break;
block|}
case|case
name|DIRECT_CHILDREN
case|:
block|{
name|fieldName
operator|=
name|pathChildrenFieldName
expr_stmt|;
break|break;
block|}
case|case
name|EXACT
case|:
block|{
name|fieldName
operator|=
name|pathExactFieldName
expr_stmt|;
break|break;
block|}
case|case
name|PARENT
case|:
block|{
name|fieldName
operator|=
name|pathParentFieldName
expr_stmt|;
break|break;
block|}
case|case
name|NO_RESTRICTION
case|:
break|break;
default|default:
break|break;
block|}
return|return
name|fieldName
return|;
block|}
annotation|@
name|Override
specifier|public
name|CommitPolicy
name|getCommitPolicy
parameter_list|()
block|{
return|return
name|commitPolicy
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCatchAllField
parameter_list|()
block|{
return|return
name|catchAllField
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRows
parameter_list|()
block|{
return|return
name|rows
return|;
block|}
block|}
expr_stmt|;
block|}
return|return
name|oakSolrConfiguration
return|;
block|}
block|}
end_class

end_unit

