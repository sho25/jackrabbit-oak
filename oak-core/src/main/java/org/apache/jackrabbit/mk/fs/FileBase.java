begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|fs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|MappedByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileChannel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileLock
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|ReadableByteChannel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|WritableByteChannel
import|;
end_import

begin_comment
comment|/**  * The base class for file implementations.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|FileBase
extends|extends
name|FileChannel
block|{
annotation|@
name|Override
specifier|public
name|void
name|force
parameter_list|(
name|boolean
name|metaData
parameter_list|)
throws|throws
name|IOException
block|{
comment|// ignore
block|}
annotation|@
name|Override
specifier|public
name|FileLock
name|lock
parameter_list|(
name|long
name|position
parameter_list|,
name|long
name|size
parameter_list|,
name|boolean
name|shared
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|MappedByteBuffer
name|map
parameter_list|(
name|MapMode
name|mode
parameter_list|,
name|long
name|position
parameter_list|,
name|long
name|size
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
specifier|abstract
name|long
name|position
parameter_list|()
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
specifier|public
specifier|abstract
name|FileChannel
name|position
parameter_list|(
name|long
name|newPosition
parameter_list|)
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
specifier|public
specifier|abstract
name|int
name|read
parameter_list|(
name|ByteBuffer
name|dst
parameter_list|)
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
specifier|public
name|int
name|read
parameter_list|(
name|ByteBuffer
name|dst
parameter_list|,
name|long
name|position
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|read
parameter_list|(
name|ByteBuffer
index|[]
name|dsts
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
specifier|abstract
name|long
name|size
parameter_list|()
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
specifier|public
name|long
name|transferFrom
parameter_list|(
name|ReadableByteChannel
name|src
parameter_list|,
name|long
name|position
parameter_list|,
name|long
name|count
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|transferTo
parameter_list|(
name|long
name|position
parameter_list|,
name|long
name|count
parameter_list|,
name|WritableByteChannel
name|target
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
specifier|abstract
name|FileChannel
name|truncate
parameter_list|(
name|long
name|size
parameter_list|)
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
specifier|public
name|FileLock
name|tryLock
parameter_list|(
name|long
name|position
parameter_list|,
name|long
name|size
parameter_list|,
name|boolean
name|shared
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
specifier|abstract
name|int
name|write
parameter_list|(
name|ByteBuffer
name|src
parameter_list|)
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
specifier|public
name|int
name|write
parameter_list|(
name|ByteBuffer
name|src
parameter_list|,
name|long
name|position
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|write
parameter_list|(
name|ByteBuffer
index|[]
name|srcs
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|implCloseChannel
parameter_list|()
throws|throws
name|IOException
block|{
comment|// ignore
block|}
block|}
end_class

end_unit

