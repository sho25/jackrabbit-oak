begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|CommitMongo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|HeadMongo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|NodeMongo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DBCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|Mongo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|gridfs
operator|.
name|GridFS
import|;
end_import

begin_comment
comment|/**  * The {@code MongoConnection} contains connection properties for the {@code MongoDB}.  *  * @author<a href="mailto:pmarx@adobe.com>Philipp Marx</a>  */
end_comment

begin_class
specifier|public
class|class
name|MongoConnection
block|{
specifier|private
specifier|static
specifier|final
name|String
name|COLLECTION_COMMITS
init|=
literal|"commits"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COLLECTION_HEAD
init|=
literal|"head"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COLLECTION_NODES
init|=
literal|"nodes"
decl_stmt|;
specifier|private
specifier|final
name|DB
name|db
decl_stmt|;
specifier|private
specifier|final
name|GridFS
name|gridFS
decl_stmt|;
comment|/**      * Constructs a new {@code MongoConnection}.      *      * @param host The host address.      * @param port The port.      * @param database The database name.      * @throws Exception If an error occurred while trying to connect.      */
specifier|public
name|MongoConnection
parameter_list|(
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|String
name|database
parameter_list|)
throws|throws
name|Exception
block|{
name|db
operator|=
operator|new
name|Mongo
argument_list|(
name|host
argument_list|,
name|port
argument_list|)
operator|.
name|getDB
argument_list|(
name|database
argument_list|)
expr_stmt|;
name|gridFS
operator|=
operator|new
name|GridFS
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns the commit {@link DBCollection}.      *      * @return The commit {@link DBCollection}.      */
specifier|public
name|DBCollection
name|getCommitCollection
parameter_list|()
block|{
name|DBCollection
name|commitCollection
init|=
name|db
operator|.
name|getCollection
argument_list|(
name|COLLECTION_COMMITS
argument_list|)
decl_stmt|;
name|commitCollection
operator|.
name|setObjectClass
argument_list|(
name|CommitMongo
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|commitCollection
return|;
block|}
comment|/**      * Returns the {@link DB}.      *      * @return The {@link DB}.      */
specifier|public
name|DB
name|getDB
parameter_list|()
block|{
return|return
name|db
return|;
block|}
comment|/**      * Returns the {@link GridFS}.      *      * @return The {@link GridFS}.      */
specifier|public
name|GridFS
name|getGridFS
parameter_list|()
block|{
return|return
name|gridFS
return|;
block|}
comment|/**      * Returns the head {@link DBCollection}.      *      * @return The head {@link DBCollection}.      */
specifier|public
name|DBCollection
name|getHeadCollection
parameter_list|()
block|{
name|DBCollection
name|headCollection
init|=
name|db
operator|.
name|getCollection
argument_list|(
name|COLLECTION_HEAD
argument_list|)
decl_stmt|;
name|headCollection
operator|.
name|setObjectClass
argument_list|(
name|HeadMongo
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|headCollection
return|;
block|}
comment|/**      * Returns the node {@link DBCollection}.      *      * @return The node {@link DBCollection}.      */
specifier|public
name|DBCollection
name|getNodeCollection
parameter_list|()
block|{
name|DBCollection
name|nodeCollection
init|=
name|db
operator|.
name|getCollection
argument_list|(
name|COLLECTION_NODES
argument_list|)
decl_stmt|;
name|nodeCollection
operator|.
name|setObjectClass
argument_list|(
name|NodeMongo
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|nodeCollection
return|;
block|}
block|}
end_class

end_unit

