begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|composite
operator|.
name|MountInfoProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|impl
operator|.
name|RootProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|impl
operator|.
name|TreeProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|AuthenticationConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|composite
operator|.
name|CompositeAuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|PermissionProviderImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|internal
operator|.
name|SecurityProviderRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|AggregationFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|PermissionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|ReferenceViolationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|junit
operator|.
name|OsgiContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|PrincipalBasedAuthorizationConfigurationOsgiTest
extends|extends
name|AbstractPrincipalBasedTest
block|{
annotation|@
name|Rule
specifier|public
specifier|final
name|OsgiContext
name|context
init|=
operator|new
name|OsgiContext
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|PrincipalBasedAuthorizationConfiguration
name|pbac
init|=
operator|new
name|PrincipalBasedAuthorizationConfiguration
argument_list|()
decl_stmt|;
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ReferenceViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingMandatoryReferences
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ReferenceViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingMountInfoProviderReference
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|FilterProviderImpl
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"path"
argument_list|,
name|SUPPORTED_PATH
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ReferenceViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingFilterProviderReference
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|MountInfoProviderService
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMountCollidingWithFilterRoot
parameter_list|()
block|{
name|FilterProviderImpl
name|fp
init|=
operator|new
name|FilterProviderImpl
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|fp
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"path"
argument_list|,
name|SUPPORTED_PATH
argument_list|)
argument_list|)
expr_stmt|;
name|MountInfoProviderService
name|mipService
init|=
operator|new
name|MountInfoProviderService
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|mipService
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"mountedPaths"
argument_list|,
operator|new
name|String
index|[]
block|{
name|SUPPORTED_PATH
operator|+
literal|"/some/subtree"
block|,
literal|"/etc"
block|}
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|IllegalStateException
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMountMatchingFilterRoot
parameter_list|()
block|{
name|FilterProviderImpl
name|fp
init|=
operator|new
name|FilterProviderImpl
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|fp
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"path"
argument_list|,
name|SUPPORTED_PATH
argument_list|)
argument_list|)
expr_stmt|;
name|MountInfoProviderService
name|mipService
init|=
operator|new
name|MountInfoProviderService
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|mipService
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"mountedPaths"
argument_list|,
operator|new
name|String
index|[]
block|{
name|SUPPORTED_PATH
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMountAboveFilterRoot
parameter_list|()
block|{
name|FilterProviderImpl
name|fp
init|=
operator|new
name|FilterProviderImpl
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|fp
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"path"
argument_list|,
name|SUPPORTED_PATH
argument_list|)
argument_list|)
expr_stmt|;
name|MountInfoProviderService
name|mipService
init|=
operator|new
name|MountInfoProviderService
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|mipService
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"mountedPaths"
argument_list|,
operator|new
name|String
index|[]
block|{
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|SUPPORTED_PATH
argument_list|,
literal|1
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMountsElsewhere
parameter_list|()
block|{
name|FilterProviderImpl
name|fp
init|=
operator|new
name|FilterProviderImpl
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|fp
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"path"
argument_list|,
name|SUPPORTED_PATH
argument_list|)
argument_list|)
expr_stmt|;
name|MountInfoProviderService
name|mipService
init|=
operator|new
name|MountInfoProviderService
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|mipService
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"mountedPaths"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"/etc"
block|,
literal|"/var/some/mount"
block|,
name|UserConstants
operator|.
name|DEFAULT_GROUP_PATH
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnableAggregationFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|FilterProviderImpl
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"path"
argument_list|,
name|SUPPORTED_PATH
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|MountInfoProviderService
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"mountedPaths"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"/etc"
block|,
literal|"/var/some/mount"
block|,
name|UserConstants
operator|.
name|DEFAULT_GROUP_PATH
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|pbac
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|Constants
operator|.
name|PARAM_ENABLE_AGGREGATION_FILTER
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|context
operator|.
name|getService
argument_list|(
name|AggregationFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|AuthorizationConfigurationImpl
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|AuthenticationConfigurationImpl
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|UserConfigurationImpl
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|PrivilegeConfigurationImpl
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|PrincipalConfigurationImpl
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|RootProviderService
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|TreeProviderService
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerService
argument_list|(
name|StatisticsProvider
operator|.
name|class
argument_list|,
name|StatisticsProvider
operator|.
name|NOOP
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|SecurityProviderRegistration
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"requiredServicePids"
argument_list|,
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|SecurityProvider
name|securityProvider
init|=
name|context
operator|.
name|getService
argument_list|(
name|SecurityProvider
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|securityProvider
argument_list|)
expr_stmt|;
name|AuthorizationConfiguration
name|ac
init|=
name|securityProvider
operator|.
name|getConfiguration
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ac
operator|instanceof
name|CompositeAuthorizationConfiguration
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|CompositeAuthorizationConfiguration
operator|)
name|ac
operator|)
operator|.
name|getConfigurations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|PermissionProvider
name|pp
init|=
name|ac
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|adminSession
operator|.
name|getWorkspaceName
argument_list|()
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|getTestSystemUser
argument_list|()
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|pp
operator|instanceof
name|PrincipalBasedPermissionProvider
argument_list|)
expr_stmt|;
name|pp
operator|=
name|ac
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|adminSession
operator|.
name|getWorkspaceName
argument_list|()
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|getTestUser
argument_list|()
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pp
operator|instanceof
name|PermissionProviderImpl
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

