begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|osgi
operator|.
name|OsgiUtil
operator|.
name|lookup
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|osgi
operator|.
name|OsgiUtil
operator|.
name|lookupConfigurationThenFramework
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|osgi
operator|.
name|OsgiUtil
operator|.
name|lookupFrameworkThenConfiguration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
specifier|public
class|class
name|OsgiUtilTest
block|{
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testComponentLookupWithNullContext
parameter_list|()
block|{
name|lookup
argument_list|(
operator|(
name|ComponentContext
operator|)
literal|null
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testComponentLookupWithNullName
parameter_list|()
block|{
name|lookup
argument_list|(
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComponentLookupWithNotFoundValue
parameter_list|()
block|{
name|Dictionary
name|properties
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|properties
argument_list|)
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|ComponentContext
name|context
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|properties
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComponentLookupWithEmptyString
parameter_list|()
block|{
name|Dictionary
name|properties
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|""
argument_list|)
operator|.
name|when
argument_list|(
name|properties
argument_list|)
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|ComponentContext
name|context
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|properties
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComponentLookupWithNonTrimmedString
parameter_list|()
block|{
name|Dictionary
name|properties
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"   "
argument_list|)
operator|.
name|when
argument_list|(
name|properties
argument_list|)
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|ComponentContext
name|context
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|properties
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComponentLookupWithNonStringValue
parameter_list|()
block|{
name|Dictionary
name|properties
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|42
argument_list|)
operator|.
name|when
argument_list|(
name|properties
argument_list|)
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|ComponentContext
name|context
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|properties
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"42"
argument_list|,
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComponentLookupWithStringValue
parameter_list|()
block|{
name|Dictionary
name|properties
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"  value   "
argument_list|)
operator|.
name|when
argument_list|(
name|properties
argument_list|)
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|ComponentContext
name|context
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|properties
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testFrameworkLookupWithNullContext
parameter_list|()
block|{
name|lookup
argument_list|(
operator|(
name|BundleContext
operator|)
literal|null
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testFrameworkLookupWithNullName
parameter_list|()
block|{
name|lookup
argument_list|(
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFrameworkLookupWithNotFoundValue
parameter_list|()
block|{
name|BundleContext
name|context
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFrameworkLookupWithEmptyString
parameter_list|()
block|{
name|BundleContext
name|context
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|""
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFrameworkLookupWithNonTrimmedString
parameter_list|()
block|{
name|BundleContext
name|context
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"   "
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFrameworkLookupWith
parameter_list|()
block|{
name|BundleContext
name|context
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"  value   "
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|lookup
argument_list|(
name|context
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFallbackLookupWithNoValue
parameter_list|()
block|{
name|Dictionary
name|dictionary
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|dictionary
argument_list|)
operator|.
name|get
argument_list|(
literal|"cname"
argument_list|)
expr_stmt|;
name|BundleContext
name|bundleContext
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"fname"
argument_list|)
expr_stmt|;
name|ComponentContext
name|componentContext
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|dictionary
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getBundleContext
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|lookupConfigurationThenFramework
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lookupFrameworkThenConfiguration
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFallbackLookupWithValueInComponent
parameter_list|()
block|{
name|Dictionary
name|dictionary
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"value"
argument_list|)
operator|.
name|when
argument_list|(
name|dictionary
argument_list|)
operator|.
name|get
argument_list|(
literal|"cname"
argument_list|)
expr_stmt|;
name|BundleContext
name|bundleContext
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"fname"
argument_list|)
expr_stmt|;
name|ComponentContext
name|componentContext
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|dictionary
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getBundleContext
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|lookupConfigurationThenFramework
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|lookupFrameworkThenConfiguration
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFallbackLookupWithValueInFramework
parameter_list|()
block|{
name|Dictionary
name|dictionary
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|dictionary
argument_list|)
operator|.
name|get
argument_list|(
literal|"cname"
argument_list|)
expr_stmt|;
name|BundleContext
name|bundleContext
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"value"
argument_list|)
operator|.
name|when
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"fname"
argument_list|)
expr_stmt|;
name|ComponentContext
name|componentContext
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|dictionary
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getBundleContext
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|lookupConfigurationThenFramework
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|lookupFrameworkThenConfiguration
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFallbackLookupWithValueInComponentAndFramework
parameter_list|()
block|{
name|Dictionary
name|dictionary
init|=
name|mock
argument_list|(
name|Dictionary
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"cvalue"
argument_list|)
operator|.
name|when
argument_list|(
name|dictionary
argument_list|)
operator|.
name|get
argument_list|(
literal|"cname"
argument_list|)
expr_stmt|;
name|BundleContext
name|bundleContext
init|=
name|mock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"fvalue"
argument_list|)
operator|.
name|when
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"fname"
argument_list|)
expr_stmt|;
name|ComponentContext
name|componentContext
init|=
name|mock
argument_list|(
name|ComponentContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|dictionary
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|bundleContext
argument_list|)
operator|.
name|when
argument_list|(
name|componentContext
argument_list|)
operator|.
name|getBundleContext
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cvalue"
argument_list|,
name|lookupConfigurationThenFramework
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fvalue"
argument_list|,
name|lookupFrameworkThenConfiguration
argument_list|(
name|componentContext
argument_list|,
literal|"cname"
argument_list|,
literal|"fname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

