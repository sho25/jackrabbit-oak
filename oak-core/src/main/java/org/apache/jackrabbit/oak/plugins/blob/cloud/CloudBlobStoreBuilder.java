begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PropertiesUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|BlobStoreBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|BlobStoreConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Optional
import|;
end_import

begin_comment
comment|/**  * A factory helper for creating CloudBlobStore instance.  */
end_comment

begin_class
specifier|public
class|class
name|CloudBlobStoreBuilder
implements|implements
name|BlobStoreBuilder
block|{
specifier|private
specifier|static
specifier|final
name|CloudBlobStoreBuilder
name|INSTANCE
init|=
operator|new
name|CloudBlobStoreBuilder
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|CloudBlobStoreBuilder
name|newInstance
parameter_list|()
block|{
return|return
name|INSTANCE
return|;
block|}
comment|/**      * Creates the {@link CloudBlobStore} instance.      *       * @param configuration      *            the configuration      * @return the blob store wrapped as {@link Optional} to indicate that the      *         value might be null when a valid configuration object not      *         available      * @throws Exception      *             the exception      */
annotation|@
name|Override
specifier|public
name|Optional
argument_list|<
name|BlobStore
argument_list|>
name|build
parameter_list|(
name|BlobStoreConfiguration
name|configuration
parameter_list|)
throws|throws
name|Exception
block|{
name|BlobStore
name|blobStore
init|=
literal|null
decl_stmt|;
name|blobStore
operator|=
operator|new
name|CloudBlobStore
argument_list|()
expr_stmt|;
name|PropertiesUtil
operator|.
name|populate
argument_list|(
name|blobStore
argument_list|,
name|configuration
operator|.
name|getConfigMap
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CloudBlobStore
operator|)
name|blobStore
operator|)
operator|.
name|init
argument_list|()
expr_stmt|;
return|return
name|Optional
operator|.
name|of
argument_list|(
name|blobStore
argument_list|)
return|;
block|}
block|}
end_class

end_unit

