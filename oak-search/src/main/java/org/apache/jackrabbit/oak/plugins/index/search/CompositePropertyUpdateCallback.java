begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_comment
comment|/**  * Composite {@link PropertyUpdateCallback}  */
end_comment

begin_class
specifier|public
class|class
name|CompositePropertyUpdateCallback
implements|implements
name|PropertyUpdateCallback
block|{
specifier|private
specifier|final
name|Collection
argument_list|<
name|PropertyUpdateCallback
argument_list|>
name|callbacks
decl_stmt|;
specifier|public
name|CompositePropertyUpdateCallback
parameter_list|(
annotation|@
name|NotNull
name|Collection
argument_list|<
name|PropertyUpdateCallback
argument_list|>
name|callbacks
parameter_list|)
block|{
name|this
operator|.
name|callbacks
operator|=
name|callbacks
expr_stmt|;
name|checkNotNull
argument_list|(
name|callbacks
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|propertyUpdated
parameter_list|(
name|String
name|nodePath
parameter_list|,
name|String
name|propertyRelativePath
parameter_list|,
name|PropertyDefinition
name|pd
parameter_list|,
annotation|@
name|Nullable
name|PropertyState
name|before
parameter_list|,
annotation|@
name|Nullable
name|PropertyState
name|after
parameter_list|)
block|{
for|for
control|(
name|PropertyUpdateCallback
name|callback
range|:
name|callbacks
control|)
block|{
name|callback
operator|.
name|propertyUpdated
argument_list|(
name|nodePath
argument_list|,
name|propertyRelativePath
argument_list|,
name|pd
argument_list|,
name|before
argument_list|,
name|after
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|done
parameter_list|()
throws|throws
name|CommitFailedException
block|{
for|for
control|(
name|PropertyUpdateCallback
name|callback
range|:
name|callbacks
control|)
block|{
name|callback
operator|.
name|done
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

