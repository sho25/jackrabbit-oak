begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|OakSolrConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|SolrServerProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_comment
comment|/**  * Default implementation of {@link SolrHookFactory}  */
end_comment

begin_class
annotation|@
name|Component
annotation|@
name|Service
argument_list|(
name|value
operator|=
name|SolrHookFactory
operator|.
name|class
argument_list|)
specifier|public
class|class
name|DefaultSolrHookFactory
implements|implements
name|SolrHookFactory
block|{
annotation|@
name|Reference
specifier|private
name|SolrServerProvider
name|solrServerProvider
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|OakSolrConfigurationProvider
name|oakSolrConfigurationProvider
decl_stmt|;
annotation|@
name|Override
specifier|public
name|IndexHook
name|createIndexHook
parameter_list|(
name|String
name|path
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|SolrIndexDiff
argument_list|(
name|builder
argument_list|,
name|solrServerProvider
operator|.
name|getSolrServer
argument_list|()
argument_list|,
name|oakSolrConfigurationProvider
operator|.
name|getConfiguration
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CommitHook
name|createCommitHook
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|SolrCommitHook
argument_list|(
name|solrServerProvider
operator|.
name|getSolrServer
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

