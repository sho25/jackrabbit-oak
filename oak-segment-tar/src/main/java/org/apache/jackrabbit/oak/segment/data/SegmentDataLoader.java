begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|data
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|Buffer
import|;
end_import

begin_class
class|class
name|SegmentDataLoader
block|{
specifier|private
specifier|static
specifier|final
name|int
name|VERSION_OFFSET
init|=
literal|3
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
name|SEGMENT_DATA_V12
init|=
literal|12
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
name|SEGMENT_DATA_V13
init|=
literal|13
decl_stmt|;
specifier|static
name|SegmentData
name|newSegmentData
parameter_list|(
name|Buffer
name|buffer
parameter_list|)
block|{
switch|switch
condition|(
name|buffer
operator|.
name|get
argument_list|(
name|VERSION_OFFSET
argument_list|)
condition|)
block|{
case|case
name|SEGMENT_DATA_V12
case|:
return|return
operator|new
name|SegmentDataV12
argument_list|(
name|buffer
argument_list|)
return|;
case|case
name|SEGMENT_DATA_V13
case|:
return|return
operator|new
name|SegmentDataV13
argument_list|(
name|buffer
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"invalid segment buffer"
argument_list|)
throw|;
block|}
block|}
specifier|static
name|SegmentData
name|newRawSegmentData
parameter_list|(
name|Buffer
name|buffer
parameter_list|)
block|{
return|return
operator|new
name|SegmentDataRaw
argument_list|(
name|buffer
argument_list|)
return|;
block|}
specifier|private
name|SegmentDataLoader
parameter_list|()
block|{
comment|// Prevent instantiation
block|}
block|}
end_class

end_unit

