begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|ldap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingEnumeration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|InitialDirContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|SearchControls
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|SearchResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|JndiLdapSearch
implements|implements
name|LdapSearch
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JndiLdapSearch
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|LdapSettings
name|settings
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ldapEnvironment
decl_stmt|;
specifier|public
name|JndiLdapSearch
parameter_list|(
name|LdapSettings
name|settings
parameter_list|)
block|{
name|this
operator|.
name|settings
operator|=
name|settings
expr_stmt|;
name|this
operator|.
name|ldapEnvironment
operator|=
name|createEnvironment
argument_list|(
name|settings
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|Map
name|createEnvironment
parameter_list|(
name|LdapSettings
name|settings
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
argument_list|,
literal|"com.sun.jndi.ldap.LdapCtxFactory"
argument_list|)
expr_stmt|;
name|StringBuilder
name|url
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|url
operator|.
name|append
argument_list|(
literal|"ldap://"
argument_list|)
operator|.
name|append
argument_list|(
name|settings
operator|.
name|getHost
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|':'
argument_list|)
operator|.
name|append
argument_list|(
name|settings
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|PROVIDER_URL
argument_list|,
name|url
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|settings
operator|.
name|isSecure
argument_list|()
condition|)
block|{
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_PROTOCOL
argument_list|,
literal|"ssl"
argument_list|)
expr_stmt|;
block|}
name|String
name|authDn
init|=
name|settings
operator|.
name|getAuthDn
argument_list|()
decl_stmt|;
name|String
name|authPw
init|=
name|settings
operator|.
name|getAuthPw
argument_list|()
decl_stmt|;
if|if
condition|(
name|authDn
operator|==
literal|null
operator|||
name|authDn
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_AUTHENTICATION
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_AUTHENTICATION
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_PRINCIPAL
argument_list|,
name|authDn
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_CREDENTIALS
argument_list|,
name|authPw
argument_list|)
expr_stmt|;
block|}
return|return
name|ImmutableMap
operator|.
name|copyOf
argument_list|(
name|env
argument_list|)
return|;
block|}
specifier|private
name|Object
name|parseAttributeValue
parameter_list|(
name|Attribute
name|attribute
parameter_list|)
throws|throws
name|NamingException
block|{
name|int
name|size
init|=
name|attribute
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|>
literal|1
condition|)
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|values
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|size
condition|;
name|k
operator|++
control|)
block|{
name|values
operator|.
name|add
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|attribute
operator|.
name|get
argument_list|(
name|k
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
else|else
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|attribute
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
name|void
name|initProperties
parameter_list|(
name|LdapUser
name|user
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
throws|throws
name|NamingException
block|{
name|NamingEnumeration
argument_list|<
name|?
extends|extends
name|Attribute
argument_list|>
name|namingEnumeration
init|=
name|attributes
operator|.
name|getAll
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|syncMap
init|=
name|user
operator|instanceof
name|LdapGroup
condition|?
name|settings
operator|.
name|getGroupAttributes
argument_list|()
else|:
name|settings
operator|.
name|getUserAttributes
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|lcSyncMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|syncMap
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|key
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|lcSyncMap
operator|.
name|put
argument_list|(
name|key
operator|==
literal|null
condition|?
literal|null
else|:
name|key
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
while|while
condition|(
name|namingEnumeration
operator|.
name|hasMore
argument_list|()
condition|)
block|{
name|Attribute
name|attribute
init|=
name|namingEnumeration
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|attribute
operator|.
name|getID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
if|if
condition|(
name|lcSyncMap
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|properties
operator|.
name|put
argument_list|(
name|lcSyncMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|parseAttributeValue
argument_list|(
name|attribute
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|user
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|SearchResult
argument_list|>
name|search
parameter_list|(
name|String
name|baseDN
parameter_list|,
name|String
name|filter
parameter_list|,
name|int
name|scope
parameter_list|,
name|String
index|[]
name|attributes
parameter_list|)
throws|throws
name|NamingException
block|{
comment|// TODO: include scope param into query
name|SearchControls
name|constraints
init|=
operator|new
name|SearchControls
argument_list|()
decl_stmt|;
name|constraints
operator|.
name|setSearchScope
argument_list|(
name|SearchControls
operator|.
name|SUBTREE_SCOPE
argument_list|)
expr_stmt|;
name|constraints
operator|.
name|setCountLimit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|constraints
operator|.
name|setDerefLinkFlag
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|constraints
operator|.
name|setTimeLimit
argument_list|(
name|settings
operator|.
name|getSearchTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|SearchResult
argument_list|>
name|tmp
init|=
operator|new
name|ArrayList
argument_list|<
name|SearchResult
argument_list|>
argument_list|()
decl_stmt|;
name|InitialDirContext
name|context
init|=
literal|null
decl_stmt|;
try|try
block|{
name|context
operator|=
operator|new
name|InitialDirContext
argument_list|(
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
name|ldapEnvironment
argument_list|)
argument_list|)
expr_stmt|;
name|NamingEnumeration
argument_list|<
name|SearchResult
argument_list|>
name|namingEnumeration
init|=
name|context
operator|.
name|search
argument_list|(
name|baseDN
argument_list|,
name|filter
argument_list|,
name|attributes
argument_list|,
name|constraints
argument_list|)
decl_stmt|;
while|while
condition|(
name|namingEnumeration
operator|.
name|hasMore
argument_list|()
condition|)
block|{
name|tmp
operator|.
name|add
argument_list|(
name|namingEnumeration
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"LDAP search failed"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|tmp
return|;
block|}
specifier|private
name|String
name|compileSearchFilter
parameter_list|(
name|String
name|baseFilter
parameter_list|,
name|String
name|searchExpression
parameter_list|)
block|{
name|StringBuilder
name|searchFilter
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"(&"
argument_list|)
decl_stmt|;
comment|// Add search expression first, it's typically fairly specific
comment|// so a server that evaluates clauses in order will perform well.
comment|// See https://bugs.day.com/bugzilla/show_bug.cgi?id=36917
if|if
condition|(
operator|!
operator|(
name|searchExpression
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|searchExpression
argument_list|)
operator|)
condition|)
block|{
if|if
condition|(
operator|!
name|searchExpression
operator|.
name|startsWith
argument_list|(
literal|"("
argument_list|)
condition|)
block|{
name|searchFilter
operator|.
name|append
argument_list|(
literal|'('
argument_list|)
expr_stmt|;
block|}
name|searchFilter
operator|.
name|append
argument_list|(
name|searchExpression
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|searchExpression
operator|.
name|endsWith
argument_list|(
literal|")"
argument_list|)
condition|)
block|{
name|searchFilter
operator|.
name|append
argument_list|(
literal|')'
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
operator|(
name|baseFilter
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|baseFilter
argument_list|)
operator|)
condition|)
block|{
if|if
condition|(
operator|!
name|baseFilter
operator|.
name|startsWith
argument_list|(
literal|"("
argument_list|)
condition|)
block|{
name|searchFilter
operator|.
name|append
argument_list|(
literal|'('
argument_list|)
expr_stmt|;
block|}
name|searchFilter
operator|.
name|append
argument_list|(
name|baseFilter
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|baseFilter
operator|.
name|endsWith
argument_list|(
literal|")"
argument_list|)
condition|)
block|{
name|searchFilter
operator|.
name|append
argument_list|(
literal|')'
argument_list|)
expr_stmt|;
block|}
block|}
name|searchFilter
operator|.
name|append
argument_list|(
literal|')'
argument_list|)
expr_stmt|;
return|return
name|searchFilter
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|List
argument_list|<
name|SearchResult
argument_list|>
name|searchUser
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|NamingException
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|attributeSet
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|settings
operator|.
name|getUserAttributes
argument_list|()
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
name|attributeSet
operator|.
name|add
argument_list|(
name|settings
operator|.
name|getUserIdAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|attributes
init|=
operator|new
name|String
index|[
name|attributeSet
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|attributeSet
operator|.
name|toArray
argument_list|(
name|attributes
argument_list|)
expr_stmt|;
return|return
name|search
argument_list|(
name|settings
operator|.
name|getUserRoot
argument_list|()
argument_list|,
name|compileSearchFilter
argument_list|(
name|settings
operator|.
name|getUserFilter
argument_list|()
argument_list|,
name|settings
operator|.
name|getUserIdAttribute
argument_list|()
operator|+
literal|'='
operator|+
name|id
argument_list|)
argument_list|,
name|SearchControls
operator|.
name|SUBTREE_SCOPE
argument_list|,
name|attributes
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|SearchResult
argument_list|>
name|searchGroups
parameter_list|(
name|String
name|dn
parameter_list|)
throws|throws
name|NamingException
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|attributeSet
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|settings
operator|.
name|getGroupAttributes
argument_list|()
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|attributes
init|=
operator|new
name|String
index|[
name|attributeSet
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|attributeSet
operator|.
name|toArray
argument_list|(
name|attributes
argument_list|)
expr_stmt|;
return|return
name|search
argument_list|(
name|settings
operator|.
name|getGroupRoot
argument_list|()
argument_list|,
name|compileSearchFilter
argument_list|(
name|settings
operator|.
name|getGroupFilter
argument_list|()
argument_list|,
name|settings
operator|.
name|getGroupMembershipAttribute
argument_list|()
operator|+
literal|'='
operator|+
name|dn
argument_list|)
argument_list|,
name|SearchControls
operator|.
name|SUBTREE_SCOPE
argument_list|,
name|attributes
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|findUser
parameter_list|(
name|LdapUser
name|user
parameter_list|,
name|String
name|id
parameter_list|)
block|{
try|try
block|{
name|List
argument_list|<
name|SearchResult
argument_list|>
name|entries
init|=
name|searchUser
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|entries
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|SearchResult
name|entry
init|=
name|entries
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|user
operator|.
name|setDN
argument_list|(
name|entry
operator|.
name|getNameInNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|initProperties
argument_list|(
name|user
argument_list|,
name|entry
operator|.
name|getAttributes
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
elseif|else
if|if
condition|(
name|id
operator|.
name|contains
argument_list|(
literal|"\\"
argument_list|)
condition|)
block|{
return|return
name|findUser
argument_list|(
name|user
argument_list|,
name|id
operator|.
name|substring
argument_list|(
name|id
operator|.
name|indexOf
argument_list|(
literal|'\\'
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
comment|//TODO
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|findUser
parameter_list|(
name|LdapUser
name|user
parameter_list|)
block|{
return|return
name|findUser
argument_list|(
name|user
argument_list|,
name|user
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|LdapGroup
argument_list|>
name|findGroups
parameter_list|(
name|LdapUser
name|user
parameter_list|)
block|{
specifier|final
name|HashSet
argument_list|<
name|LdapGroup
argument_list|>
name|groups
init|=
operator|new
name|HashSet
argument_list|<
name|LdapGroup
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SearchResult
argument_list|>
name|ldapEntries
decl_stmt|;
try|try
block|{
name|ldapEntries
operator|=
name|searchGroups
argument_list|(
name|user
operator|.
name|getDN
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|SearchResult
name|entry
range|:
name|ldapEntries
control|)
block|{
name|LdapGroup
name|group
init|=
operator|new
name|LdapGroup
argument_list|(
name|entry
operator|.
name|getNameInNamespace
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|groups
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|initProperties
argument_list|(
name|group
argument_list|,
name|entry
operator|.
name|getAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
comment|//TODO
block|}
return|return
name|groups
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|authenticate
parameter_list|(
name|LdapUser
name|user
parameter_list|)
throws|throws
name|LoginException
block|{
try|try
block|{
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
name|ldapEnvironment
argument_list|)
decl_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_PRINCIPAL
argument_list|,
name|user
operator|.
name|getDN
argument_list|()
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_CREDENTIALS
argument_list|,
name|user
operator|.
name|getLdapPassword
argument_list|()
argument_list|)
expr_stmt|;
comment|//TODO
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_AUTHENTICATION
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
operator|new
name|InitialDirContext
argument_list|(
name|env
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|LoginException
argument_list|(
literal|"Could not create initial LDAP context for user "
operator|+
name|user
operator|.
name|getDN
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

