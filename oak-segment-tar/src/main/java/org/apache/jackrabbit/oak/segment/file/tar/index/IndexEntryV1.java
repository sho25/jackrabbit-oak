begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|tar
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|Buffer
import|;
end_import

begin_class
class|class
name|IndexEntryV1
implements|implements
name|IndexEntry
block|{
specifier|static
specifier|final
name|int
name|SIZE
init|=
literal|28
decl_stmt|;
specifier|private
specifier|final
name|Buffer
name|index
decl_stmt|;
specifier|private
specifier|final
name|int
name|position
decl_stmt|;
name|IndexEntryV1
parameter_list|(
name|Buffer
name|index
parameter_list|,
name|int
name|position
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|position
operator|=
name|position
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getMsb
parameter_list|()
block|{
return|return
name|index
operator|.
name|getLong
argument_list|(
name|position
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLsb
parameter_list|()
block|{
return|return
name|index
operator|.
name|getLong
argument_list|(
name|position
operator|+
literal|8
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getPosition
parameter_list|()
block|{
return|return
name|index
operator|.
name|getInt
argument_list|(
name|position
operator|+
literal|16
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getLength
parameter_list|()
block|{
return|return
name|index
operator|.
name|getInt
argument_list|(
name|position
operator|+
literal|20
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getGeneration
parameter_list|()
block|{
return|return
name|index
operator|.
name|getInt
argument_list|(
name|position
operator|+
literal|24
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getFullGeneration
parameter_list|()
block|{
return|return
name|getGeneration
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCompacted
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

