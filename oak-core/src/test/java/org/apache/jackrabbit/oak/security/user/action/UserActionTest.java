begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|action
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NamePathMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AbstractAuthorizableAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AuthorizableActionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|UserAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|ValueFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|never
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_class
specifier|public
class|class
name|UserActionTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
name|UserAction
name|userAction
init|=
name|mock
argument_list|(
name|UserAction
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ClearProfileAction
name|clearProfileAction
init|=
operator|new
name|ClearProfileAction
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|AuthorizableActionProvider
name|actionProvider
init|=
name|securityProvider
lambda|->
name|ImmutableList
operator|.
name|of
argument_list|(
name|userAction
argument_list|,
name|clearProfileAction
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|ConfigurationParameters
name|getSecurityConfigParameters
parameter_list|()
block|{
name|ConfigurationParameters
name|userParams
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConstants
operator|.
name|PARAM_AUTHORIZABLE_ACTION_PROVIDER
argument_list|,
name|actionProvider
argument_list|)
decl_stmt|;
return|return
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConfiguration
operator|.
name|NAME
argument_list|,
name|userParams
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDisableUserCnt
parameter_list|()
throws|throws
name|Exception
block|{
name|User
name|user
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|user
operator|.
name|disable
argument_list|(
literal|"disabled"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onDisable
argument_list|(
name|user
argument_list|,
literal|"disabled"
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onGrantImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onRevokeImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|user
operator|.
name|disable
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onDisable
argument_list|(
name|user
argument_list|,
literal|null
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onGrantImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onRevokeImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGrantImpCnt
parameter_list|()
throws|throws
name|Exception
block|{
name|User
name|user
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|Principal
name|p2
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
literal|"tmpUser"
argument_list|,
literal|null
argument_list|)
operator|.
name|getPrincipal
argument_list|()
decl_stmt|;
name|user
operator|.
name|getImpersonation
argument_list|()
operator|.
name|grantImpersonation
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onDisable
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onGrantImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onRevokeImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRevokeImpCnt
parameter_list|()
throws|throws
name|Exception
block|{
name|User
name|user
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|Principal
name|p2
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
literal|"tmpUser"
argument_list|,
literal|null
argument_list|)
operator|.
name|getPrincipal
argument_list|()
decl_stmt|;
name|user
operator|.
name|getImpersonation
argument_list|()
operator|.
name|revokeImpersonation
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onDisable
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onGrantImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|userAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onRevokeImpersonation
argument_list|(
name|any
argument_list|(
name|User
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Principal
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Root
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDisableRemovesProfiles
parameter_list|()
throws|throws
name|Exception
block|{
name|User
name|user
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|ValueFactory
name|vf
init|=
name|getValueFactory
argument_list|()
decl_stmt|;
name|user
operator|.
name|setProperty
argument_list|(
literal|"any"
argument_list|,
name|vf
operator|.
name|createValue
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|user
operator|.
name|setProperty
argument_list|(
literal|"profiles/public/nickname"
argument_list|,
name|vf
operator|.
name|createValue
argument_list|(
literal|"amal"
argument_list|)
argument_list|)
expr_stmt|;
name|user
operator|.
name|setProperty
argument_list|(
literal|"profiles/private/age"
argument_list|,
name|vf
operator|.
name|createValue
argument_list|(
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|user
operator|.
name|disable
argument_list|(
literal|"disabled"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|user
operator|.
name|hasProperty
argument_list|(
literal|"any"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|user
operator|.
name|hasProperty
argument_list|(
literal|"profiles/public/nickname"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|user
operator|.
name|hasProperty
argument_list|(
literal|"profiles/private/age"
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|t
init|=
name|root
operator|.
name|getTree
argument_list|(
name|user
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|t
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_DISABLED
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t
operator|.
name|hasChild
argument_list|(
literal|"profiles"
argument_list|)
argument_list|)
expr_stmt|;
comment|// it's transient:
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|t
operator|=
name|root
operator|.
name|getTree
argument_list|(
name|user
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_DISABLED
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t
operator|.
name|hasChild
argument_list|(
literal|"profiles"
argument_list|)
argument_list|)
expr_stmt|;
block|}
class|class
name|ClearProfileAction
extends|extends
name|AbstractAuthorizableAction
implements|implements
name|UserAction
block|{
annotation|@
name|Override
specifier|public
name|void
name|onDisable
parameter_list|(
annotation|@
name|NotNull
name|User
name|user
parameter_list|,
annotation|@
name|Nullable
name|String
name|disableReason
parameter_list|,
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|NamePathMapper
name|namePathMapper
parameter_list|)
throws|throws
name|RepositoryException
block|{
if|if
condition|(
name|disableReason
operator|!=
literal|null
condition|)
block|{
name|Tree
name|t
init|=
name|root
operator|.
name|getTree
argument_list|(
name|user
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|exists
argument_list|()
operator|&&
name|t
operator|.
name|hasChild
argument_list|(
literal|"profiles"
argument_list|)
condition|)
block|{
name|t
operator|.
name|getChild
argument_list|(
literal|"profiles"
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onGrantImpersonation
parameter_list|(
annotation|@
name|NotNull
name|User
name|user
parameter_list|,
annotation|@
name|NotNull
name|Principal
name|principal
parameter_list|,
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|NamePathMapper
name|namePathMapper
parameter_list|)
throws|throws
name|RepositoryException
block|{
comment|// nothing to do
block|}
annotation|@
name|Override
specifier|public
name|void
name|onRevokeImpersonation
parameter_list|(
annotation|@
name|NotNull
name|User
name|user
parameter_list|,
annotation|@
name|NotNull
name|Principal
name|principal
parameter_list|,
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|NamePathMapper
name|namePathMapper
parameter_list|)
throws|throws
name|RepositoryException
block|{
comment|// nothing to do
block|}
block|}
block|}
end_class

end_unit

