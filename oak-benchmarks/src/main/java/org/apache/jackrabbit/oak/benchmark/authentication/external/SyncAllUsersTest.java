begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authentication
operator|.
name|external
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|ConfigurationUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|jmx
operator|.
name|SyncMBeanImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|jmx
operator|.
name|SynchronizationMBean
import|;
end_import

begin_comment
comment|/**  * Benchmark for {@link SynchronizationMBean#syncAllUsers(boolean)}  */
end_comment

begin_class
specifier|public
class|class
name|SyncAllUsersTest
extends|extends
name|AbstractExternalTest
block|{
specifier|private
specifier|final
name|int
name|numberOfUsers
decl_stmt|;
specifier|private
specifier|final
name|int
name|numberOfGroups
decl_stmt|;
specifier|private
name|SynchronizationMBean
name|bean
decl_stmt|;
specifier|public
name|SyncAllUsersTest
parameter_list|(
name|int
name|numberOfUsers
parameter_list|,
name|int
name|numberOfGroups
parameter_list|,
name|long
name|expTime
parameter_list|,
name|boolean
name|dynamicMembership
parameter_list|,
annotation|@
name|Nonnull
name|List
argument_list|<
name|String
argument_list|>
name|autoMembership
parameter_list|)
block|{
name|super
argument_list|(
name|numberOfUsers
argument_list|,
name|numberOfGroups
argument_list|,
name|expTime
argument_list|,
name|dynamicMembership
argument_list|,
name|autoMembership
argument_list|)
expr_stmt|;
name|this
operator|.
name|numberOfUsers
operator|=
name|numberOfUsers
expr_stmt|;
name|this
operator|.
name|numberOfGroups
operator|=
name|numberOfGroups
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Configuration
name|createConfiguration
parameter_list|()
block|{
return|return
name|ConfigurationUtil
operator|.
name|getDefaultConfiguration
argument_list|(
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|beforeSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|beforeSuite
argument_list|()
expr_stmt|;
name|bean
operator|=
operator|new
name|SyncMBeanImpl
argument_list|(
name|getContentRepository
argument_list|()
argument_list|,
name|getSecurityProvider
argument_list|()
argument_list|,
name|syncManager
argument_list|,
literal|"default"
argument_list|,
name|idpManager
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|bean
operator|.
name|syncAllExternalUsers
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|runTest
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|ops
init|=
name|bean
operator|.
name|syncAllUsers
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|numberOfUsers
operator|+
name|numberOfGroups
argument_list|,
name|ops
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

