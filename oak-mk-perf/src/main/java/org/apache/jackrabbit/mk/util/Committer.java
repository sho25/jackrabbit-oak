begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernel
import|;
end_import

begin_class
specifier|public
class|class
name|Committer
block|{
comment|/** 	 * Add nodes to the repository. 	 *  	 * @param mk 	 *            Microkernel that is performing the action. 	 * @param diff 	 *            The diff that is commited.All the nodes must have the absolute 	 *            path. 	 * @param nodesPerCommit 	 *            Number of nodes per commit. 	 */
specifier|public
name|void
name|addNodes
parameter_list|(
name|MicroKernel
name|mk
parameter_list|,
name|String
name|diff
parameter_list|,
name|int
name|nodesPerCommit
parameter_list|)
block|{
if|if
condition|(
name|nodesPerCommit
operator|==
literal|0
condition|)
block|{
name|mk
operator|.
name|commit
argument_list|(
literal|""
argument_list|,
name|diff
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
index|[]
name|string
init|=
name|diff
operator|.
name|split
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"line.separator"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|StringBuilder
name|finalCommit
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|line
range|:
name|string
control|)
block|{
name|finalCommit
operator|.
name|append
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
if|if
condition|(
name|i
operator|==
name|nodesPerCommit
condition|)
block|{
name|mk
operator|.
name|commit
argument_list|(
literal|""
argument_list|,
name|finalCommit
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|finalCommit
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|i
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
comment|/** 	 * Add a node to repository. 	 *  	 * @param mk 	 *            Microkernel that is performing the action. 	 * @param parentPath 	 * @param name 	 *            Name of the node. 	 */
specifier|public
name|void
name|addNode
parameter_list|(
name|MicroKernel
name|mk
parameter_list|,
name|String
name|parentPath
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|mk
operator|.
name|commit
argument_list|(
name|parentPath
argument_list|,
literal|"+\""
operator|+
name|name
operator|+
literal|"\" : {} \n"
argument_list|,
literal|null
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

