begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|nodetype
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|ItemDefinition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|NodeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NameMapper
import|;
end_import

begin_class
class|class
name|ItemDefinitionImpl
implements|implements
name|ItemDefinition
block|{
specifier|private
specifier|final
name|NodeType
name|type
decl_stmt|;
specifier|protected
specifier|final
name|NameMapper
name|mapper
decl_stmt|;
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|autoCreated
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|mandatory
decl_stmt|;
specifier|private
specifier|final
name|int
name|onParentRevision
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|isProtected
decl_stmt|;
specifier|protected
name|ItemDefinitionImpl
parameter_list|(
name|NodeType
name|type
parameter_list|,
name|NameMapper
name|mapper
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|autoCreated
parameter_list|,
name|boolean
name|mandatory
parameter_list|,
name|int
name|onParentRevision
parameter_list|,
name|boolean
name|isProtected
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|mapper
operator|=
name|mapper
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|autoCreated
operator|=
name|autoCreated
expr_stmt|;
name|this
operator|.
name|mandatory
operator|=
name|mandatory
expr_stmt|;
name|this
operator|.
name|onParentRevision
operator|=
name|onParentRevision
expr_stmt|;
name|this
operator|.
name|isProtected
operator|=
name|isProtected
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|NodeType
name|getDeclaringNodeType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|mapper
operator|.
name|getJcrName
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isAutoCreated
parameter_list|()
block|{
return|return
name|autoCreated
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isMandatory
parameter_list|()
block|{
return|return
name|mandatory
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getOnParentVersion
parameter_list|()
block|{
return|return
name|onParentRevision
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isProtected
parameter_list|()
block|{
return|return
name|isProtected
return|;
block|}
block|}
end_class

end_unit

