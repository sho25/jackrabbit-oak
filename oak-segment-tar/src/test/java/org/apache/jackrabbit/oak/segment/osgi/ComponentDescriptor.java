begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_class
class|class
name|ComponentDescriptor
block|{
specifier|public
specifier|static
name|ComponentDescriptor
name|open
parameter_list|(
name|InputStream
name|stream
parameter_list|)
throws|throws
name|Exception
block|{
name|DocumentBuilderFactory
name|factory
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|DocumentBuilder
name|builder
init|=
name|factory
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|document
init|=
name|builder
operator|.
name|parse
argument_list|(
name|stream
argument_list|)
decl_stmt|;
return|return
operator|new
name|ComponentDescriptor
argument_list|(
name|document
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|Element
name|root
decl_stmt|;
specifier|private
name|ComponentDescriptor
parameter_list|(
name|Element
name|root
parameter_list|)
block|{
name|this
operator|.
name|root
operator|=
name|root
expr_stmt|;
block|}
specifier|private
specifier|static
name|boolean
name|hasAttribute
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|element
operator|.
name|hasAttribute
argument_list|(
name|name
argument_list|)
operator|&&
name|element
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|)
operator|.
name|equals
argument_list|(
name|value
argument_list|)
return|;
block|}
name|boolean
name|hasName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|hasAttribute
argument_list|(
name|root
argument_list|,
literal|"name"
argument_list|,
name|name
argument_list|)
return|;
block|}
name|boolean
name|hasRequireConfigurationPolicy
parameter_list|()
block|{
return|return
name|hasAttribute
argument_list|(
name|root
argument_list|,
literal|"configuration-policy"
argument_list|,
literal|"require"
argument_list|)
return|;
block|}
name|boolean
name|hasActivateMethod
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|hasAttribute
argument_list|(
name|root
argument_list|,
literal|"activate"
argument_list|,
name|name
argument_list|)
return|;
block|}
name|boolean
name|hasDeactivateMethod
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|hasAttribute
argument_list|(
name|root
argument_list|,
literal|"deactivate"
argument_list|,
name|name
argument_list|)
return|;
block|}
name|boolean
name|hasConfigurationPid
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|hasAttribute
argument_list|(
name|root
argument_list|,
literal|"configuration-pid"
argument_list|,
name|name
argument_list|)
return|;
block|}
name|boolean
name|hasImplementationClass
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|NodeList
name|implementations
init|=
name|root
operator|.
name|getElementsByTagName
argument_list|(
literal|"implementation"
argument_list|)
decl_stmt|;
if|if
condition|(
name|implementations
operator|.
name|getLength
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|hasImplementationClass
argument_list|(
operator|(
name|Element
operator|)
name|implementations
operator|.
name|item
argument_list|(
literal|0
argument_list|)
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|boolean
name|hasImplementationClass
parameter_list|(
name|Element
name|implementation
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|hasAttribute
argument_list|(
name|implementation
argument_list|,
literal|"class"
argument_list|,
name|value
argument_list|)
return|;
block|}
class|class
name|HasProperty
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|type
decl_stmt|;
specifier|private
name|String
name|value
decl_stmt|;
specifier|private
name|HasProperty
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
name|HasProperty
name|withStringType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"String"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withLongType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Long"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withDoubleType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Double"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withFloatType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Float"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withIntegerType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Integer"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withByteType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Byte"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withCharacterType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Character"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withBooleanType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Boolean"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withShortType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Short"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasProperty
name|withValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
name|boolean
name|check
parameter_list|()
block|{
name|NodeList
name|properties
init|=
name|root
operator|.
name|getElementsByTagName
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|properties
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|property
init|=
operator|(
name|Element
operator|)
name|properties
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasAttribute
argument_list|(
name|property
argument_list|,
literal|"name"
argument_list|,
name|name
argument_list|)
condition|)
block|{
if|if
condition|(
name|type
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|property
argument_list|,
literal|"type"
argument_list|,
name|type
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|value
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|property
argument_list|,
literal|"value"
argument_list|,
name|value
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
block|}
name|HasProperty
name|hasProperty
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|HasProperty
argument_list|(
name|name
argument_list|)
return|;
block|}
class|class
name|HasReference
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|iface
decl_stmt|;
specifier|private
name|String
name|cardinality
decl_stmt|;
specifier|private
name|String
name|policy
decl_stmt|;
specifier|private
name|String
name|policyOption
decl_stmt|;
specifier|private
name|String
name|target
decl_stmt|;
specifier|private
name|String
name|bind
decl_stmt|;
specifier|private
name|String
name|unbind
decl_stmt|;
specifier|private
name|HasReference
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
name|HasReference
name|withInterface
parameter_list|(
name|String
name|iface
parameter_list|)
block|{
name|this
operator|.
name|iface
operator|=
name|iface
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withOptionalUnaryCardinality
parameter_list|()
block|{
name|this
operator|.
name|cardinality
operator|=
literal|"0..1"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withMandatoryUnaryCardinality
parameter_list|()
block|{
name|this
operator|.
name|cardinality
operator|=
literal|"1..1"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withOptionalMultipleCardinality
parameter_list|()
block|{
name|this
operator|.
name|cardinality
operator|=
literal|"0..n"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withMandatoryMultipleCardinality
parameter_list|()
block|{
name|this
operator|.
name|cardinality
operator|=
literal|"1..n"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withStaticPolicy
parameter_list|()
block|{
name|this
operator|.
name|policy
operator|=
literal|"static"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withDynamicPolicy
parameter_list|()
block|{
name|this
operator|.
name|policy
operator|=
literal|"dynamic"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withReluctantPolicyOption
parameter_list|()
block|{
name|this
operator|.
name|policyOption
operator|=
literal|"reluctant"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withGreedyPolicyOption
parameter_list|()
block|{
name|this
operator|.
name|policyOption
operator|=
literal|"greedy"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withTarget
parameter_list|(
name|String
name|target
parameter_list|)
block|{
name|this
operator|.
name|target
operator|=
name|target
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withBind
parameter_list|(
name|String
name|bind
parameter_list|)
block|{
name|this
operator|.
name|bind
operator|=
name|bind
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasReference
name|withUnbind
parameter_list|(
name|String
name|unbind
parameter_list|)
block|{
name|this
operator|.
name|unbind
operator|=
name|unbind
expr_stmt|;
return|return
name|this
return|;
block|}
name|boolean
name|check
parameter_list|()
block|{
name|NodeList
name|references
init|=
name|root
operator|.
name|getElementsByTagName
argument_list|(
literal|"reference"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|references
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|reference
init|=
operator|(
name|Element
operator|)
name|references
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"name"
argument_list|,
name|name
argument_list|)
condition|)
block|{
if|if
condition|(
name|iface
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"interface"
argument_list|,
name|iface
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|cardinality
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"cardinality"
argument_list|,
name|cardinality
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|policy
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"policy"
argument_list|,
name|policy
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|policyOption
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"policy-option"
argument_list|,
name|policyOption
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|target
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"target"
argument_list|,
name|target
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|bind
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"bind"
argument_list|,
name|bind
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|unbind
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|reference
argument_list|,
literal|"unbind"
argument_list|,
name|unbind
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
block|}
name|HasReference
name|hasReference
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|HasReference
argument_list|(
name|name
argument_list|)
return|;
block|}
block|}
end_class

end_unit

