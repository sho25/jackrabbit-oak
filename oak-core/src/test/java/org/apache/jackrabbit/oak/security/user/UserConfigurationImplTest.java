begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|value
operator|.
name|jcr
operator|.
name|PartialValueFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|MoveTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|ThreeWayConflictHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|ValidatorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|util
operator|.
name|PasswordUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|WhiteboardAware
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ImportBehavior
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ProtectedItemImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|junit
operator|.
name|OsgiContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
operator|.
name|PARAM_DEFAULT_DEPTH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|withSettings
import|;
end_import

begin_class
specifier|public
class|class
name|UserConfigurationImplTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|USER_PATH
init|=
literal|"/this/is/a/user/test"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_PATH
init|=
literal|"/this/is/a/group/test"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Integer
name|DEFAULT_DEPTH
init|=
literal|10
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|IMPORT_BEHAVIOR
init|=
name|ImportBehavior
operator|.
name|NAME_BESTEFFORT
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|HASH_ALGORITHM
init|=
literal|"MD5"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Integer
name|HASH_ITERATIONS
init|=
literal|500
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Integer
name|SALT_SIZE
init|=
literal|6
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|SUPPORT_AUTOSAVE
init|=
literal|true
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Integer
name|MAX_AGE
init|=
literal|10
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|INITIAL_PASSWORD_CHANGE
init|=
literal|true
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Integer
name|PASSWORD_HISTORY_SIZE
init|=
literal|12
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|ENABLE_RFC7613_USERCASE_MAPPED_PROFILE
init|=
literal|true
decl_stmt|;
annotation|@
name|Rule
specifier|public
specifier|final
name|OsgiContext
name|context
init|=
operator|new
name|OsgiContext
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|ConfigurationParameters
name|getSecurityConfigParameters
parameter_list|()
block|{
return|return
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConfiguration
operator|.
name|NAME
argument_list|,
name|getParams
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testActivate
parameter_list|()
block|{
name|UserConfiguration
name|userConfiguration
init|=
operator|new
name|UserConfigurationImpl
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|userConfiguration
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PARAM_DEFAULT_DEPTH
argument_list|,
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|ConfigurationParameters
name|params
init|=
name|userConfiguration
operator|.
name|getParameters
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_DEFAULT_DEPTH
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_DEPTH
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testValidators
parameter_list|()
block|{
name|UserConfigurationImpl
name|configuration
init|=
operator|new
name|UserConfigurationImpl
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|configuration
operator|.
name|setRootProvider
argument_list|(
name|getRootProvider
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setTreeProvider
argument_list|(
name|getTreeProvider
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|ValidatorProvider
argument_list|>
name|validators
init|=
name|configuration
operator|.
name|getValidators
argument_list|(
name|adminSession
operator|.
name|getWorkspaceName
argument_list|()
argument_list|,
name|Collections
operator|.
expr|<
name|Principal
operator|>
name|emptySet
argument_list|()
argument_list|,
operator|new
name|MoveTracker
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|validators
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|clNames
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|UserValidatorProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|CacheValidatorProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|ValidatorProvider
name|vp
range|:
name|validators
control|)
block|{
name|clNames
operator|.
name|remove
argument_list|(
name|vp
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|clNames
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetConflictHandlers
parameter_list|()
block|{
name|UserConfigurationImpl
name|configuration
init|=
operator|new
name|UserConfigurationImpl
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ThreeWayConflictHandler
argument_list|>
name|conflictHandlers
init|=
name|configuration
operator|.
name|getConflictHandlers
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|conflictHandlers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conflictHandlers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|RepMembersConflictHandler
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProtectedItemImporters
parameter_list|()
block|{
name|UserConfigurationImpl
name|configuration
init|=
operator|new
name|UserConfigurationImpl
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ProtectedItemImporter
argument_list|>
name|importers
init|=
name|configuration
operator|.
name|getProtectedItemImporters
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|importers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|importers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|UserImporter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBlobAccessProviderFromNullWhiteboard
parameter_list|()
throws|throws
name|Exception
block|{
name|SecurityProvider
name|sp
init|=
name|mock
argument_list|(
name|SecurityProvider
operator|.
name|class
argument_list|,
name|withSettings
argument_list|()
operator|.
name|extraInterfaces
argument_list|(
name|WhiteboardAware
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|UserConfigurationImpl
name|uc
init|=
operator|new
name|UserConfigurationImpl
argument_list|(
name|sp
argument_list|)
decl_stmt|;
name|uc
operator|.
name|setParameters
argument_list|(
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|uc
operator|.
name|setRootProvider
argument_list|(
name|getRootProvider
argument_list|()
argument_list|)
expr_stmt|;
name|uc
operator|.
name|setTreeProvider
argument_list|(
name|getTreeProvider
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|sp
operator|.
name|getConfiguration
argument_list|(
name|UserConfiguration
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|uc
argument_list|)
expr_stmt|;
name|UserManager
name|um
init|=
name|uc
operator|.
name|getUserManager
argument_list|(
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|um
operator|instanceof
name|UserManagerImpl
argument_list|)
expr_stmt|;
name|PartialValueFactory
name|vf
init|=
operator|(
operator|(
name|UserManagerImpl
operator|)
name|um
operator|)
operator|.
name|getPartialValueFactory
argument_list|()
decl_stmt|;
name|Field
name|f
init|=
name|PartialValueFactory
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
literal|"blobAccessProvider"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|PartialValueFactory
operator|.
name|DEFAULT_BLOB_ACCESS_PROVIDER
argument_list|,
name|f
operator|.
name|get
argument_list|(
name|vf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUserConfigurationWithConstructor
parameter_list|()
block|{
name|UserConfigurationImpl
name|userConfiguration
init|=
operator|new
name|UserConfigurationImpl
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|testConfigurationParameters
argument_list|(
name|userConfiguration
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUserConfigurationWithSetParameters
parameter_list|()
block|{
name|UserConfigurationImpl
name|userConfiguration
init|=
operator|new
name|UserConfigurationImpl
argument_list|()
decl_stmt|;
name|userConfiguration
operator|.
name|setParameters
argument_list|(
name|getParams
argument_list|()
argument_list|)
expr_stmt|;
name|testConfigurationParameters
argument_list|(
name|userConfiguration
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testConfigurationParameters
parameter_list|(
name|ConfigurationParameters
name|parameters
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_USER_PATH
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_USER_PATH
argument_list|)
argument_list|,
name|USER_PATH
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_GROUP_PATH
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_GROUP_PATH
argument_list|)
argument_list|,
name|GROUP_PATH
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|PARAM_DEFAULT_DEPTH
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_DEPTH
argument_list|)
argument_list|,
name|DEFAULT_DEPTH
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|ProtectedItemImporter
operator|.
name|PARAM_IMPORT_BEHAVIOR
argument_list|,
name|ImportBehavior
operator|.
name|NAME_IGNORE
argument_list|)
argument_list|,
name|IMPORT_BEHAVIOR
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_HASH_ALGORITHM
argument_list|,
name|PasswordUtil
operator|.
name|DEFAULT_ALGORITHM
argument_list|)
argument_list|,
name|HASH_ALGORITHM
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_HASH_ITERATIONS
argument_list|,
name|PasswordUtil
operator|.
name|DEFAULT_ITERATIONS
argument_list|)
argument_list|,
name|HASH_ITERATIONS
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_SALT_SIZE
argument_list|,
name|PasswordUtil
operator|.
name|DEFAULT_SALT_SIZE
argument_list|)
argument_list|,
name|SALT_SIZE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_SUPPORT_AUTOSAVE
argument_list|,
literal|false
argument_list|)
argument_list|,
name|SUPPORT_AUTOSAVE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_MAX_AGE
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_PASSWORD_MAX_AGE
argument_list|)
argument_list|,
name|MAX_AGE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_INITIAL_CHANGE
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_PASSWORD_INITIAL_CHANGE
argument_list|)
argument_list|,
name|INITIAL_PASSWORD_CHANGE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_HISTORY_SIZE
argument_list|,
name|UserConstants
operator|.
name|PASSWORD_HISTORY_DISABLED_SIZE
argument_list|)
argument_list|,
name|PASSWORD_HISTORY_SIZE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getConfigValue
argument_list|(
name|UserConstants
operator|.
name|PARAM_ENABLE_RFC7613_USERCASE_MAPPED_PROFILE
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_ENABLE_RFC7613_USERCASE_MAPPED_PROFILE
argument_list|)
argument_list|,
name|ENABLE_RFC7613_USERCASE_MAPPED_PROFILE
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ConfigurationParameters
name|getParams
parameter_list|()
block|{
name|ConfigurationParameters
name|params
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
block|{
block|{
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_USER_PATH
parameter_list|,
name|USER_PATH
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_GROUP_PATH
parameter_list|,
name|GROUP_PATH
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|PARAM_DEFAULT_DEPTH
parameter_list|,
name|DEFAULT_DEPTH
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|ProtectedItemImporter
operator|.
name|PARAM_IMPORT_BEHAVIOR
parameter_list|,
name|IMPORT_BEHAVIOR
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_HASH_ALGORITHM
parameter_list|,
name|HASH_ALGORITHM
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_HASH_ITERATIONS
parameter_list|,
name|HASH_ITERATIONS
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_SALT_SIZE
parameter_list|,
name|SALT_SIZE
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_SUPPORT_AUTOSAVE
parameter_list|,
name|SUPPORT_AUTOSAVE
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_MAX_AGE
parameter_list|,
name|MAX_AGE
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_INITIAL_CHANGE
parameter_list|,
name|INITIAL_PASSWORD_CHANGE
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_HISTORY_SIZE
parameter_list|,
name|PASSWORD_HISTORY_SIZE
parameter_list|)
constructor_decl|;
name|put
parameter_list|(
name|UserConstants
operator|.
name|PARAM_ENABLE_RFC7613_USERCASE_MAPPED_PROFILE
parameter_list|,
name|ENABLE_RFC7613_USERCASE_MAPPED_PROFILE
parameter_list|)
constructor_decl|;
block|}
block|}
argument_list|)
decl_stmt|;
return|return
name|params
return|;
block|}
block|}
end_class

end_unit

