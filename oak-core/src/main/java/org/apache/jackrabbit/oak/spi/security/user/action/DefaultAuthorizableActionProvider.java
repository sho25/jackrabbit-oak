begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|PropertyOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Default implementation of the {@link AuthorizableActionProvider} interface  * that allows to config all actions provided by the OAK.  */
end_comment

begin_class
annotation|@
name|Component
argument_list|()
annotation|@
name|Service
argument_list|(
name|AuthorizableActionProvider
operator|.
name|class
argument_list|)
specifier|public
class|class
name|DefaultAuthorizableActionProvider
implements|implements
name|AuthorizableActionProvider
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DefaultAuthorizableActionProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ENABLED_ACTIONS
init|=
literal|"enabledActions"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|name
operator|=
name|ENABLED_ACTIONS
argument_list|,
name|options
operator|=
block|{
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"org.apache.jackrabbit.oak.spi.security.user.action.AccessControlAction"
argument_list|,
name|value
operator|=
literal|"AccessControlAction"
argument_list|)
block|,
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"org.apache.jackrabbit.oak.spi.security.user.action.PasswordValidationAction"
argument_list|,
name|value
operator|=
literal|"PasswordValidationAction"
argument_list|)
block|,
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"org.apache.jackrabbit.oak.spi.security.user.action.PasswordChangeAction"
argument_list|,
name|value
operator|=
literal|"PasswordChangeAction"
argument_list|)
block|,
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"org.apache.jackrabbit.oak.spi.security.user.action.ClearMembershipAction"
argument_list|,
name|value
operator|=
literal|"ClearMembershipAction"
argument_list|)
block|}
argument_list|)
specifier|private
name|String
index|[]
name|enabledActions
init|=
operator|new
name|String
index|[]
block|{
name|AccessControlAction
operator|.
name|class
operator|.
name|getName
argument_list|()
block|}
decl_stmt|;
specifier|private
name|ConfigurationParameters
name|config
init|=
name|ConfigurationParameters
operator|.
name|EMPTY
decl_stmt|;
specifier|public
name|DefaultAuthorizableActionProvider
parameter_list|()
block|{}
specifier|public
name|DefaultAuthorizableActionProvider
parameter_list|(
name|ConfigurationParameters
name|config
parameter_list|)
block|{
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
block|}
comment|//-----------------------------------------< AuthorizableActionProvider>---
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|getAuthorizableActions
parameter_list|(
name|SecurityProvider
name|securityProvider
parameter_list|)
block|{
name|List
argument_list|<
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|className
range|:
name|enabledActions
control|)
block|{
try|try
block|{
name|Object
name|o
init|=
name|Class
operator|.
name|forName
argument_list|(
name|className
argument_list|)
operator|.
name|newInstance
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|AuthorizableAction
condition|)
block|{
name|actions
operator|.
name|add
argument_list|(
operator|(
name|AuthorizableAction
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Unable to create authorizable action"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
comment|// merge configurations that may contain action configuration information
for|for
control|(
name|AuthorizableAction
name|action
range|:
name|actions
control|)
block|{
name|action
operator|.
name|init
argument_list|(
name|securityProvider
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
return|return
name|actions
return|;
block|}
comment|//----------------------------------------------------< SCR Integration>---
annotation|@
name|Activate
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|config
operator|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|context
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

