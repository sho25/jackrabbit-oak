begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMKBuilderProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|FormatVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|MongoConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|MongoUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
operator|.
name|MongoDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|FormatVersion
operator|.
name|versionOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
operator|.
name|MongoDocumentNodeStoreBuilder
operator|.
name|newMongoDocumentNodeStoreBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeTrue
import|;
end_import

begin_class
specifier|public
class|class
name|UnlockUpgradeCommandTest
block|{
annotation|@
name|Rule
specifier|public
name|MongoConnectionFactory
name|connectionFactory
init|=
operator|new
name|MongoConnectionFactory
argument_list|()
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|DocumentMKBuilderProvider
name|builderProvider
init|=
operator|new
name|DocumentMKBuilderProvider
argument_list|()
decl_stmt|;
specifier|private
name|DocumentNodeStore
name|ns
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|assumeMongoDB
parameter_list|()
block|{
name|assumeTrue
argument_list|(
name|MongoUtils
operator|.
name|isAvailable
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
block|{
name|ns
operator|=
name|createDocumentNodeStore
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|unlockUpgrade
parameter_list|()
throws|throws
name|Exception
block|{
name|ns
operator|.
name|dispose
argument_list|()
expr_stmt|;
comment|// revert format version back to something old
name|resetFormatVersion
argument_list|(
name|FormatVersion
operator|.
name|valueOf
argument_list|(
literal|"0.0.1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// execute command
name|UnlockUpgradeCommand
name|cmd
init|=
operator|new
name|UnlockUpgradeCommand
argument_list|()
decl_stmt|;
name|cmd
operator|.
name|execute
argument_list|(
name|MongoUtils
operator|.
name|URL
argument_list|)
expr_stmt|;
comment|// verify
name|FormatVersion
name|v
init|=
name|versionOf
argument_list|(
name|createDocumentNodeStore
argument_list|()
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStore
operator|.
name|VERSION
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DocumentNodeStore
name|createDocumentNodeStore
parameter_list|()
block|{
name|MongoConnection
name|c
init|=
name|connectionFactory
operator|.
name|getConnection
argument_list|()
decl_stmt|;
name|MongoUtils
operator|.
name|dropCollections
argument_list|(
name|c
operator|.
name|getDBName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMongoDB
argument_list|(
name|c
operator|.
name|getMongoClient
argument_list|()
argument_list|,
name|c
operator|.
name|getDBName
argument_list|()
argument_list|)
operator|.
name|getNodeStore
argument_list|()
return|;
block|}
specifier|private
name|void
name|resetFormatVersion
parameter_list|(
name|FormatVersion
name|v
parameter_list|)
block|{
name|MongoConnection
name|c
init|=
name|connectionFactory
operator|.
name|getConnection
argument_list|()
decl_stmt|;
name|DocumentStore
name|s
init|=
operator|new
name|MongoDocumentStore
argument_list|(
name|c
operator|.
name|getMongoClient
argument_list|()
argument_list|,
name|c
operator|.
name|getDBName
argument_list|()
argument_list|,
name|newMongoDocumentNodeStoreBuilder
argument_list|()
argument_list|)
decl_stmt|;
name|s
operator|.
name|remove
argument_list|(
name|Collection
operator|.
name|SETTINGS
argument_list|,
literal|"version"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|v
operator|.
name|writeTo
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

