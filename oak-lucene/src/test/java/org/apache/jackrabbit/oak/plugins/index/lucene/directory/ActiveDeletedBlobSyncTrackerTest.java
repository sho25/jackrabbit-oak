begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|InitialContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|BlobTrackingStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|BlobIdTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|DataStoreBlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|OakFileDataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|AsyncIndexUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|ExtractedTextCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|IndexCopier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|LuceneIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|LuceneIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
operator|.
name|ActiveDeletedBlobCollectorFactory
operator|.
name|ActiveDeletedBlobCollectorImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|SegmentNodeStoreBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStoreBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|GarbageCollectableBlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Observer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|Mounts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|OpenSecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
operator|.
name|of
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
operator|.
name|intersection
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
operator|.
name|newHashSet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|cluster
operator|.
name|ClusterRepositoryInfo
operator|.
name|getOrCreateId
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|ActiveDeletedBlobSyncTrackerTest
extends|extends
name|AbstractActiveDeletedBlobTest
block|{
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|blobTrackerRoot
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|ContentRepository
name|createRepository
parameter_list|()
block|{
try|try
block|{
name|File
name|blobCollectorDeleted
init|=
operator|new
name|File
argument_list|(
name|blobCollectionRoot
operator|.
name|getRoot
argument_list|()
argument_list|,
literal|"deleted-blobs"
argument_list|)
decl_stmt|;
name|blobCollectorDeleted
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|adbc
operator|=
operator|new
name|ActiveDeletedBlobCollectorImpl
argument_list|(
name|clock
argument_list|,
operator|new
name|File
argument_list|(
name|blobCollectionRoot
operator|.
name|getRoot
argument_list|()
argument_list|,
literal|"deleted-blobs"
argument_list|)
argument_list|,
name|executorService
argument_list|)
expr_stmt|;
name|IndexCopier
name|copier
init|=
name|createIndexCopier
argument_list|()
decl_stmt|;
name|editorProvider
operator|=
operator|new
name|LuceneIndexEditorProvider
argument_list|(
name|copier
argument_list|,
literal|null
argument_list|,
operator|new
name|ExtractedTextCache
argument_list|(
literal|10
operator|*
name|FileUtils
operator|.
name|ONE_MB
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|null
argument_list|,
name|Mounts
operator|.
name|defaultMountInfoProvider
argument_list|()
argument_list|,
name|adbc
argument_list|)
expr_stmt|;
name|provider
operator|=
operator|new
name|LuceneIndexProvider
argument_list|(
name|copier
argument_list|)
expr_stmt|;
name|OakFileDataStore
name|ds
init|=
operator|new
name|OakFileDataStore
argument_list|()
decl_stmt|;
name|ds
operator|.
name|setMinRecordLength
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|ds
operator|.
name|init
argument_list|(
name|fileDataStoreRoot
operator|.
name|getRoot
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|DataStoreBlobStore
name|dsbs
init|=
operator|new
name|DataStoreBlobStore
argument_list|(
name|ds
argument_list|)
decl_stmt|;
name|this
operator|.
name|blobStore
operator|=
operator|new
name|AbstractActiveDeletedBlobTest
operator|.
name|CountingBlobStore
argument_list|(
name|dsbs
argument_list|)
expr_stmt|;
name|FileStore
name|store
init|=
name|FileStoreBuilder
operator|.
name|fileStoreBuilder
argument_list|(
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|)
operator|.
name|withMemoryMapping
argument_list|(
literal|false
argument_list|)
operator|.
name|withBlobStore
argument_list|(
name|blobStore
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|nodeStore
operator|=
name|SegmentNodeStoreBuilders
operator|.
name|builder
argument_list|(
name|store
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|BlobTrackingStore
name|trackingStore
init|=
operator|(
name|BlobTrackingStore
operator|)
name|blobStore
decl_stmt|;
name|trackingStore
operator|.
name|addTracker
argument_list|(
operator|new
name|BlobIdTracker
argument_list|(
name|blobTrackerRoot
operator|.
name|getRoot
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|getOrCreateId
argument_list|(
name|nodeStore
argument_list|)
argument_list|,
literal|600
argument_list|,
name|dsbs
argument_list|)
argument_list|)
expr_stmt|;
comment|// set the blob store to skip writing blobs through the node store
name|editorProvider
operator|.
name|setBlobStore
argument_list|(
name|blobStore
argument_list|)
expr_stmt|;
name|asyncIndexUpdate
operator|=
operator|new
name|AsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|,
name|nodeStore
argument_list|,
name|editorProvider
argument_list|)
expr_stmt|;
return|return
operator|new
name|Oak
argument_list|(
name|nodeStore
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|InitialContent
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|OpenSecurityProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|(
name|QueryIndexProvider
operator|)
name|provider
argument_list|)
operator|.
name|with
argument_list|(
operator|(
name|Observer
operator|)
name|provider
argument_list|)
operator|.
name|with
argument_list|(
name|editorProvider
argument_list|)
operator|.
name|createContentRepository
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|// OAK-6504
annotation|@
name|Ignore
argument_list|(
literal|"OAK-7205"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|syncActiveDeletionWithBlobTracker
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
literal|"test1"
argument_list|,
name|of
argument_list|(
literal|"propa"
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/oak:index/counter"
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|long
name|initialNumChunks
init|=
name|blobStore
operator|.
name|numChunks
decl_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"propa"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|long
name|firstCommitNumChunks
init|=
name|blobStore
operator|.
name|numChunks
decl_stmt|;
name|adbc
operator|.
name|purgeBlobsDeleted
argument_list|(
literal|0
argument_list|,
name|blobStore
argument_list|)
expr_stmt|;
comment|//hack to purge file
name|long
name|time
init|=
name|clock
operator|.
name|getTimeIncreasing
argument_list|()
decl_stmt|;
name|long
name|hackPurgeNumChunks
init|=
name|blobStore
operator|.
name|numChunks
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Hack purge must not purge any blob (first commit)"
argument_list|,
name|firstCommitNumChunks
argument_list|,
name|hackPurgeNumChunks
argument_list|)
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"propa"
argument_list|,
literal|"foo1"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|long
name|secondCommitNumChunks
init|=
name|blobStore
operator|.
name|numChunks
decl_stmt|;
name|adbc
operator|.
name|purgeBlobsDeleted
argument_list|(
literal|0
argument_list|,
name|blobStore
argument_list|)
expr_stmt|;
comment|//hack to purge file
name|hackPurgeNumChunks
operator|=
name|blobStore
operator|.
name|numChunks
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hack purge must not purge any blob (second commit)"
argument_list|,
name|secondCommitNumChunks
argument_list|,
name|hackPurgeNumChunks
argument_list|)
expr_stmt|;
name|adbc
operator|.
name|purgeBlobsDeleted
argument_list|(
name|time
argument_list|,
name|blobStore
argument_list|)
expr_stmt|;
name|adbc
operator|.
name|getBlobDeletionCallback
argument_list|()
expr_stmt|;
name|long
name|firstGCNumChunks
init|=
name|blobStore
operator|.
name|numChunks
decl_stmt|;
name|assertTrue
argument_list|(
literal|"First commit must create some chunks"
argument_list|,
name|firstCommitNumChunks
operator|>
name|initialNumChunks
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"First commit must create some chunks"
argument_list|,
name|secondCommitNumChunks
operator|>
name|firstCommitNumChunks
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"First GC should delete some chunks"
argument_list|,
name|firstGCNumChunks
operator|<
name|secondCommitNumChunks
argument_list|)
expr_stmt|;
name|assertTrackedDeleted
argument_list|(
name|blobStore
operator|.
name|getAllChunkIds
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|blobStore
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|assertTrackedDeleted
parameter_list|(
name|Iterator
argument_list|<
name|String
argument_list|>
name|afterDeletions
parameter_list|,
name|GarbageCollectableBlobStore
name|blobStore
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|afterDeletionIds
init|=
name|newArrayList
argument_list|(
name|afterDeletions
argument_list|)
decl_stmt|;
comment|// get the currently tracked ones
name|ArrayList
argument_list|<
name|String
argument_list|>
name|trackedIds
init|=
name|newArrayList
argument_list|(
operator|(
operator|(
name|BlobTrackingStore
operator|)
name|blobStore
operator|)
operator|.
name|getTracker
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Tracked ids length different from current blob list"
argument_list|,
name|trackedIds
operator|.
name|size
argument_list|()
argument_list|,
name|afterDeletionIds
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Tracked ids different from current blob list"
argument_list|,
name|newHashSet
argument_list|(
name|trackedIds
argument_list|)
operator|.
name|equals
argument_list|(
name|newHashSet
argument_list|(
name|afterDeletionIds
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

