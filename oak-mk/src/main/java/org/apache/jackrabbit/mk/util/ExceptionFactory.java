begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernelException
import|;
end_import

begin_comment
comment|/**  * An exception factory.  */
end_comment

begin_class
specifier|public
class|class
name|ExceptionFactory
block|{
specifier|private
specifier|static
specifier|final
name|String
name|POM
init|=
literal|"META-INF/maven/org.apache.jackrabbit/microkernel/pom.properties"
decl_stmt|;
specifier|private
specifier|static
name|String
name|version
decl_stmt|;
specifier|public
specifier|static
name|MicroKernelException
name|convert
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|instanceof
name|MicroKernelException
condition|)
block|{
return|return
operator|(
name|MicroKernelException
operator|)
name|e
return|;
block|}
return|return
operator|new
name|MicroKernelException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|" "
operator|+
name|getVersion
argument_list|()
argument_list|,
name|e
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|MicroKernelException
name|get
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
operator|new
name|MicroKernelException
argument_list|(
name|s
operator|+
literal|" "
operator|+
name|getVersion
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|getVersion
parameter_list|()
block|{
if|if
condition|(
name|version
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|InputStream
name|in
init|=
name|ExceptionFactory
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|POM
argument_list|)
decl_stmt|;
if|if
condition|(
name|in
operator|==
literal|null
condition|)
block|{
name|in
operator|=
operator|new
name|FileInputStream
argument_list|(
literal|"target/maven-archiver/pom.properties"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|==
literal|null
condition|)
block|{
name|version
operator|=
literal|""
expr_stmt|;
block|}
else|else
block|{
name|Properties
name|prop
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|prop
operator|.
name|load
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|version
operator|=
literal|"["
operator|+
name|prop
operator|.
name|getProperty
argument_list|(
literal|"artifactId"
argument_list|)
operator|+
literal|"-"
operator|+
name|prop
operator|.
name|getProperty
argument_list|(
literal|"version"
argument_list|)
operator|+
literal|"]"
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|version
operator|=
literal|""
expr_stmt|;
block|}
block|}
return|return
name|version
return|;
block|}
block|}
end_class

end_unit

