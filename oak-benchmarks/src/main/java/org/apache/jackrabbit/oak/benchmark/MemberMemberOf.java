begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_comment
comment|/**  * Same as {@link MemberBaseTest} but only reading the declared membership.  */
end_comment

begin_class
specifier|public
class|class
name|MemberMemberOf
extends|extends
name|MemberBaseTest
block|{
specifier|public
name|MemberMemberOf
parameter_list|(
name|int
name|numberOfGroups
parameter_list|,
name|boolean
name|nested
parameter_list|,
name|int
name|numberOfMembers
parameter_list|)
block|{
name|super
argument_list|(
name|numberOfGroups
argument_list|,
name|nested
argument_list|,
name|numberOfMembers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|testMembership
parameter_list|(
annotation|@
name|NotNull
name|Group
name|g
parameter_list|,
annotation|@
name|NotNull
name|User
name|member
parameter_list|)
throws|throws
name|Exception
block|{
name|member
operator|.
name|memberOf
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

