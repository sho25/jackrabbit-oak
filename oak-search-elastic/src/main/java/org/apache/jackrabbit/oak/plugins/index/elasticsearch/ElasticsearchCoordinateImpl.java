begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
operator|.
name|util
operator|.
name|ConfigUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|RestHighLevelClient
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|ElasticsearchCoordinateImpl
implements|implements
name|ElasticsearchCoordinate
block|{
specifier|private
specifier|final
name|ElasticsearchConnectionFactory
name|connectionFactory
decl_stmt|;
specifier|private
specifier|final
name|String
name|scheme
decl_stmt|;
specifier|private
specifier|final
name|String
name|host
decl_stmt|;
specifier|private
specifier|final
name|int
name|port
decl_stmt|;
name|ElasticsearchCoordinateImpl
parameter_list|(
name|ElasticsearchConnectionFactory
name|connectionFactory
parameter_list|,
name|String
name|scheme
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
name|this
operator|.
name|connectionFactory
operator|=
name|connectionFactory
expr_stmt|;
name|this
operator|.
name|scheme
operator|=
name|scheme
expr_stmt|;
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
specifier|static
name|ElasticsearchCoordinate
name|construct
parameter_list|(
name|ElasticsearchConnectionFactory
name|connectionFactory
parameter_list|,
name|NodeState
name|indexDefn
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|configMap
parameter_list|)
block|{
name|ElasticsearchCoordinate
name|esCoord
decl_stmt|;
comment|// index defn is at highest prio
name|esCoord
operator|=
name|readFrom
argument_list|(
name|connectionFactory
argument_list|,
name|indexDefn
argument_list|)
expr_stmt|;
if|if
condition|(
name|esCoord
operator|!=
literal|null
condition|)
block|{
return|return
name|esCoord
return|;
block|}
comment|// command line comes next
name|esCoord
operator|=
name|construct
argument_list|(
name|connectionFactory
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
name|SCHEME_PROP
argument_list|)
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
name|HOST_PROP
argument_list|)
argument_list|,
name|Integer
operator|.
name|getInteger
argument_list|(
name|PORT_PROP
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|esCoord
operator|!=
literal|null
condition|)
block|{
return|return
name|esCoord
return|;
block|}
comment|// config map
if|if
condition|(
name|configMap
operator|!=
literal|null
condition|)
block|{
name|Integer
name|port
init|=
literal|null
decl_stmt|;
try|try
block|{
name|port
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|configMap
operator|.
name|get
argument_list|(
name|PORT_PROP
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|nfe
parameter_list|)
block|{
comment|// ignore
block|}
name|esCoord
operator|=
name|construct
argument_list|(
name|connectionFactory
argument_list|,
name|configMap
operator|.
name|get
argument_list|(
name|SCHEME_PROP
argument_list|)
argument_list|,
name|configMap
operator|.
name|get
argument_list|(
name|HOST_PROP
argument_list|)
argument_list|,
name|port
argument_list|)
expr_stmt|;
if|if
condition|(
name|esCoord
operator|!=
literal|null
condition|)
block|{
return|return
name|esCoord
return|;
block|}
block|}
return|return
operator|new
name|ElasticsearchCoordinateImpl
argument_list|(
name|connectionFactory
argument_list|,
name|DEFAULT_SCHEME
argument_list|,
name|DEFAULT_HOST
argument_list|,
name|DEFAULT_PORT
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RestHighLevelClient
name|getClient
parameter_list|()
block|{
return|return
name|connectionFactory
operator|.
name|getConnection
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getScheme
parameter_list|()
block|{
return|return
name|scheme
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|ElasticsearchCoordinate
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ElasticsearchCoordinate
name|other
init|=
operator|(
name|ElasticsearchCoordinate
operator|)
name|o
decl_stmt|;
return|return
name|hashCode
argument_list|()
operator|==
name|other
operator|.
name|hashCode
argument_list|()
comment|// just to have a quicker comparison
operator|&&
name|getScheme
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getScheme
argument_list|()
argument_list|)
operator|&&
name|getHost
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getHost
argument_list|()
argument_list|)
operator|&&
name|getPort
argument_list|()
operator|==
name|other
operator|.
name|getPort
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hashCode
argument_list|(
name|getScheme
argument_list|()
argument_list|,
name|getHost
argument_list|()
argument_list|,
name|getPort
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getScheme
argument_list|()
operator|+
literal|"://"
operator|+
name|getHost
argument_list|()
operator|+
literal|":"
operator|+
name|getPort
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|ElasticsearchCoordinate
name|readFrom
parameter_list|(
name|ElasticsearchConnectionFactory
name|factory
parameter_list|,
name|NodeState
name|definition
parameter_list|)
block|{
if|if
condition|(
name|definition
operator|==
literal|null
operator|||
operator|!
name|definition
operator|.
name|hasProperty
argument_list|(
name|SCHEME_PROP
argument_list|)
operator|||
operator|!
name|definition
operator|.
name|hasProperty
argument_list|(
name|HOST_PROP
argument_list|)
operator|||
operator|!
name|definition
operator|.
name|hasProperty
argument_list|(
name|PORT_PROP
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
name|String
name|scheme
init|=
name|ConfigUtil
operator|.
name|getOptionalValue
argument_list|(
name|definition
argument_list|,
name|SCHEME_PROP
argument_list|,
name|DEFAULT_SCHEME
argument_list|)
decl_stmt|;
name|String
name|host
init|=
name|ConfigUtil
operator|.
name|getOptionalValue
argument_list|(
name|definition
argument_list|,
name|HOST_PROP
argument_list|,
name|DEFAULT_HOST
argument_list|)
decl_stmt|;
name|int
name|port
init|=
name|ConfigUtil
operator|.
name|getOptionalValue
argument_list|(
name|definition
argument_list|,
name|PORT_PROP
argument_list|,
name|DEFAULT_PORT
argument_list|)
decl_stmt|;
return|return
operator|new
name|ElasticsearchCoordinateImpl
argument_list|(
name|factory
argument_list|,
name|scheme
argument_list|,
name|host
argument_list|,
name|port
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|ElasticsearchCoordinate
name|construct
parameter_list|(
name|ElasticsearchConnectionFactory
name|factory
parameter_list|,
name|String
name|scheme
parameter_list|,
name|String
name|host
parameter_list|,
name|Integer
name|port
parameter_list|)
block|{
if|if
condition|(
name|scheme
operator|==
literal|null
operator|||
name|host
operator|==
literal|null
operator|||
name|port
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
operator|new
name|ElasticsearchCoordinateImpl
argument_list|(
name|factory
argument_list|,
name|scheme
argument_list|,
name|host
argument_list|,
name|port
argument_list|)
return|;
block|}
block|}
end_class

end_unit

