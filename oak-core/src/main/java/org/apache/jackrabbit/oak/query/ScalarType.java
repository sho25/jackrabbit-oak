begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
package|;
end_package

begin_comment
comment|/**  * The data type of a scalar instance.  */
end_comment

begin_class
specifier|public
class|class
name|ScalarType
block|{
specifier|public
specifier|static
specifier|final
name|int
name|UNDEFINED
init|=
literal|0
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|STRING
init|=
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|BINARY
init|=
literal|2
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LONG
init|=
literal|3
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DOUBLE
init|=
literal|4
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DATE
init|=
literal|5
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|BOOLEAN
init|=
literal|6
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME
init|=
literal|7
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|PATH
init|=
literal|8
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|REFERENCE
init|=
literal|9
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|WEAKREFERENCE
init|=
literal|10
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|URI
init|=
literal|11
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DECIMAL
init|=
literal|12
decl_stmt|;
block|}
end_class

end_unit

