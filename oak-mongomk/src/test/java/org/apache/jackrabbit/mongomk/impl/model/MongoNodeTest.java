begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|model
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|MongoNodeTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|copyOriginalNotChanged
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create a node with properties
name|MongoNode
name|node
init|=
operator|new
name|MongoNode
argument_list|()
decl_stmt|;
name|node
operator|.
name|setBranchId
argument_list|(
literal|"branchId"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|children
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|children
operator|.
name|add
argument_list|(
literal|"child"
argument_list|)
expr_stmt|;
name|node
operator|.
name|setChildren
argument_list|(
name|children
argument_list|)
expr_stmt|;
name|node
operator|.
name|setDeleted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|node
operator|.
name|setPath
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|node
operator|.
name|setRevisionId
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// Copy the node and change properties
name|MongoNode
name|copy
init|=
name|node
operator|.
name|copy
argument_list|()
decl_stmt|;
name|copy
operator|.
name|setBranchId
argument_list|(
literal|"branchId2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|copyChildren
init|=
name|copy
operator|.
name|getChildren
argument_list|()
decl_stmt|;
name|copyChildren
operator|.
name|add
argument_list|(
literal|"child2"
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setDeleted
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setPath
argument_list|(
literal|"path2"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|copyProperties
init|=
name|copy
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|copyProperties
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"valuee"
argument_list|)
expr_stmt|;
name|copyProperties
operator|.
name|put
argument_list|(
literal|"key2"
argument_list|,
literal|"value2"
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setRevisionId
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// Assert that original node did not change
name|assertEquals
argument_list|(
literal|"branchId"
argument_list|,
name|node
operator|.
name|getBranchId
argument_list|()
argument_list|)
expr_stmt|;
name|children
operator|=
name|node
operator|.
name|getChildren
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|children
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"child"
argument_list|,
name|children
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|node
operator|.
name|isDeleted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"path"
argument_list|,
name|node
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|properties
operator|=
name|node
operator|.
name|getProperties
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|properties
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
literal|"key"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|0
operator|==
name|node
operator|.
name|getRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

