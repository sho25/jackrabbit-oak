begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|RepositoryStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|TimeSeries
import|;
end_import

begin_class
specifier|final
class|class
name|NoopRepositoryStatistics
implements|implements
name|RepositoryStatistics
block|{
specifier|public
specifier|static
specifier|final
name|RepositoryStatistics
name|INSTANCE
init|=
operator|new
name|NoopRepositoryStatistics
argument_list|()
decl_stmt|;
specifier|private
name|NoopRepositoryStatistics
parameter_list|()
block|{      }
annotation|@
name|Override
specifier|public
name|TimeSeries
name|getTimeSeries
parameter_list|(
name|Type
name|type
parameter_list|)
block|{
return|return
name|NoopTimeSeries
operator|.
name|INSTANCE
return|;
block|}
annotation|@
name|Override
specifier|public
name|TimeSeries
name|getTimeSeries
parameter_list|(
name|String
name|s
parameter_list|,
name|boolean
name|b
parameter_list|)
block|{
return|return
name|NoopTimeSeries
operator|.
name|INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
class|class
name|NoopTimeSeries
implements|implements
name|TimeSeries
block|{
specifier|private
specifier|static
specifier|final
name|long
index|[]
name|EMPTY_ARR
init|=
operator|new
name|long
index|[
literal|0
index|]
decl_stmt|;
specifier|static
specifier|final
name|TimeSeries
name|INSTANCE
init|=
operator|new
name|NoopTimeSeries
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|long
index|[]
name|getValuePerSecond
parameter_list|()
block|{
return|return
name|EMPTY_ARR
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
index|[]
name|getValuePerMinute
parameter_list|()
block|{
return|return
name|EMPTY_ARR
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
index|[]
name|getValuePerHour
parameter_list|()
block|{
return|return
name|EMPTY_ARR
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
index|[]
name|getValuePerWeek
parameter_list|()
block|{
return|return
name|EMPTY_ARR
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getMissingValue
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
end_class

end_unit

