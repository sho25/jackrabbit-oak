begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|observation
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PropertiesUtil
operator|.
name|toBoolean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|ConfigurationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Modified
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Temporary class to be removed before 1.6 which allows to turn on/off  * the prefiltering test mode via an osgi-config.  *<p>  * Note: the system property (oak.observation.prefilteringTestMode)   * has thus been removed.  * TODO: remove me before 1.6  * @deprecated to be removed before 1.6  */
end_comment

begin_class
annotation|@
name|Component
argument_list|(
name|policy
operator|=
name|ConfigurationPolicy
operator|.
name|OPTIONAL
argument_list|,
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|,
name|label
operator|=
literal|"Apache Jackrabbit Oak Change Processor Prefilter TestConfig"
argument_list|,
name|description
operator|=
literal|"Temporary config used for testing ChangeProcessor prefiltering."
argument_list|)
specifier|public
class|class
name|ChangeProcessorPrefilterTestConfig
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ChangeProcessorPrefilterTestConfig
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|DEFAULT_TESTMODE
init|=
literal|false
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|boolValue
operator|=
name|DEFAULT_TESTMODE
argument_list|,
name|label
operator|=
literal|"turns on or off the prefiltering test mode"
argument_list|,
name|description
operator|=
literal|"When set to true it puts prefiltering in a test mode. In the test mode the"
operator|+
literal|" prefilter is still evaluated but not applied - instead the result (whether or not"
operator|+
literal|" any events were delivered to the listener) is compared with the outcome of prefiltering."
operator|+
literal|" If prefiltering and normal filtering mismatch this is reported in as a log.warn."
operator|+
literal|" When set to false it leaves prefiltering in normal mode. Default is "
operator|+
name|DEFAULT_TESTMODE
argument_list|)
specifier|private
specifier|static
specifier|final
name|String
name|PROP_TESTMODE
init|=
literal|"prefiltering.testmode"
decl_stmt|;
specifier|private
name|boolean
name|prefilteringTestmode
init|=
name|DEFAULT_TESTMODE
decl_stmt|;
annotation|@
name|Activate
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|config
parameter_list|)
block|{
name|reconfig
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"activate: prefilteringTestmode="
operator|+
name|prefilteringTestmode
argument_list|)
expr_stmt|;
name|setTestMode
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Modified
specifier|protected
name|void
name|modified
parameter_list|(
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
block|{
name|reconfig
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"modified: prefilteringTestmode="
operator|+
name|prefilteringTestmode
argument_list|)
expr_stmt|;
name|setTestMode
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|reconfig
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|config
parameter_list|)
block|{
name|prefilteringTestmode
operator|=
name|toBoolean
argument_list|(
name|config
operator|.
name|get
argument_list|(
name|PROP_TESTMODE
argument_list|)
argument_list|,
name|DEFAULT_TESTMODE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deactivate
specifier|protected
name|void
name|deactivate
parameter_list|()
block|{
name|prefilteringTestmode
operator|=
name|DEFAULT_TESTMODE
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"deactivate: prefilteringTestmode="
operator|+
name|prefilteringTestmode
operator|+
literal|" (default)"
argument_list|)
expr_stmt|;
name|setTestMode
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setTestMode
parameter_list|()
block|{
name|ChangeProcessor
operator|.
name|setPrefilteringTestMode
argument_list|(
name|prefilteringTestmode
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

