begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|testing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|core
operator|.
name|MicroKernelImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|core
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|/**  * Initialize a {@code MicroKernelImpl}.A new {@code Repository} is created for  * each initialization.  */
end_comment

begin_class
specifier|public
class|class
name|OakMicroKernelInitializer
implements|implements
name|MicroKernelInitializer
block|{
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|MicroKernel
argument_list|>
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|int
name|mksNumber
parameter_list|)
throws|throws
name|Exception
block|{
name|ArrayList
argument_list|<
name|MicroKernel
argument_list|>
name|mks
init|=
operator|new
name|ArrayList
argument_list|<
name|MicroKernel
argument_list|>
argument_list|()
decl_stmt|;
name|Repository
name|rep
init|=
operator|new
name|Repository
argument_list|(
name|conf
operator|.
name|getStoragePath
argument_list|()
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|rep
operator|.
name|init
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mksNumber
condition|;
name|i
operator|++
control|)
block|{
name|mks
operator|.
name|add
argument_list|(
operator|new
name|MicroKernelImpl
argument_list|(
name|rep
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|mks
return|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|"Oak Microkernel"
return|;
block|}
block|}
end_class

end_unit

