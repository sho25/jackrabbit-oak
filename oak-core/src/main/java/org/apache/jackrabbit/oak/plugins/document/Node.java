begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|cache
operator|.
name|CacheValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|json
operator|.
name|JsopWriter
import|;
end_import

begin_comment
comment|/**  * Represents a node held in memory (in the cache for example).  */
end_comment

begin_interface
specifier|public
interface|interface
name|Node
extends|extends
name|CacheValue
block|{
name|Children
name|NO_CHILDREN
init|=
operator|new
name|Children
argument_list|()
decl_stmt|;
name|String
name|getPropertyAsString
parameter_list|(
name|String
name|propertyName
parameter_list|)
function_decl|;
name|void
name|setProperty
parameter_list|(
name|String
name|propertyName
parameter_list|,
name|String
name|value
parameter_list|)
function_decl|;
name|void
name|setProperty
parameter_list|(
name|PropertyState
name|property
parameter_list|)
function_decl|;
name|Set
argument_list|<
name|String
argument_list|>
name|getPropertyNames
parameter_list|()
function_decl|;
name|void
name|copyTo
parameter_list|(
name|Node
name|newNode
parameter_list|)
function_decl|;
name|boolean
name|hasNoChildren
parameter_list|()
function_decl|;
name|String
name|getId
parameter_list|()
function_decl|;
name|void
name|append
parameter_list|(
name|JsopWriter
name|json
parameter_list|,
name|boolean
name|includeId
parameter_list|)
function_decl|;
name|void
name|setLastRevision
parameter_list|(
name|Revision
name|lastRevision
parameter_list|)
function_decl|;
name|Revision
name|getLastRevision
parameter_list|()
function_decl|;
name|String
name|getPath
parameter_list|()
function_decl|;
name|UpdateOp
name|asOperation
parameter_list|(
name|boolean
name|isNew
parameter_list|)
function_decl|;
comment|/**      * A list of children for a node.      */
specifier|public
specifier|static
class|class
name|Children
implements|implements
name|CacheValue
block|{
specifier|final
name|ArrayList
argument_list|<
name|String
argument_list|>
name|children
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|hasMore
decl_stmt|;
annotation|@
name|Override
specifier|public
name|int
name|getMemory
parameter_list|()
block|{
name|int
name|size
init|=
literal|114
decl_stmt|;
for|for
control|(
name|String
name|c
range|:
name|children
control|)
block|{
name|size
operator|+=
name|c
operator|.
name|length
argument_list|()
operator|*
literal|2
operator|+
literal|56
expr_stmt|;
block|}
return|return
name|size
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|children
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_interface

end_unit

