begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
operator|.
name|nodestate
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|server
operator|.
name|OakSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|DiffObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStateDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * An {@link org.apache.jackrabbit.oak.spi.commit.Observer} looking for changes on persisted Solr server configuration nodes.  * If any change is done there, the related {@link org.apache.solr.client.solrj.SolrServer}s are shutdown and unregistered  * from the {@link org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry}  */
end_comment

begin_class
specifier|public
class|class
name|NodeStateSolrServersObserver
extends|extends
name|DiffObserver
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|NodeStateDiff
name|getRootDiff
parameter_list|(
annotation|@
name|Nonnull
name|NodeState
name|before
parameter_list|,
annotation|@
name|Nonnull
name|NodeState
name|after
parameter_list|,
annotation|@
name|Nonnull
name|CommitInfo
name|info
parameter_list|)
block|{
return|return
operator|new
name|ChangingSolrServersNodeStateDiff
argument_list|(
name|after
argument_list|)
return|;
block|}
specifier|private
name|void
name|shutdownRegisteredSolrServers
parameter_list|(
name|NodeState
name|nodeState
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"shutting down persisted Solr server"
argument_list|)
expr_stmt|;
name|NodeStateSolrServerConfigurationProvider
name|nodeStateSolrServerConfigurationProvider
init|=
operator|new
name|NodeStateSolrServerConfigurationProvider
argument_list|(
name|nodeState
argument_list|)
decl_stmt|;
name|OakSolrServer
name|oakSolrServer
init|=
operator|new
name|OakSolrServer
argument_list|(
name|nodeStateSolrServerConfigurationProvider
argument_list|)
decl_stmt|;
name|oakSolrServer
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"persisted Solr server has been shutdown"
argument_list|)
expr_stmt|;
block|}
specifier|private
class|class
name|ChangingSolrServersNodeStateDiff
implements|implements
name|NodeStateDiff
block|{
specifier|private
specifier|final
name|NodeState
name|nodeState
decl_stmt|;
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|public
name|ChangingSolrServersNodeStateDiff
parameter_list|(
name|NodeState
name|after
parameter_list|)
block|{
name|nodeState
operator|=
name|after
expr_stmt|;
name|name
operator|=
literal|""
expr_stmt|;
block|}
specifier|public
name|ChangingSolrServersNodeStateDiff
parameter_list|(
name|NodeState
name|nodeState
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|nodeState
operator|=
name|nodeState
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|propertyAdded
parameter_list|(
name|PropertyState
name|after
parameter_list|)
block|{
if|if
condition|(
name|isSolrServerNode
argument_list|(
name|name
argument_list|,
name|nodeState
argument_list|)
condition|)
block|{
name|shutdownRegisteredSolrServers
argument_list|(
name|nodeState
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|propertyChanged
parameter_list|(
name|PropertyState
name|before
parameter_list|,
name|PropertyState
name|after
parameter_list|)
block|{
if|if
condition|(
name|isSolrServerNode
argument_list|(
name|name
argument_list|,
name|nodeState
argument_list|)
condition|)
block|{
name|shutdownRegisteredSolrServers
argument_list|(
name|nodeState
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|propertyDeleted
parameter_list|(
name|PropertyState
name|before
parameter_list|)
block|{
if|if
condition|(
name|isSolrServerNode
argument_list|(
name|name
argument_list|,
name|nodeState
argument_list|)
condition|)
block|{
name|shutdownRegisteredSolrServers
argument_list|(
name|nodeState
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|childNodeAdded
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|after
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|childNodeChanged
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|)
block|{
if|if
condition|(
name|isSolrServerNode
argument_list|(
name|name
argument_list|,
name|before
argument_list|)
condition|)
block|{
name|shutdownRegisteredSolrServers
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
return|return
name|after
operator|.
name|compareAgainstBaseState
argument_list|(
name|before
argument_list|,
operator|new
name|ChangingSolrServersNodeStateDiff
argument_list|(
name|after
argument_list|,
name|this
operator|.
name|name
operator|+
literal|"/"
operator|+
name|name
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|childNodeDeleted
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|before
parameter_list|)
block|{
if|if
condition|(
name|isSolrServerNode
argument_list|(
name|name
argument_list|,
name|before
argument_list|)
condition|)
block|{
comment|// look if the deleted node was a server node
name|shutdownRegisteredSolrServers
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//look among child nodes if there was a server node
for|for
control|(
name|String
name|childNodeName
range|:
name|before
operator|.
name|getChildNodeNames
argument_list|()
control|)
block|{
name|NodeState
name|childNodeState
init|=
name|before
operator|.
name|getChildNode
argument_list|(
name|childNodeName
argument_list|)
decl_stmt|;
if|if
condition|(
name|isSolrServerNode
argument_list|(
name|childNodeName
argument_list|,
name|childNodeState
argument_list|)
condition|)
block|{
name|shutdownRegisteredSolrServers
argument_list|(
name|childNodeState
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|private
name|boolean
name|isSolrServerNode
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|nodeState
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"checking {} in {}"
argument_list|,
name|name
argument_list|,
name|nodeState
argument_list|)
expr_stmt|;
return|return
literal|"server"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
operator|&&
name|nodeState
operator|.
name|hasProperty
argument_list|(
literal|"solrServerType"
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

