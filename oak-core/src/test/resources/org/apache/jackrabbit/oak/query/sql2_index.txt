# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Syntax:
# * lines starting with "#" are remarks.
# * lines starting with "select" are queries, followed by expected results and an empty line
# * lines starting with "explain" are followed by expected query plan and an empty line
# * lines starting with "sql1" are run using the sql1 language
# * lines starting with "xpath2sql" are just converted from xpath to sql2
# * all other lines are are committed into the microkernel (line by line)
# * new tests are typically be added on top, after the syntax docs
# * use ascii character only

# property type (value prefix) index

explain select * from [nt:base] where [jcr:uuid] = '123'
[nt:base] as [nt:base] /* p2 jcr:uuid=123 where [nt:base].[jcr:uuid] = cast('123' as string) */

explain select * from [nt:base] where [jcr:uuid] is not null
[nt:base] as [nt:base] /* p2 jcr:uuid where [nt:base].[jcr:uuid] is not null */

explain select * from [nt:base] as a inner join [nt:base] as b on isdescendantnode(b, a) where a.[jcr:uuid] is not null and b.[jcr:uuid] is not null
[nt:base] as [a] /* p2 jcr:uuid where [a].[jcr:uuid] is not null */ inner join [nt:base] as [b] /* p2 jcr:uuid where [b].[jcr:uuid] is not null */ on isdescendantnode([b], [a])

explain select * from [nt:base] as a inner join [nt:base] as b on isdescendantnode(b, a) where a.[jcr:uuid] is not null and b.[x] is not null
[nt:base] as [a] /* p2 jcr:uuid where [a].[jcr:uuid] is not null */ inner join [nt:base] as [b] /* traverse "/path/from/the/join/selector/*" where [b].[x] is not null */ on isdescendantnode([b], [a])

commit / + "test": { "jcr:uuid": "xyz", "a": { "jcr:uuid": "123" } }

select [jcr:path] from [nt:base] where [jcr:uuid] is not null
/test
/test/a

select [jcr:path] from [nt:base] where [jcr:uuid] = 'xyz'
/test

commit / - "test"
