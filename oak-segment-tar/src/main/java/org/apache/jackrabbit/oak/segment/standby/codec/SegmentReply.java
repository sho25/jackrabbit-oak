begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|standby
operator|.
name|codec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|Segment
import|;
end_import

begin_class
specifier|public
class|class
name|SegmentReply
block|{
specifier|public
specifier|static
specifier|final
name|int
name|SEGMENT
init|=
literal|0
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|BLOB
init|=
literal|1
decl_stmt|;
specifier|public
specifier|static
name|SegmentReply
name|empty
parameter_list|()
block|{
return|return
operator|new
name|SegmentReply
argument_list|()
return|;
block|}
specifier|private
specifier|final
name|int
name|type
decl_stmt|;
specifier|private
specifier|final
name|Segment
name|segment
decl_stmt|;
specifier|private
specifier|final
name|IdArrayBasedBlob
name|blob
decl_stmt|;
specifier|public
name|SegmentReply
parameter_list|(
name|Segment
name|segment
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|SEGMENT
expr_stmt|;
name|this
operator|.
name|segment
operator|=
name|segment
expr_stmt|;
name|this
operator|.
name|blob
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|SegmentReply
parameter_list|(
name|IdArrayBasedBlob
name|blob
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|BLOB
expr_stmt|;
name|this
operator|.
name|segment
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|blob
operator|=
name|blob
expr_stmt|;
block|}
specifier|private
name|SegmentReply
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
operator|-
literal|1
expr_stmt|;
name|this
operator|.
name|segment
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|blob
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|Segment
name|getSegment
parameter_list|()
block|{
return|return
name|this
operator|.
name|segment
return|;
block|}
specifier|public
name|IdArrayBasedBlob
name|getBlob
parameter_list|()
block|{
return|return
name|blob
return|;
block|}
specifier|public
name|int
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
block|}
end_class

end_unit

