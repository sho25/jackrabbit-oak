# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Syntax:
# * lines starting with "#" are remarks.
# * lines starting with "xpath" are xpath queries, followed by expected sql2 query
# * use ascii character only

xpath //*[@name='Hello']
select * from [nt:base] where [name] = 'Hello'

xpath /jcr:root//*[@name='Hello']
select * from [nt:base] where ([name] = 'Hello') and isdescendantnode('/')

xpath content/*
select * from [nt:base] where ischildnode('/content')

xpath content//*
select * from [nt:base] where isdescendantnode('/content')

xpath content//*[@name='Hello']
select * from [nt:base] where ([name] = 'Hello') and isdescendantnode('/content')

xpath /jcr:root/content//*[@name='Hello']
select * from [nt:base] where ([name] = 'Hello') and isdescendantnode('/content')

xpath //*[jcr:contains(., 'test')] order by @jcr:score
select * from [nt:base] where contains(*, 'test') order by [jcr:score]

xpath /jcr:root//*[jcr:contains(., 'test')] order by @jcr:score
select * from [nt:base] where contains(*, 'test') and isdescendantnode('/') order by [jcr:score]

xpath /jcr:root//element(*, test)
select * from [test] where isdescendantnode('/')

xpath /jcr:root//element(*, user)[test/@jcr:primaryType]
select * from [user] where ([test/jcr:primaryType] is not null) and isdescendantnode('/')

xpath /jcr:root/content//*[(@sling:resourceType = 'start')]
select * from [nt:base] where ([sling:resourceType] = 'start') and isdescendantnode('/content')

xpath /jcr:root/content//*[(@sling:resourceType = 'page')]
select * from [nt:base] where ([sling:resourceType] = 'page') and isdescendantnode('/content')

xpath /jcr:root/content//*[@offTime > xs:dateTime('2012-03-28T15:56:18.327+02:00') or @onTime > xs:dateTime('2012-03-28T15:56:18.327+02:00')]
select * from [nt:base] where (([offTime] > cast('2012-03-28T15:56:18.327+02:00' as date)) or ([onTime] > cast('2012-03-28T15:56:18.327+02:00' as date))) and isdescendantnode('/content')

xpath /jcr:root/content/campaigns//*[@jcr:primaryType='Page'] order by jcr:content/@lastModified descending
select * from [nt:base] where ([jcr:primaryType] = 'Page') and isdescendantnode('/content/campaigns') order by [jcr:content/lastModified] desc

xpath /jcr:root/content/campaigns//element(*, PageContent)[(@sling:resourceType = 'teaser' or @sling:resourceType = 'newsletter' or @teaserPageType = 'newsletter' or @teaserPageType = 'tweet') and ((@onTime < xs:dateTime('2012-04-01T00:00:00.000+02:00')) or not(@onTime)) and ((@offTime >= xs:dateTime('2012-02-26T00:00:00.000+01:00')) or not(@offTime))] order by @onTime
select * from [PageContent] where (((((([sling:resourceType] = 'teaser') or ([sling:resourceType] = 'newsletter')) or ([teaserPageType] = 'newsletter')) or ([teaserPageType] = 'tweet')) and (([onTime] < cast('2012-04-01T00:00:00.000+02:00' as date)) or ([onTime] is null))) and (([offTime] >= cast('2012-02-26T00:00:00.000+01:00' as date)) or ([offTime] is null))) and isdescendantnode('/content/campaigns') order by [onTime]

xpath /jcr:root/content/dam//element(*, asset)[jcr:content/metadata/@dam:scene]
select * from [asset] where ([jcr:content/metadata/dam:scene] is not null) and isdescendantnode('/content/dam')

xpath /jcr:root/etc/cloud//*[(@sling:resourceType = 'framework')]
select * from [nt:base] where ([sling:resourceType] = 'framework') and isdescendantnode('/etc/cloud')

xpath /jcr:root/etc/cloud//*[(@sling:resourceType = 'analytics')]
select * from [nt:base] where ([sling:resourceType] = 'analytics') and isdescendantnode('/etc/cloud')

xpath /jcr:root/etc/reports//*[@jcr:primaryType='Page'] order by jcr:content/@lastModified descending
select * from [nt:base] where ([jcr:primaryType] = 'Page') and isdescendantnode('/etc/reports') order by [jcr:content/lastModified] desc

xpath /jcr:root/etc/segment//*[@jcr:primaryType='Page'] order by jcr:content/@lastModified descending
select * from [nt:base] where ([jcr:primaryType] = 'Page') and isdescendantnode('/etc/segment') order by [jcr:content/lastModified] desc

xpath /jcr:root/etc/workflow//element(*,Item)[not(meta/@archived) and not(meta/@archived = true)]
select * from [Item] where (([meta/archived] is null) and not([meta/archived] = true)) and isdescendantnode('/etc/workflow')

xpath /jcr:root/home//element(*)
select * from [nt:base] where isdescendantnode('/home')

# other queries

xpath //*
select * from [nt:base]

xpath //element(*, my:type)
select * from [my:type]

xpath //element(*, my:type)/@my:title
select [my:title] from [my:type]

xpath //element(*, my:type)/(@my:title | @my:text)
select [my:title], [my:text] from [my:type]

xpath /jcr:root/nodes//element(*, my:type)
select * from [my:type] where isdescendantnode('/nodes')

xpath /jcr:root/some/element(nodes, my:type)
select * from [my:type] where [jcr:path] = '/some/nodes'

xpath /jcr:root/some/nodes/element(*, my:type)
select * from [my:type] where ischildnode('/some/nodes')

xpath /jcr:root/some/nodes//element(*, my:type)
select * from [my:type] where isdescendantnode('/some/nodes')

xpath //element(*, my:type)[@my:title = 'JSR 170']
select * from [my:type] where [my:title] = 'JSR 170'

xpath //element(*, my:type)[jcr:like(@title,'%Java%')]
select * from [my:type] where [title] like '%Java%'

xpath //element(*, my:type)[jcr:contains(., 'JSR 170')]
select * from [my:type] where contains(*, 'JSR 170')

xpath //element(*, my:type)[@my:title]
select * from [my:type] where [my:title] is not null

xpath //element(*, my:type)[not(@my:title)]
select * from [my:type] where [my:title] is null

xpath //element(*, my:type)[@my:value < -1.0]
select * from [my:type] where [my:value] < -1.0

xpath //element(*, my:type)[@my:value > +10123123123]
select * from [my:type] where [my:value] > 10123123123

xpath //element(*, my:type)[@my:value <= 10.3e-3]
select * from [my:type] where [my:value] <= 10.3e-3

xpath //element(*, my:type)[@my:value >= 0e3]
select * from [my:type] where [my:value] >= 0e3

xpath //element(*, my:type)[@my:value <> 'Joe''s Caffee']
select * from [my:type] where [my:value] <> 'Joe''s Caffee'

xpath //element(*, my:type)[(not(@my:title) and @my:subject)]
select * from [my:type] where ([my:title] is null) and ([my:subject] is not null)

xpath //element(*, my:type)[not(@my:title) or @my:subject]
select * from [my:type] where ([my:title] is null) or ([my:subject] is not null)

xpath //element(*, my:type)[not(@my:value > 0 and @my:value < 100)]
select * from [my:type] where not(([my:value] > 0) and ([my:value] < 100))

xpath //element(*, my:type) order by @jcr:lastModified
select * from [my:type] order by [jcr:lastModified]

xpath //element(*, my:type) order by @my:date descending, @my:title ascending
select * from [my:type] order by [my:date] desc, [my:title]

xpath //element(*, my:type)[jcr:contains(., 'jcr')] order by jcr:score() descending
select * from [my:type] where contains(*, 'jcr') order by score() desc

xpath //element(*, my:type)[jcr:contains(@my:title, 'jcr')] order by jcr:score() descending
select * from [my:type] where contains([my:title], 'jcr') order by score() desc

xpath [invalid/query
invalid: Query: /jcr:root/[(*)invalid/query; expected: identifier

xpath //element(*, my:type)[@my:value = -'x']
invalid: Query: //element(*, my:type)[@my:value = -'x'(*)]

xpath //element(-1, my:type)
invalid: Query: //element(-(*)1, my:type); expected: identifier

xpath //element(*, my:type)[not @my:title]
invalid: Query: //element(*, my:type)[not @(*)my:title]; expected: (

xpath //element(*, my:type)[@my:value = +'x']
invalid: Query: //element(*, my:type)[@my:value = +'x'(*)]

xpath //element(*, my:type)[@my:value = ['x']
invalid: Query: //element(*, my:type)[@my:value = [(*)'x']; expected: @, true, false, -, +

xpath //element(*, my:type)[jcr:strike(@title,'%Java%')]
invalid: Query: //element(*, my:type)[jcr:strike(@(*)title,'%Java%')]; expected: jcr:like | jcr:contains | jcr:score | jcr:deref

xpath //element(*, my:type)[
invalid: Query: //element(*, my:type)(*)[; expected: not, (, @, true, false, -, +

xpath //element(*, my:type)[@my:value >= .]
invalid: Query: //element(*, my:type)[@my:value >= .(*)]; expected: @, true, false, -, +
