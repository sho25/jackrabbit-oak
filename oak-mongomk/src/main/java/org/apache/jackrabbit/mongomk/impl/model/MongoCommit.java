begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|instruction
operator|.
name|Instruction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|model
operator|.
name|Commit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|BasicDBObject
import|;
end_import

begin_comment
comment|/**  * The {@code MongoDB} representation of a commit.  */
end_comment

begin_class
specifier|public
class|class
name|MongoCommit
extends|extends
name|BasicDBObject
implements|implements
name|Commit
block|{
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AFFECTED_PATH
init|=
literal|"affPaths"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_BASE_REVISION_ID
init|=
literal|"baseRevId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_BRANCH_ID
init|=
literal|"branchId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_DIFF
init|=
literal|"diff"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_FAILED
init|=
literal|"failed"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_MESSAGE
init|=
literal|"msg"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_PATH
init|=
literal|"path"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_REVISION_ID
init|=
literal|"revId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_TIMESTAMP
init|=
literal|"ts"
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Instruction
argument_list|>
name|instructions
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|6656294757102309827L
decl_stmt|;
comment|/**      * Default constructor. Needed for MongoDB serialization.      */
specifier|public
name|MongoCommit
parameter_list|()
block|{
name|instructions
operator|=
operator|new
name|LinkedList
argument_list|<
name|Instruction
argument_list|>
argument_list|()
expr_stmt|;
name|setTimestamp
argument_list|(
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//--------------------------------------------------------------------------
comment|//
comment|// These properties are persisted to MongoDB
comment|//
comment|//--------------------------------------------------------------------------
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getAffectedPaths
parameter_list|()
block|{
return|return
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|get
argument_list|(
name|KEY_AFFECTED_PATH
argument_list|)
return|;
block|}
specifier|public
name|void
name|setAffectedPaths
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|affectedPaths
parameter_list|)
block|{
name|put
argument_list|(
name|KEY_AFFECTED_PATH
argument_list|,
name|affectedPaths
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getBaseRevisionId
parameter_list|()
block|{
return|return
name|containsField
argument_list|(
name|KEY_BASE_REVISION_ID
argument_list|)
condition|?
name|getLong
argument_list|(
name|KEY_BASE_REVISION_ID
argument_list|)
else|:
literal|null
return|;
block|}
specifier|public
name|void
name|setBaseRevisionId
parameter_list|(
name|Long
name|baseRevisionId
parameter_list|)
block|{
if|if
condition|(
name|baseRevisionId
operator|==
literal|null
condition|)
block|{
name|removeField
argument_list|(
name|KEY_BASE_REVISION_ID
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|put
argument_list|(
name|KEY_BASE_REVISION_ID
argument_list|,
name|baseRevisionId
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getBranchId
parameter_list|()
block|{
return|return
name|getString
argument_list|(
name|KEY_BRANCH_ID
argument_list|)
return|;
block|}
specifier|public
name|void
name|setBranchId
parameter_list|(
name|String
name|branchId
parameter_list|)
block|{
name|put
argument_list|(
name|KEY_BRANCH_ID
argument_list|,
name|branchId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDiff
parameter_list|()
block|{
return|return
name|getString
argument_list|(
name|KEY_DIFF
argument_list|)
return|;
block|}
specifier|public
name|void
name|setDiff
parameter_list|(
name|String
name|diff
parameter_list|)
block|{
name|put
argument_list|(
name|KEY_DIFF
argument_list|,
name|diff
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isFailed
parameter_list|()
block|{
return|return
name|getBoolean
argument_list|(
name|KEY_FAILED
argument_list|)
return|;
block|}
specifier|public
name|void
name|setFailed
parameter_list|()
block|{
name|put
argument_list|(
name|KEY_FAILED
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|getString
argument_list|(
name|KEY_MESSAGE
argument_list|)
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|put
argument_list|(
name|KEY_MESSAGE
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPath
parameter_list|()
block|{
return|return
name|getString
argument_list|(
name|KEY_PATH
argument_list|)
return|;
block|}
specifier|public
name|void
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|put
argument_list|(
name|KEY_PATH
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getRevisionId
parameter_list|()
block|{
return|return
name|containsField
argument_list|(
name|KEY_REVISION_ID
argument_list|)
condition|?
name|getLong
argument_list|(
name|KEY_REVISION_ID
argument_list|)
else|:
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setRevisionId
parameter_list|(
name|Long
name|revisionId
parameter_list|)
block|{
name|put
argument_list|(
name|KEY_REVISION_ID
argument_list|,
name|revisionId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getTimestamp
parameter_list|()
block|{
return|return
name|getLong
argument_list|(
name|KEY_TIMESTAMP
argument_list|)
return|;
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|Long
name|timestamp
parameter_list|)
block|{
name|put
argument_list|(
name|KEY_TIMESTAMP
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
block|}
comment|//--------------------------------------------------------------------------
comment|//
comment|// These properties are used to keep track but not persisted to MongoDB
comment|//
comment|//--------------------------------------------------------------------------
comment|/**      * Adds the given {@link Instruction}.      *      * @param instruction The {@code Instruction}.      */
specifier|public
name|void
name|addInstruction
parameter_list|(
name|Instruction
name|instruction
parameter_list|)
block|{
name|instructions
operator|.
name|add
argument_list|(
name|instruction
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Instruction
argument_list|>
name|getInstructions
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructions
argument_list|)
return|;
block|}
block|}
end_class

end_unit

