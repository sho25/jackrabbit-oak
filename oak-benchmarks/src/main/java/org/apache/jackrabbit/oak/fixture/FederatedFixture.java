begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|federated
operator|.
name|FederatedNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|SegmentNodeStoreBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStoreBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|InvalidFileStoreVersionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|Mounts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStoreBuilder
operator|.
name|fileStoreBuilder
import|;
end_import

begin_class
class|class
name|FederatedFixture
extends|extends
name|OakFixture
block|{
specifier|private
specifier|final
name|File
name|base
decl_stmt|;
specifier|private
specifier|final
name|int
name|maxFileSizeMB
decl_stmt|;
specifier|private
specifier|final
name|int
name|cacheSizeMB
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|memoryMapping
decl_stmt|;
specifier|private
specifier|final
name|int
name|mounts
decl_stmt|;
specifier|private
specifier|final
name|int
name|pathsPerMount
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|inMemory
decl_stmt|;
specifier|private
name|FileStore
name|fileStore
decl_stmt|;
specifier|public
name|FederatedFixture
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|mounts
parameter_list|,
name|int
name|pathsPerMount
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|inMemory
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|mounts
operator|=
name|mounts
expr_stmt|;
name|this
operator|.
name|pathsPerMount
operator|=
name|pathsPerMount
expr_stmt|;
name|this
operator|.
name|base
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|maxFileSizeMB
operator|=
operator|-
literal|1
expr_stmt|;
name|this
operator|.
name|cacheSizeMB
operator|=
operator|-
literal|1
expr_stmt|;
name|this
operator|.
name|memoryMapping
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|FederatedFixture
parameter_list|(
name|String
name|name
parameter_list|,
name|File
name|base
parameter_list|,
name|int
name|maxFileSizeMB
parameter_list|,
name|int
name|cacheSizeMB
parameter_list|,
name|boolean
name|memoryMapping
parameter_list|,
name|int
name|mounts
parameter_list|,
name|int
name|pathsPerMount
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|base
operator|=
name|base
expr_stmt|;
name|this
operator|.
name|maxFileSizeMB
operator|=
name|maxFileSizeMB
expr_stmt|;
name|this
operator|.
name|cacheSizeMB
operator|=
name|cacheSizeMB
expr_stmt|;
name|this
operator|.
name|memoryMapping
operator|=
name|memoryMapping
expr_stmt|;
name|this
operator|.
name|mounts
operator|=
name|mounts
expr_stmt|;
name|this
operator|.
name|pathsPerMount
operator|=
name|pathsPerMount
expr_stmt|;
name|this
operator|.
name|inMemory
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Oak
name|getOak
parameter_list|(
name|int
name|clusterId
parameter_list|)
throws|throws
name|Exception
block|{
name|NodeStore
name|nodeStore
init|=
name|getNodeStore
argument_list|()
decl_stmt|;
name|Mounts
operator|.
name|Builder
name|mip
init|=
name|Mounts
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mounts
condition|;
name|i
operator|++
control|)
block|{
name|String
index|[]
name|paths
init|=
operator|new
name|String
index|[
name|pathsPerMount
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|pathsPerMount
condition|;
name|j
operator|++
control|)
block|{
name|paths
index|[
name|j
index|]
operator|=
name|String
operator|.
name|format
argument_list|(
literal|"/mount-%d-path-%d"
argument_list|,
name|i
argument_list|,
name|j
argument_list|)
expr_stmt|;
block|}
name|mip
operator|.
name|readOnlyMount
argument_list|(
literal|"custom-mount-"
operator|+
name|i
argument_list|,
name|paths
argument_list|)
expr_stmt|;
block|}
name|FederatedNodeStore
operator|.
name|Builder
name|builder
init|=
operator|new
name|FederatedNodeStore
operator|.
name|Builder
argument_list|(
name|mip
operator|.
name|build
argument_list|()
argument_list|,
name|nodeStore
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mounts
condition|;
name|i
operator|++
control|)
block|{
name|builder
operator|.
name|addMount
argument_list|(
literal|"custom-mount-"
operator|+
name|i
argument_list|,
name|nodeStore
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|Oak
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|NodeStore
name|getNodeStore
parameter_list|()
throws|throws
name|IOException
throws|,
name|InvalidFileStoreVersionException
block|{
if|if
condition|(
name|inMemory
condition|)
block|{
return|return
operator|new
name|MemoryNodeStore
argument_list|()
return|;
block|}
name|FileStoreBuilder
name|fsBuilder
init|=
name|fileStoreBuilder
argument_list|(
operator|new
name|File
argument_list|(
name|base
argument_list|,
name|unique
argument_list|)
argument_list|)
operator|.
name|withMaxFileSize
argument_list|(
name|maxFileSizeMB
argument_list|)
operator|.
name|withSegmentCacheSize
argument_list|(
name|cacheSizeMB
argument_list|)
operator|.
name|withMemoryMapping
argument_list|(
name|memoryMapping
argument_list|)
decl_stmt|;
name|fileStore
operator|=
name|fsBuilder
operator|.
name|build
argument_list|()
expr_stmt|;
return|return
name|SegmentNodeStoreBuilders
operator|.
name|builder
argument_list|(
name|fileStore
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Oak
index|[]
name|setUpCluster
parameter_list|(
name|int
name|n
parameter_list|,
name|StatisticsProvider
name|statsProvider
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|n
operator|!=
literal|1
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|()
throw|;
block|}
return|return
operator|new
name|Oak
index|[]
block|{
name|getOak
argument_list|(
literal|1
argument_list|)
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|tearDownCluster
parameter_list|()
block|{
if|if
condition|(
name|fileStore
operator|!=
literal|null
condition|)
block|{
name|fileStore
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

