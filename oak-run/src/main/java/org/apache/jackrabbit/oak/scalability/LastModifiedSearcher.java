begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|scalability
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|query
operator|.
name|QueryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|scalability
operator|.
name|ScalabilityAbstractSuite
operator|.
name|ExecutionContext
import|;
end_import

begin_comment
comment|/**  * perform searches using the {@code jcr:lastModified} and the provided timeframe  */
end_comment

begin_class
specifier|public
class|class
name|LastModifiedSearcher
extends|extends
name|SearchScalabilityBenchmark
block|{
specifier|private
specifier|final
name|Date
name|timeframe
decl_stmt|;
specifier|public
name|LastModifiedSearcher
parameter_list|(
name|Date
name|timeframe
parameter_list|)
block|{
name|this
operator|.
name|timeframe
operator|=
name|timeframe
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|protected
name|Query
name|getQuery
parameter_list|(
name|QueryManager
name|qm
parameter_list|,
name|ExecutionContext
name|context
parameter_list|)
throws|throws
name|RepositoryException
block|{
comment|//  /jcr:root/content/dam//element(*, dam:Asset)[(jcr:content/@jcr:lastModified>= xs:dateTime('2013-05-09T09:44:01.403Z'))
specifier|final
name|String
name|path
init|=
operator|(
name|String
operator|)
name|context
operator|.
name|getMap
argument_list|()
operator|.
name|get
argument_list|(
name|ScalabilityBlobSearchSuite
operator|.
name|CTX_ROOT_NODE_NAME_PROP
argument_list|)
decl_stmt|;
specifier|final
name|String
name|statement
init|=
literal|"/jcr:root/"
operator|+
name|path
operator|+
literal|"//element(*, "
operator|+
name|context
operator|.
name|getMap
argument_list|()
operator|.
name|get
argument_list|(
name|ScalabilityBlobSearchSuite
operator|.
name|CTX_FILE_NODE_TYPE_PROP
argument_list|)
operator|+
literal|")[(jcr:content/@jcr:lastModified>= xs:dateTime('"
operator|+
name|timeframe
operator|.
name|toISO_8601_2000
argument_list|()
operator|+
literal|"'))]"
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"LastModifiedSearcher: {}"
argument_list|,
name|statement
argument_list|)
expr_stmt|;
return|return
name|qm
operator|.
name|createQuery
argument_list|(
name|statement
argument_list|,
name|Query
operator|.
name|XPATH
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|s
init|=
literal|"::"
decl_stmt|;
switch|switch
condition|(
name|timeframe
condition|)
block|{
case|case
name|LAST_2_HRS
case|:
name|s
operator|+=
literal|"Hour"
expr_stmt|;
break|break;
case|case
name|LAST_24_HRS
case|:
name|s
operator|+=
literal|"Day"
expr_stmt|;
break|break;
case|case
name|LAST_7_DAYS
case|:
name|s
operator|+=
literal|"Week"
expr_stmt|;
break|break;
case|case
name|LAST_MONTH
case|:
name|s
operator|+=
literal|"Month"
expr_stmt|;
break|break;
case|case
name|LAST_YEAR
case|:
name|s
operator|+=
literal|"Year"
expr_stmt|;
break|break;
default|default:
block|}
return|return
name|super
operator|.
name|toString
argument_list|()
operator|+
name|s
return|;
block|}
block|}
end_class

end_unit

