begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|split
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|monitor
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|GCJournalFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|JournalFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|JournalFileReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|ManifestFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|RepositoryLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|SegmentArchiveManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|SegmentNodeStorePersistence
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
specifier|public
class|class
name|SplitPersistence
implements|implements
name|SegmentNodeStorePersistence
block|{
specifier|private
specifier|final
name|SegmentNodeStorePersistence
name|roPersistence
decl_stmt|;
specifier|private
specifier|final
name|SegmentNodeStorePersistence
name|rwPersistence
decl_stmt|;
specifier|private
specifier|final
name|Optional
argument_list|<
name|String
argument_list|>
name|lastRoArchive
decl_stmt|;
specifier|private
specifier|final
name|Optional
argument_list|<
name|String
argument_list|>
name|lastRoJournalEntry
decl_stmt|;
specifier|public
name|SplitPersistence
parameter_list|(
name|SegmentNodeStorePersistence
name|roPersistence
parameter_list|,
name|SegmentNodeStorePersistence
name|rwPersistence
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|roPersistence
operator|=
name|roPersistence
expr_stmt|;
name|this
operator|.
name|rwPersistence
operator|=
name|rwPersistence
expr_stmt|;
name|ManifestFile
name|manifest
init|=
name|rwPersistence
operator|.
name|getManifestFile
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|manifest
operator|.
name|exists
argument_list|()
condition|)
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
name|Properties
name|properties
init|=
name|manifest
operator|.
name|load
argument_list|()
decl_stmt|;
name|lastRoArchive
operator|=
name|Optional
operator|.
name|ofNullable
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"split.lastRoArchive"
argument_list|)
argument_list|)
expr_stmt|;
name|lastRoJournalEntry
operator|=
name|Optional
operator|.
name|ofNullable
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"split.lastRoJournalEntry"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initialize
parameter_list|()
throws|throws
name|IOException
block|{
name|Properties
name|properties
init|=
name|roPersistence
operator|.
name|getManifestFile
argument_list|()
operator|.
name|load
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"split.initialized"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
try|try
init|(
name|JournalFileReader
name|journalFileReader
init|=
name|roPersistence
operator|.
name|getJournalFile
argument_list|()
operator|.
name|openJournalReader
argument_list|()
init|)
block|{
name|String
name|journalLine
decl_stmt|;
if|if
condition|(
operator|(
name|journalLine
operator|=
name|journalFileReader
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|properties
operator|.
name|setProperty
argument_list|(
literal|"split.lastRoJournalEntry"
argument_list|,
name|journalLine
argument_list|)
expr_stmt|;
block|}
block|}
name|Optional
argument_list|<
name|String
argument_list|>
name|lastArchive
init|=
name|getLastArchive
argument_list|()
decl_stmt|;
name|lastArchive
operator|.
name|ifPresent
argument_list|(
name|a
lambda|->
name|properties
operator|.
name|setProperty
argument_list|(
literal|"split.lastRoArchive"
argument_list|,
name|a
argument_list|)
argument_list|)
expr_stmt|;
name|rwPersistence
operator|.
name|getManifestFile
argument_list|()
operator|.
name|save
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|GCJournalFile
name|gcJournalFile
init|=
name|rwPersistence
operator|.
name|getGCJournalFile
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|line
range|:
name|roPersistence
operator|.
name|getGCJournalFile
argument_list|()
operator|.
name|readLines
argument_list|()
control|)
block|{
name|gcJournalFile
operator|.
name|writeLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Optional
argument_list|<
name|String
argument_list|>
name|getLastArchive
parameter_list|()
throws|throws
name|IOException
block|{
name|SegmentArchiveManager
name|manager
init|=
name|roPersistence
operator|.
name|createArchiveManager
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|IOMonitorAdapter
argument_list|()
argument_list|,
operator|new
name|FileStoreMonitorAdapter
argument_list|()
argument_list|,
operator|new
name|RemoteStoreMonitorAdapter
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|archives
init|=
name|manager
operator|.
name|listArchives
argument_list|()
decl_stmt|;
if|if
condition|(
name|archives
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
else|else
block|{
name|Collections
operator|.
name|sort
argument_list|(
name|archives
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|of
argument_list|(
name|archives
operator|.
name|get
argument_list|(
name|archives
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|SegmentArchiveManager
name|createArchiveManager
parameter_list|(
name|boolean
name|memoryMapping
parameter_list|,
name|boolean
name|offHeapAccess
parameter_list|,
name|IOMonitor
name|ioMonitor
parameter_list|,
name|FileStoreMonitor
name|fileStoreMonitor
parameter_list|,
name|RemoteStoreMonitor
name|remoteStoreMonitor
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|lastRoArchive
operator|.
name|isPresent
argument_list|()
condition|)
block|{
return|return
operator|new
name|SplitSegmentArchiveManager
argument_list|(
name|roPersistence
operator|.
name|createArchiveManager
argument_list|(
name|memoryMapping
argument_list|,
name|offHeapAccess
argument_list|,
name|ioMonitor
argument_list|,
name|fileStoreMonitor
argument_list|,
name|remoteStoreMonitor
argument_list|)
argument_list|,
name|rwPersistence
operator|.
name|createArchiveManager
argument_list|(
name|memoryMapping
argument_list|,
name|offHeapAccess
argument_list|,
name|ioMonitor
argument_list|,
name|fileStoreMonitor
argument_list|,
operator|new
name|RemoteStoreMonitorAdapter
argument_list|()
argument_list|)
argument_list|,
name|lastRoArchive
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|rwPersistence
operator|.
name|createArchiveManager
argument_list|(
name|memoryMapping
argument_list|,
name|offHeapAccess
argument_list|,
name|ioMonitor
argument_list|,
name|fileStoreMonitor
argument_list|,
operator|new
name|RemoteStoreMonitorAdapter
argument_list|()
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|segmentFilesExist
parameter_list|()
block|{
return|return
name|lastRoArchive
operator|.
name|isPresent
argument_list|()
operator|||
name|rwPersistence
operator|.
name|segmentFilesExist
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|JournalFile
name|getJournalFile
parameter_list|()
block|{
return|return
operator|new
name|SplitJournalFile
argument_list|(
name|roPersistence
operator|.
name|getJournalFile
argument_list|()
argument_list|,
name|rwPersistence
operator|.
name|getJournalFile
argument_list|()
argument_list|,
name|lastRoJournalEntry
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|GCJournalFile
name|getGCJournalFile
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|rwPersistence
operator|.
name|getGCJournalFile
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ManifestFile
name|getManifestFile
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|rwPersistence
operator|.
name|getManifestFile
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|RepositoryLock
name|lockRepository
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|rwPersistence
operator|.
name|lockRepository
argument_list|()
return|;
block|}
block|}
end_class

end_unit

