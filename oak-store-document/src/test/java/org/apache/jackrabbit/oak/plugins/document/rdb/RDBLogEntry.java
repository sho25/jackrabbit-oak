begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|rdb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * A single item in a log generated by {@link RDBDataSourceWrapper}.  */
end_comment

begin_class
specifier|public
class|class
name|RDBLogEntry
block|{
specifier|private
specifier|final
name|long
name|start
decl_stmt|;
specifier|private
specifier|final
name|long
name|duration
decl_stmt|;
specifier|private
specifier|final
name|String
name|caller
decl_stmt|;
specifier|private
specifier|final
name|String
name|message
decl_stmt|;
specifier|public
name|RDBLogEntry
parameter_list|(
name|long
name|start
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|this
operator|.
name|start
operator|=
name|start
expr_stmt|;
name|this
operator|.
name|duration
operator|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|-
name|this
operator|.
name|start
expr_stmt|;
name|this
operator|.
name|message
operator|=
name|message
expr_stmt|;
name|String
name|t
init|=
literal|null
decl_stmt|;
for|for
control|(
name|StackTraceElement
name|ste
range|:
operator|new
name|Exception
argument_list|()
operator|.
name|getStackTrace
argument_list|()
control|)
block|{
if|if
condition|(
name|ste
operator|.
name|getClassName
argument_list|()
operator|.
name|equals
argument_list|(
name|RDBDocumentStore
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|t
operator|=
name|ste
operator|.
name|getMethodName
argument_list|()
operator|+
literal|":"
operator|+
name|ste
operator|.
name|getLineNumber
argument_list|()
expr_stmt|;
block|}
block|}
name|caller
operator|=
name|t
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%d %6d %s %s"
argument_list|,
name|this
operator|.
name|start
operator|/
literal|1000
argument_list|,
name|this
operator|.
name|duration
operator|/
literal|1000
argument_list|,
name|this
operator|.
name|caller
argument_list|,
name|this
operator|.
name|message
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|DUMP
parameter_list|(
name|PrintStream
name|out
parameter_list|,
name|List
argument_list|<
name|RDBLogEntry
argument_list|>
name|log
parameter_list|)
block|{
if|if
condition|(
name|log
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|RDBLogEntry
name|entry
range|:
name|log
control|)
block|{
name|out
operator|.
name|println
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

