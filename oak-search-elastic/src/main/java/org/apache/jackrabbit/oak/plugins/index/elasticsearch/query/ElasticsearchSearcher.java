begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|query
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIndexCoordinateFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIndexCoordinate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIndexDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
operator|.
name|FieldNames
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|action
operator|.
name|search
operator|.
name|SearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|RequestOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|client
operator|.
name|RestHighLevelClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|index
operator|.
name|query
operator|.
name|QueryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|elasticsearch
operator|.
name|search
operator|.
name|builder
operator|.
name|SearchSourceBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
class|class
name|ElasticsearchSearcher
block|{
specifier|private
specifier|final
name|ElasticsearchIndexCoordinate
name|esIndexCoord
decl_stmt|;
specifier|private
specifier|final
name|RestHighLevelClient
name|client
decl_stmt|;
name|ElasticsearchSearcher
parameter_list|(
annotation|@
name|NotNull
name|ElasticsearchIndexCoordinateFactory
name|esIndexCoordFactory
parameter_list|,
annotation|@
name|NotNull
name|ElasticsearchIndexNode
name|indexNode
parameter_list|)
block|{
name|ElasticsearchIndexDefinition
name|defn
init|=
name|indexNode
operator|.
name|getDefinition
argument_list|()
decl_stmt|;
name|esIndexCoord
operator|=
name|esIndexCoordFactory
operator|.
name|getElasticsearchIndexCoordinate
argument_list|(
name|defn
argument_list|)
expr_stmt|;
name|client
operator|=
name|esIndexCoord
operator|.
name|getClient
argument_list|()
expr_stmt|;
block|}
specifier|public
name|SearchResponse
name|search
parameter_list|(
name|QueryBuilder
name|query
parameter_list|,
name|int
name|batchSize
parameter_list|)
throws|throws
name|IOException
block|{
name|SearchSourceBuilder
name|searchSourceBuilder
init|=
operator|new
name|SearchSourceBuilder
argument_list|()
operator|.
name|query
argument_list|(
name|query
argument_list|)
operator|.
name|fetchSource
argument_list|(
literal|false
argument_list|)
operator|.
name|storedField
argument_list|(
name|FieldNames
operator|.
name|PATH
argument_list|)
operator|.
name|size
argument_list|(
name|batchSize
argument_list|)
decl_stmt|;
name|SearchRequest
name|request
init|=
operator|new
name|SearchRequest
argument_list|(
name|esIndexCoord
operator|.
name|getEsIndexName
argument_list|()
argument_list|)
operator|.
name|source
argument_list|(
name|searchSourceBuilder
argument_list|)
decl_stmt|;
return|return
name|client
operator|.
name|search
argument_list|(
name|request
argument_list|,
name|RequestOptions
operator|.
name|DEFAULT
argument_list|)
return|;
block|}
block|}
end_class

end_unit

