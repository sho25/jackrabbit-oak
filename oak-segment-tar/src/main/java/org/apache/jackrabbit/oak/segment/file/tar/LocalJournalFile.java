begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|tar
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|input
operator|.
name|ReversedLinesFileReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|JournalFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|JournalFileReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|JournalFileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|RandomAccessFile
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
operator|.
name|defaultCharset
import|;
end_import

begin_class
specifier|public
class|class
name|LocalJournalFile
implements|implements
name|JournalFile
block|{
specifier|private
specifier|final
name|File
name|journalFile
decl_stmt|;
specifier|public
name|LocalJournalFile
parameter_list|(
name|File
name|directory
parameter_list|,
name|String
name|journalFile
parameter_list|)
block|{
name|this
operator|.
name|journalFile
operator|=
operator|new
name|File
argument_list|(
name|directory
argument_list|,
name|journalFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|LocalJournalFile
parameter_list|(
name|File
name|journalFile
parameter_list|)
block|{
name|this
operator|.
name|journalFile
operator|=
name|journalFile
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|JournalFileReader
name|openJournalReader
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|LocalJournalFileReader
argument_list|(
name|journalFile
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|JournalFileWriter
name|openJournalWriter
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|LocalJournalFileWriter
argument_list|(
name|journalFile
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|journalFile
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|exists
parameter_list|()
block|{
return|return
name|journalFile
operator|.
name|exists
argument_list|()
return|;
block|}
specifier|private
specifier|static
class|class
name|LocalJournalFileReader
implements|implements
name|JournalFileReader
block|{
specifier|private
specifier|final
name|ReversedLinesFileReader
name|journal
decl_stmt|;
specifier|public
name|LocalJournalFileReader
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|journal
operator|=
operator|new
name|ReversedLinesFileReader
argument_list|(
name|file
argument_list|,
name|defaultCharset
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|readLine
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|journal
operator|.
name|readLine
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|journal
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|LocalJournalFileWriter
implements|implements
name|JournalFileWriter
block|{
specifier|private
specifier|final
name|RandomAccessFile
name|journalFile
decl_stmt|;
specifier|public
name|LocalJournalFileWriter
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|journalFile
operator|=
operator|new
name|RandomAccessFile
argument_list|(
name|file
argument_list|,
literal|"rw"
argument_list|)
expr_stmt|;
name|journalFile
operator|.
name|seek
argument_list|(
name|journalFile
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|truncate
parameter_list|()
throws|throws
name|IOException
block|{
name|journalFile
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeLine
parameter_list|(
name|String
name|line
parameter_list|)
throws|throws
name|IOException
block|{
name|journalFile
operator|.
name|writeBytes
argument_list|(
name|line
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|journalFile
operator|.
name|getChannel
argument_list|()
operator|.
name|force
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|journalFile
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

