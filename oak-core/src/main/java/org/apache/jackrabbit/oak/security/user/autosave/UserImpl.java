begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|autosave
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Impersonation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_class
class|class
name|UserImpl
extends|extends
name|AuthorizableImpl
implements|implements
name|User
block|{
name|UserImpl
parameter_list|(
name|User
name|dlg
parameter_list|,
name|AutoSaveEnabledManager
name|mgr
parameter_list|)
block|{
name|super
argument_list|(
name|dlg
argument_list|,
name|mgr
argument_list|)
expr_stmt|;
block|}
specifier|private
name|User
name|getDelegate
parameter_list|()
block|{
return|return
operator|(
name|User
operator|)
name|getDlg
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isAdmin
parameter_list|()
block|{
return|return
name|getDelegate
argument_list|()
operator|.
name|isAdmin
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSystemUser
parameter_list|()
block|{
return|return
name|getDelegate
argument_list|()
operator|.
name|isSystemUser
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Credentials
name|getCredentials
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|getDelegate
argument_list|()
operator|.
name|getCredentials
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Impersonation
name|getImpersonation
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|new
name|ImpersonationImpl
argument_list|(
name|getDelegate
argument_list|()
operator|.
name|getImpersonation
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|changePassword
parameter_list|(
name|String
name|pw
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
name|getDelegate
argument_list|()
operator|.
name|changePassword
argument_list|(
name|pw
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|getMgr
argument_list|()
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|changePassword
parameter_list|(
name|String
name|pw
parameter_list|,
name|String
name|oldPw
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
name|getDelegate
argument_list|()
operator|.
name|changePassword
argument_list|(
name|pw
argument_list|,
name|oldPw
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|getMgr
argument_list|()
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|disable
parameter_list|(
name|String
name|msg
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
name|getDelegate
argument_list|()
operator|.
name|disable
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|getMgr
argument_list|()
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDisabled
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|getDelegate
argument_list|()
operator|.
name|isDisabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisabledReason
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|getDelegate
argument_list|()
operator|.
name|getDisabledReason
argument_list|()
return|;
block|}
specifier|private
specifier|final
class|class
name|ImpersonationImpl
implements|implements
name|Impersonation
block|{
specifier|private
specifier|final
name|Impersonation
name|dlg
decl_stmt|;
specifier|private
name|ImpersonationImpl
parameter_list|(
name|Impersonation
name|dlg
parameter_list|)
block|{
name|this
operator|.
name|dlg
operator|=
name|dlg
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|PrincipalIterator
name|getImpersonators
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|dlg
operator|.
name|getImpersonators
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|grantImpersonation
parameter_list|(
name|Principal
name|principal
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|dlg
operator|.
name|grantImpersonation
argument_list|(
name|principal
argument_list|)
return|;
block|}
finally|finally
block|{
name|getMgr
argument_list|()
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|revokeImpersonation
parameter_list|(
name|Principal
name|principal
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|dlg
operator|.
name|revokeImpersonation
argument_list|(
name|principal
argument_list|)
return|;
block|}
finally|finally
block|{
name|getMgr
argument_list|()
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|allows
parameter_list|(
name|Subject
name|subject
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|dlg
operator|.
name|allows
argument_list|(
name|subject
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

