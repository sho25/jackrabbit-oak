begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
operator|.
name|MERGE
import|;
end_import

begin_comment
comment|/**  * A document store exception with an optional conflict revision. The  * DocumentNodeStore implementation will throw this exception when a commit  * or merge fails with a conflict.  */
end_comment

begin_class
class|class
name|ConflictException
extends|extends
name|DocumentStoreException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1418838561903727231L
decl_stmt|;
comment|/**      * Optional conflict revision.      */
specifier|private
specifier|final
name|Revision
name|conflictRevision
decl_stmt|;
comment|/**      * @param message the exception / conflict message.      * @param conflictRevision the conflict revision or {@code null} if unknown.      */
name|ConflictException
parameter_list|(
annotation|@
name|Nonnull
name|String
name|message
parameter_list|,
annotation|@
name|Nullable
name|Revision
name|conflictRevision
parameter_list|)
block|{
name|super
argument_list|(
name|checkNotNull
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|conflictRevision
operator|=
name|conflictRevision
expr_stmt|;
block|}
comment|/**      * Convert this exception into a {@link CommitFailedException}. This      * exception will be set as the cause of the returned exception.      *      * @return a {@link CommitFailedException}.      */
name|CommitFailedException
name|asCommitFailedException
parameter_list|()
block|{
if|if
condition|(
name|conflictRevision
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|FailedWithConflictException
argument_list|(
name|conflictRevision
argument_list|,
name|getMessage
argument_list|()
argument_list|,
name|this
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|CommitFailedException
argument_list|(
name|MERGE
argument_list|,
literal|1
argument_list|,
literal|"Failed to merge changes to the underlying store"
argument_list|,
name|this
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

