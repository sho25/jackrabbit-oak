begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|inventory
operator|.
name|Format
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|AsyncIndexUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexUpdateCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|inventory
operator|.
name|IndexDefinitionPrinter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|property
operator|.
name|PropertyIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|property
operator|.
name|PropertyIndexLookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|PropertyValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
operator|.
name|NodeStateNodeTypeInfoProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
operator|.
name|ast
operator|.
name|NodeTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
operator|.
name|ast
operator|.
name|NodeTypeInfoProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
operator|.
name|ast
operator|.
name|SelectorImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
operator|.
name|index
operator|.
name|FilterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Editor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryEngineSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStateUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Charsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
operator|.
name|of
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|NT_BASE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexConstants
operator|.
name|ASYNC_PROPERTY_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexConstants
operator|.
name|INDEX_DEFINITIONS_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexConstants
operator|.
name|REINDEX_COUNT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexUtils
operator|.
name|createIndexDefinition
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|importer
operator|.
name|AsyncIndexerLock
operator|.
name|NOOP_LOCK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|EmptyNodeState
operator|.
name|EMPTY_NODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
specifier|public
class|class
name|IndexImporterTest
block|{
annotation|@
name|Rule
specifier|public
specifier|final
name|TemporaryFolder
name|temporaryFolder
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|NodeStore
name|store
init|=
operator|new
name|MemoryNodeStore
argument_list|()
decl_stmt|;
specifier|private
name|IndexEditorProvider
name|provider
init|=
operator|new
name|PropertyIndexEditorProvider
argument_list|()
decl_stmt|;
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|importIndex_NoMeta
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|NOOP_LOCK
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|lostCheckpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexerInfo
name|info
init|=
operator|new
name|IndexerInfo
argument_list|(
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
literal|"unknown-checkpoint"
argument_list|)
decl_stmt|;
name|info
operator|.
name|save
argument_list|()
expr_stmt|;
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|NOOP_LOCK
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|switchLanes
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
literal|"property"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-b"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
literal|"property"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-b"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"async"
argument_list|,
literal|"async"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|createIndexDirs
argument_list|(
literal|"/idx-a"
argument_list|,
literal|"/idx-b"
argument_list|)
expr_stmt|;
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|NOOP_LOCK
argument_list|)
decl_stmt|;
name|importer
operator|.
name|switchLanes
argument_list|()
expr_stmt|;
name|NodeState
name|idxa
init|=
name|NodeStateUtils
operator|.
name|getNode
argument_list|(
name|store
operator|.
name|getRoot
argument_list|()
argument_list|,
literal|"/idx-a"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|AsyncLaneSwitcher
operator|.
name|getTempLaneName
argument_list|(
name|IndexImporter
operator|.
name|ASYNC_LANE_SYNC
argument_list|)
argument_list|,
name|idxa
operator|.
name|getString
argument_list|(
name|ASYNC_PROPERTY_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|NodeState
name|idxb
init|=
name|NodeStateUtils
operator|.
name|getNode
argument_list|(
name|store
operator|.
name|getRoot
argument_list|()
argument_list|,
literal|"/idx-b"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|AsyncLaneSwitcher
operator|.
name|getTempLaneName
argument_list|(
literal|"async"
argument_list|)
argument_list|,
name|idxb
operator|.
name|getString
argument_list|(
name|ASYNC_PROPERTY_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|importData_NoProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
literal|"property"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|createIndexDirs
argument_list|(
literal|"/idx-a"
argument_list|)
expr_stmt|;
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|NOOP_LOCK
argument_list|)
decl_stmt|;
name|importer
operator|.
name|switchLanes
argument_list|()
expr_stmt|;
name|importer
operator|.
name|importIndexData
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|importData_CallbackInvoked
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
literal|"property"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|createIndexDirs
argument_list|(
literal|"/idx-a"
argument_list|)
expr_stmt|;
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|NOOP_LOCK
argument_list|)
decl_stmt|;
name|IndexImporterProvider
name|provider
init|=
operator|new
name|IndexImporterProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|importIndex
parameter_list|(
name|NodeState
name|root
parameter_list|,
name|NodeBuilder
name|defn
parameter_list|,
name|File
name|indexDir
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|defn
operator|.
name|getString
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"idx-a"
argument_list|,
name|indexDir
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|defn
operator|.
name|setProperty
argument_list|(
literal|"imported"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
literal|"property"
return|;
block|}
block|}
decl_stmt|;
name|importer
operator|.
name|addImporterProvider
argument_list|(
name|provider
argument_list|)
expr_stmt|;
name|importer
operator|.
name|switchLanes
argument_list|()
expr_stmt|;
name|importer
operator|.
name|importIndexData
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|getBoolean
argument_list|(
literal|"imported"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|importData_UpdatedIndexDefinition
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
literal|"property"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|createIndexDirs
argument_list|(
literal|"/idx-a"
argument_list|)
expr_stmt|;
comment|//We remove foo property here
name|builder
operator|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
operator|.
name|removeProperty
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|NOOP_LOCK
argument_list|)
decl_stmt|;
name|IndexImporterProvider
name|provider
init|=
operator|new
name|IndexImporterProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|importIndex
parameter_list|(
name|NodeState
name|root
parameter_list|,
name|NodeBuilder
name|defn
parameter_list|,
name|File
name|indexDir
parameter_list|)
block|{
comment|//Foo property should be set by virtue of import from json
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|defn
operator|.
name|getString
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
literal|"property"
return|;
block|}
block|}
decl_stmt|;
name|importer
operator|.
name|addImporterProvider
argument_list|(
name|provider
argument_list|)
expr_stmt|;
name|importer
operator|.
name|switchLanes
argument_list|()
expr_stmt|;
name|importer
operator|.
name|importIndexData
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|importData_IncrementalUpdate
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|createIndexDefinition
argument_list|(
name|builder
operator|.
name|child
argument_list|(
name|INDEX_DEFINITIONS_NAME
argument_list|)
argument_list|,
literal|"fooIndex"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
literal|null
argument_list|)
operator|.
name|setProperty
argument_list|(
name|ASYNC_PROPERTY_NAME
argument_list|,
literal|"async"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"b"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
operator|new
name|AsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|,
name|store
argument_list|,
name|provider
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|String
name|checkpoint
init|=
name|createIndexDirs
argument_list|(
literal|"/oak:index/fooIndex"
argument_list|)
decl_stmt|;
name|builder
operator|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"c"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"d"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
operator|new
name|AsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|,
name|store
argument_list|,
name|provider
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|FilterImpl
name|f
init|=
name|createFilter
argument_list|(
name|store
operator|.
name|getRoot
argument_list|()
argument_list|,
name|NT_BASE
argument_list|)
decl_stmt|;
name|PropertyIndexLookup
name|lookup
init|=
operator|new
name|PropertyIndexLookup
argument_list|(
name|store
operator|.
name|getRoot
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|of
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|find
argument_list|(
name|lookup
argument_list|,
literal|"foo"
argument_list|,
literal|"abc"
argument_list|,
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|IndexImporterProvider
name|importerProvider
init|=
operator|new
name|IndexImporterProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|importIndex
parameter_list|(
name|NodeState
name|root
parameter_list|,
name|NodeBuilder
name|defn
parameter_list|,
name|File
name|indexDir
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"fooIndex"
argument_list|,
name|indexDir
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|defn
operator|.
name|getProperty
argument_list|(
name|REINDEX_COUNT
argument_list|)
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|LONG
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|defn
operator|.
name|getChildNode
argument_list|(
name|IndexConstants
operator|.
name|INDEX_CONTENT_NODE_NAME
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|NodeState
name|cpState
init|=
name|store
operator|.
name|retrieve
argument_list|(
name|checkpoint
argument_list|)
decl_stmt|;
name|NodeState
name|indexData
init|=
name|NodeStateUtils
operator|.
name|getNode
argument_list|(
name|cpState
argument_list|,
literal|"/oak:index/fooIndex/:index"
argument_list|)
decl_stmt|;
name|defn
operator|.
name|setChildNode
argument_list|(
name|IndexConstants
operator|.
name|INDEX_CONTENT_NODE_NAME
argument_list|,
name|indexData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
literal|"property"
return|;
block|}
block|}
decl_stmt|;
name|builder
operator|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"e"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|NOOP_LOCK
argument_list|)
decl_stmt|;
name|importer
operator|.
name|addImporterProvider
argument_list|(
name|importerProvider
argument_list|)
expr_stmt|;
name|importer
operator|.
name|addImporterProvider
argument_list|(
name|importerProvider
argument_list|)
expr_stmt|;
name|importer
operator|.
name|importIndex
argument_list|()
expr_stmt|;
name|lookup
operator|=
operator|new
name|PropertyIndexLookup
argument_list|(
name|store
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
comment|//It would not pickup /e as thats not yet indexed as part of last checkpoint
name|assertEquals
argument_list|(
name|of
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|find
argument_list|(
name|lookup
argument_list|,
literal|"foo"
argument_list|,
literal|"abc"
argument_list|,
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|store
operator|.
name|retrieve
argument_list|(
name|checkpoint
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|laneName
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setProperty
argument_list|(
name|IndexConstants
operator|.
name|ASYNC_PROPERTY_NAME
argument_list|,
literal|"async"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"async"
argument_list|,
name|IndexImporter
operator|.
name|getAsyncLaneName
argument_list|(
literal|"foo"
argument_list|,
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|=
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|setProperty
argument_list|(
name|IndexConstants
operator|.
name|ASYNC_PROPERTY_NAME
argument_list|,
name|asList
argument_list|(
literal|"async"
argument_list|,
literal|"nrt"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"async"
argument_list|,
name|IndexImporter
operator|.
name|getAsyncLaneName
argument_list|(
literal|"foo"
argument_list|,
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|=
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|setProperty
argument_list|(
name|IndexConstants
operator|.
name|ASYNC_PROPERTY_NAME
argument_list|,
name|asList
argument_list|(
literal|"async"
argument_list|,
literal|"nrt"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|AsyncLaneSwitcher
operator|.
name|switchLane
argument_list|(
name|builder
argument_list|,
literal|"tmp-async"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"async"
argument_list|,
name|IndexImporter
operator|.
name|getAsyncLaneName
argument_list|(
literal|"foo"
argument_list|,
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|=
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|setProperty
argument_list|(
name|IndexConstants
operator|.
name|ASYNC_PROPERTY_NAME
argument_list|,
name|asList
argument_list|(
literal|"async"
argument_list|,
literal|"nrt"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|AsyncLaneSwitcher
operator|.
name|switchLane
argument_list|(
name|builder
argument_list|,
literal|"tmp-async"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"async"
argument_list|,
name|IndexImporter
operator|.
name|getAsyncLaneName
argument_list|(
literal|"foo"
argument_list|,
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|laneUnlockedInCaseOfFailure
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|createIndexDefinition
argument_list|(
name|builder
operator|.
name|child
argument_list|(
name|INDEX_DEFINITIONS_NAME
argument_list|)
argument_list|,
literal|"fooIndex"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
literal|null
argument_list|)
operator|.
name|setProperty
argument_list|(
name|ASYNC_PROPERTY_NAME
argument_list|,
literal|"async"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"a"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"b"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
operator|new
name|AsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|,
name|store
argument_list|,
name|provider
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|String
name|checkpoint
init|=
name|createIndexDirs
argument_list|(
literal|"/oak:index/fooIndex"
argument_list|)
decl_stmt|;
name|builder
operator|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"c"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"d"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
operator|new
name|AsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|,
name|store
argument_list|,
name|provider
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|IndexImporterProvider
name|importerProvider
init|=
operator|new
name|IndexImporterProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|importIndex
parameter_list|(
name|NodeState
name|root
parameter_list|,
name|NodeBuilder
name|defn
parameter_list|,
name|File
name|indexDir
parameter_list|)
block|{              }
annotation|@
name|Override
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
literal|"property"
return|;
block|}
block|}
decl_stmt|;
specifier|final
name|String
name|exceptionMessage
init|=
literal|"TEST MESSAGE"
decl_stmt|;
name|ClusterNodeStoreLock
name|lock
init|=
operator|new
name|ClusterNodeStoreLock
argument_list|(
name|store
argument_list|)
decl_stmt|;
name|provider
operator|=
operator|new
name|PropertyIndexEditorProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Editor
name|getIndexEditor
parameter_list|(
annotation|@
name|Nonnull
name|String
name|type
parameter_list|,
annotation|@
name|Nonnull
name|NodeBuilder
name|definition
parameter_list|,
annotation|@
name|Nonnull
name|NodeState
name|root
parameter_list|,
annotation|@
name|Nonnull
name|IndexUpdateCallback
name|callback
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|exceptionMessage
argument_list|)
throw|;
block|}
block|}
expr_stmt|;
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|lock
argument_list|)
decl_stmt|;
name|importer
operator|.
name|addImporterProvider
argument_list|(
name|importerProvider
argument_list|)
expr_stmt|;
try|try
block|{
name|importer
operator|.
name|importIndex
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|ignore
parameter_list|)
block|{          }
name|assertFalse
argument_list|(
name|lock
operator|.
name|isLocked
argument_list|(
literal|"async"
argument_list|)
argument_list|)
expr_stmt|;
name|AsyncIndexerLock
name|lock2
init|=
operator|new
name|AsyncIndexerLock
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|LockToken
name|lock
parameter_list|(
name|String
name|asyncIndexerLane
parameter_list|)
throws|throws
name|CommitFailedException
block|{
return|return
name|mock
argument_list|(
name|LockToken
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unlock
parameter_list|(
name|LockToken
name|token
parameter_list|)
throws|throws
name|CommitFailedException
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Exception in unlock"
argument_list|)
throw|;
block|}
block|}
decl_stmt|;
name|IndexImporter
name|importer2
init|=
operator|new
name|IndexImporter
argument_list|(
name|store
argument_list|,
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|provider
argument_list|,
name|lock2
argument_list|)
decl_stmt|;
name|importer2
operator|.
name|addImporterProvider
argument_list|(
name|importerProvider
argument_list|)
expr_stmt|;
try|try
block|{
name|importer2
operator|.
name|importIndex
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|ignore
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|exceptionMessage
argument_list|,
name|ignore
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|FilterImpl
name|createFilter
parameter_list|(
name|NodeState
name|root
parameter_list|,
name|String
name|nodeTypeName
parameter_list|)
block|{
name|NodeTypeInfoProvider
name|nodeTypes
init|=
operator|new
name|NodeStateNodeTypeInfoProvider
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|NodeTypeInfo
name|type
init|=
name|nodeTypes
operator|.
name|getNodeTypeInfo
argument_list|(
name|nodeTypeName
argument_list|)
decl_stmt|;
name|SelectorImpl
name|selector
init|=
operator|new
name|SelectorImpl
argument_list|(
name|type
argument_list|,
name|nodeTypeName
argument_list|)
decl_stmt|;
return|return
operator|new
name|FilterImpl
argument_list|(
name|selector
argument_list|,
literal|"SELECT * FROM ["
operator|+
name|nodeTypeName
operator|+
literal|"]"
argument_list|,
operator|new
name|QueryEngineSettings
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Set
argument_list|<
name|String
argument_list|>
name|find
parameter_list|(
name|PropertyIndexLookup
name|lookup
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|,
name|Filter
name|filter
parameter_list|)
block|{
return|return
name|Sets
operator|.
name|newHashSet
argument_list|(
name|lookup
operator|.
name|query
argument_list|(
name|filter
argument_list|,
name|name
argument_list|,
name|value
operator|==
literal|null
condition|?
literal|null
else|:
name|PropertyValues
operator|.
name|newString
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|String
name|createIndexDirs
parameter_list|(
name|String
modifier|...
name|indexPaths
parameter_list|)
throws|throws
name|IOException
throws|,
name|CommitFailedException
block|{
name|String
name|checkpoint
init|=
name|store
operator|.
name|checkpoint
argument_list|(
literal|1000000
argument_list|)
decl_stmt|;
name|IndexerInfo
name|info
init|=
operator|new
name|IndexerInfo
argument_list|(
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|checkpoint
argument_list|)
decl_stmt|;
name|info
operator|.
name|save
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|indexPath
range|:
name|indexPaths
control|)
block|{
name|String
name|dirName
init|=
name|PathUtils
operator|.
name|getName
argument_list|(
name|indexPath
argument_list|)
decl_stmt|;
name|File
name|indexDir
init|=
operator|new
name|File
argument_list|(
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|dirName
argument_list|)
decl_stmt|;
name|File
name|indexMeta
init|=
operator|new
name|File
argument_list|(
name|indexDir
argument_list|,
name|IndexerInfo
operator|.
name|INDEX_METADATA_FILE_NAME
argument_list|)
decl_stmt|;
name|Properties
name|p
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|p
operator|.
name|setProperty
argument_list|(
name|IndexerInfo
operator|.
name|PROP_INDEX_PATH
argument_list|,
name|indexPath
argument_list|)
expr_stmt|;
name|indexDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|PropUtils
operator|.
name|writeTo
argument_list|(
name|p
argument_list|,
name|indexMeta
argument_list|,
literal|"index info"
argument_list|)
expr_stmt|;
block|}
name|dumpIndexDefinitions
argument_list|(
name|indexPaths
argument_list|)
expr_stmt|;
return|return
name|checkpoint
return|;
block|}
specifier|private
name|void
name|dumpIndexDefinitions
parameter_list|(
name|String
modifier|...
name|indexPaths
parameter_list|)
throws|throws
name|IOException
throws|,
name|CommitFailedException
block|{
name|IndexDefinitionPrinter
name|printer
init|=
operator|new
name|IndexDefinitionPrinter
argument_list|(
name|store
argument_list|,
parameter_list|()
lambda|->
name|asList
argument_list|(
name|indexPaths
argument_list|)
argument_list|)
decl_stmt|;
name|printer
operator|.
name|setFilter
argument_list|(
literal|"{\"properties\":[\"*\", \"-:childOrder\"],\"nodes\":[\"*\", \"-:index-definition\"]}"
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|IndexDefinitionUpdater
operator|.
name|INDEX_DEFINITIONS_JSON
argument_list|)
decl_stmt|;
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
decl_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|pw
argument_list|,
name|Format
operator|.
name|JSON
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Files
operator|.
name|write
argument_list|(
name|sw
operator|.
name|toString
argument_list|()
argument_list|,
name|file
argument_list|,
name|UTF_8
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

