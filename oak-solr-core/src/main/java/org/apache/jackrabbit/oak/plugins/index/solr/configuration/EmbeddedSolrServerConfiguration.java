begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|server
operator|.
name|EmbeddedSolrServerProvider
import|;
end_import

begin_comment
comment|/**  * Configuration parameters for starting a {@link org.apache.solr.client.solrj.SolrServer}  */
end_comment

begin_class
specifier|public
class|class
name|EmbeddedSolrServerConfiguration
extends|extends
name|SolrServerConfiguration
argument_list|<
name|EmbeddedSolrServerProvider
argument_list|>
block|{
specifier|private
specifier|final
name|String
name|solrHomePath
decl_stmt|;
specifier|private
specifier|final
name|String
name|solrConfigPath
decl_stmt|;
specifier|private
specifier|final
name|String
name|coreName
decl_stmt|;
specifier|private
name|HttpConfiguration
name|httpConfiguration
decl_stmt|;
specifier|public
name|EmbeddedSolrServerConfiguration
parameter_list|(
name|String
name|solrHomePath
parameter_list|,
name|String
name|solrConfigPath
parameter_list|,
name|String
name|coreName
parameter_list|)
block|{
name|this
operator|.
name|solrHomePath
operator|=
name|solrHomePath
expr_stmt|;
name|this
operator|.
name|solrConfigPath
operator|=
name|solrConfigPath
expr_stmt|;
name|this
operator|.
name|coreName
operator|=
name|coreName
expr_stmt|;
block|}
specifier|public
name|EmbeddedSolrServerConfiguration
name|withHttpConfiguration
parameter_list|(
name|String
name|context
parameter_list|,
name|Integer
name|httpPort
parameter_list|)
block|{
if|if
condition|(
name|context
operator|!=
literal|null
operator|&&
name|context
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
name|httpPort
operator|!=
literal|null
operator|&&
name|httpPort
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|httpConfiguration
operator|=
operator|new
name|HttpConfiguration
argument_list|(
name|context
argument_list|,
name|httpPort
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      * get the Solr home path where all the configuration files are stored      *      * @return a<code>String</code> representing a path to the Solr home.      */
specifier|public
name|String
name|getSolrHomePath
parameter_list|()
block|{
return|return
name|solrHomePath
return|;
block|}
comment|/**      * get the name of the main Solr configuration file (solr.xml for multicore      * deployments or solrconfig.xml for single core deployments).      *      * @return a<code>String</code> representing a path to the main Solr config file.      */
specifier|public
name|String
name|getSolrConfigPath
parameter_list|()
block|{
return|return
name|solrConfigPath
return|;
block|}
comment|/**      * get the default core name to use for the Solr server      *      * @return a<code>String</code> representing the core name      */
specifier|public
name|String
name|getCoreName
parameter_list|()
block|{
return|return
name|coreName
return|;
block|}
comment|/**      * get the {@link org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration} holding parameters for enabling Solr      * server with HTTP bindings      *      * @return a {@link org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration} or<code>null</code> if not set      */
specifier|public
name|HttpConfiguration
name|getHttpConfiguration
parameter_list|()
block|{
return|return
name|httpConfiguration
return|;
block|}
specifier|public
class|class
name|HttpConfiguration
block|{
specifier|private
specifier|final
name|String
name|context
decl_stmt|;
specifier|private
specifier|final
name|Integer
name|httpPort
decl_stmt|;
name|HttpConfiguration
parameter_list|(
name|String
name|context
parameter_list|,
name|Integer
name|httpPort
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|this
operator|.
name|httpPort
operator|=
name|httpPort
expr_stmt|;
block|}
specifier|public
name|String
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
specifier|public
name|Integer
name|getHttpPort
parameter_list|()
block|{
return|return
name|httpPort
return|;
block|}
block|}
block|}
end_class

end_unit

