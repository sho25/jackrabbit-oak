begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_class
specifier|public
class|class
name|SimpleTicker
implements|implements
name|ProgressTicker
block|{
specifier|private
specifier|final
name|int
name|maxTicks
decl_stmt|;
specifier|private
name|int
name|dotCount
decl_stmt|;
specifier|private
name|boolean
name|decreasing
decl_stmt|;
specifier|public
name|SimpleTicker
parameter_list|(
name|int
name|maxTicks
parameter_list|)
block|{
name|this
operator|.
name|maxTicks
operator|=
name|maxTicks
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|tick
parameter_list|()
block|{
name|int
name|noOfDots
init|=
name|decreasing
condition|?
name|dotCount
operator|--
else|:
name|dotCount
operator|++
decl_stmt|;
if|if
condition|(
name|dotCount
operator|==
literal|0
condition|)
block|{
name|decreasing
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|dotCount
operator|==
name|maxTicks
condition|)
block|{
name|decreasing
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|Strings
operator|.
name|repeat
argument_list|(
literal|"."
argument_list|,
name|noOfDots
argument_list|)
return|;
block|}
block|}
end_class

end_unit

