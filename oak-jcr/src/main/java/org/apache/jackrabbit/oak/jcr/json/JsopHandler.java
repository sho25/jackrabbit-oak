begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|json
package|;
end_package

begin_class
specifier|public
class|class
name|JsopHandler
block|{
specifier|public
name|void
name|add
parameter_list|(
name|Token
name|path
parameter_list|,
name|JsonTokenizer
name|value
parameter_list|)
block|{
operator|new
name|JsonParser
argument_list|(
name|JsonHandler
operator|.
name|INSTANCE
argument_list|)
operator|.
name|parseObject
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|add
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
name|value
parameter_list|)
block|{ }
specifier|public
name|void
name|add
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
index|[]
name|values
parameter_list|)
block|{ }
specifier|public
name|void
name|remove
parameter_list|(
name|Token
name|path
parameter_list|)
block|{ }
specifier|public
name|void
name|set
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
name|value
parameter_list|)
block|{ }
specifier|public
name|void
name|set
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
index|[]
name|values
parameter_list|)
block|{ }
specifier|public
name|void
name|reorder
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
name|position
parameter_list|,
name|Token
name|target
parameter_list|)
block|{ }
specifier|public
name|void
name|move
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
name|target
parameter_list|)
block|{ }
specifier|public
name|void
name|test
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
name|value
parameter_list|)
block|{ }
specifier|public
name|void
name|test
parameter_list|(
name|Token
name|path
parameter_list|,
name|Token
index|[]
name|values
parameter_list|)
block|{ }
specifier|public
name|void
name|metaData
parameter_list|(
name|JsonTokenizer
name|value
parameter_list|)
block|{
operator|new
name|JsonParser
argument_list|(
name|JsonHandler
operator|.
name|INSTANCE
argument_list|)
operator|.
name|parseObject
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|extension
parameter_list|(
name|char
name|op
parameter_list|,
name|Token
name|path
parameter_list|,
name|JsonTokenizer
name|value
parameter_list|)
block|{
operator|new
name|JsonParser
argument_list|(
name|JsonHandler
operator|.
name|INSTANCE
argument_list|)
operator|.
name|parseObject
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|extension
parameter_list|(
name|char
name|op
parameter_list|,
name|Token
index|[]
name|values
parameter_list|)
block|{ }
specifier|public
name|void
name|extension
parameter_list|(
name|char
name|op
parameter_list|,
name|Token
name|value
parameter_list|)
block|{ }
block|}
end_class

end_unit

