begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
operator|.
name|version
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_comment
comment|/**  * This class allows to configure the behaviour of the version copier.  */
end_comment

begin_class
specifier|public
class|class
name|VersionCopyConfiguration
block|{
specifier|private
name|Calendar
name|copyVersions
decl_stmt|;
specifier|private
name|Calendar
name|copyOrphanedVersions
decl_stmt|;
specifier|public
name|VersionCopyConfiguration
parameter_list|()
block|{
specifier|final
name|Calendar
name|epoch
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|epoch
operator|.
name|setTimeInMillis
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|this
operator|.
name|copyVersions
operator|=
name|epoch
expr_stmt|;
name|this
operator|.
name|copyOrphanedVersions
operator|=
name|epoch
expr_stmt|;
block|}
specifier|public
name|void
name|setCopyVersions
parameter_list|(
name|Calendar
name|copyVersions
parameter_list|)
block|{
name|this
operator|.
name|copyVersions
operator|=
name|copyVersions
expr_stmt|;
block|}
specifier|public
name|void
name|setCopyOrphanedVersions
parameter_list|(
name|Calendar
name|copyOrphanedVersions
parameter_list|)
block|{
name|this
operator|.
name|copyOrphanedVersions
operator|=
name|copyOrphanedVersions
expr_stmt|;
block|}
specifier|public
name|Calendar
name|getVersionsMinDate
parameter_list|()
block|{
return|return
name|copyVersions
return|;
block|}
specifier|public
name|Calendar
name|getOrphanedMinDate
parameter_list|()
block|{
if|if
condition|(
name|copyVersions
operator|==
literal|null
condition|)
block|{
return|return
name|copyVersions
return|;
block|}
elseif|else
if|if
condition|(
name|copyOrphanedVersions
operator|!=
literal|null
operator|&&
name|copyVersions
operator|.
name|after
argument_list|(
name|copyOrphanedVersions
argument_list|)
condition|)
block|{
return|return
name|copyVersions
return|;
block|}
else|else
block|{
return|return
name|copyOrphanedVersions
return|;
block|}
block|}
specifier|public
name|boolean
name|isCopyVersions
parameter_list|()
block|{
return|return
name|copyVersions
operator|!=
literal|null
return|;
block|}
specifier|public
name|boolean
name|skipOrphanedVersionsCopy
parameter_list|()
block|{
return|return
name|copyVersions
operator|==
literal|null
operator|||
name|copyOrphanedVersions
operator|==
literal|null
return|;
block|}
specifier|public
name|boolean
name|isCopyAll
parameter_list|()
block|{
return|return
name|copyVersions
operator|!=
literal|null
operator|&&
name|copyVersions
operator|.
name|getTimeInMillis
argument_list|()
operator|==
literal|0
operator|&&
name|copyOrphanedVersions
operator|!=
literal|null
operator|&&
name|copyOrphanedVersions
operator|.
name|getTimeInMillis
argument_list|()
operator|==
literal|0
return|;
block|}
block|}
end_class

end_unit

