begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|JackrabbitAccessControlManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|jackrabbit
operator|.
name|authorization
operator|.
name|AccessControlUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|accesscontrol
operator|.
name|AccessControlConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ProtectedItemImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|ImportUUIDBehavior
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|ConstraintViolationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|AccessControlEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|accesscontrol
operator|.
name|AccessControlConstants
operator|.
name|REP_GLOB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|MIX_REP_PRINCIPAL_BASED_MIXIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|NT_REP_PRINCIPAL_ENTRY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|NT_REP_PRINCIPAL_POLICY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|NT_REP_RESTRICTIONS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_EFFECTIVE_PATH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_PRINCIPAL_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_PRINCIPAL_POLICY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_PRIVILEGES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_RESTRICTIONS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
operator|.
name|JCR_NAMESPACE_MANAGEMENT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
operator|.
name|JCR_READ
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|ImportBaseTest
extends|extends
name|AbstractPrincipalBasedTest
block|{
specifier|private
name|Repository
name|repo
decl_stmt|;
specifier|private
name|JackrabbitSession
name|adminSession
decl_stmt|;
specifier|private
name|String
name|testPath
decl_stmt|;
specifier|private
name|String
name|uid
decl_stmt|;
specifier|private
name|Principal
name|testPrincipal
decl_stmt|;
specifier|private
name|String
name|testPrincipalName
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|Jcr
name|jcr
init|=
operator|new
name|Jcr
argument_list|()
decl_stmt|;
name|jcr
operator|.
name|with
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|jcr
operator|.
name|with
argument_list|(
name|getQueryEngineSettings
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|=
name|jcr
operator|.
name|createRepository
argument_list|()
expr_stmt|;
name|adminSession
operator|=
operator|(
name|JackrabbitSession
operator|)
name|repo
operator|.
name|login
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
name|UserConstants
operator|.
name|DEFAULT_ADMIN_ID
argument_list|,
name|UserConstants
operator|.
name|DEFAULT_ADMIN_ID
operator|.
name|toCharArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|User
name|u
init|=
name|getUserManager
argument_list|()
operator|.
name|createSystemUser
argument_list|(
literal|"testSystemUser"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
argument_list|,
name|getNamePathMapper
argument_list|()
operator|.
name|getJcrPath
argument_list|(
name|INTERMEDIATE_PATH
argument_list|)
argument_list|)
decl_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|uid
operator|=
name|u
operator|.
name|getID
argument_list|()
expr_stmt|;
name|testPath
operator|=
name|u
operator|.
name|getPath
argument_list|()
expr_stmt|;
name|testPrincipal
operator|=
name|u
operator|.
name|getPrincipal
argument_list|()
expr_stmt|;
name|testPrincipalName
operator|=
name|testPrincipal
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|adminSession
operator|.
name|refresh
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|User
name|u
init|=
name|getUserManager
argument_list|()
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|,
name|User
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|u
operator|!=
literal|null
condition|)
block|{
name|u
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|adminSession
operator|.
name|removeItem
argument_list|(
name|SUPPORTED_PATH
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|adminSession
operator|.
name|logout
argument_list|()
expr_stmt|;
if|if
condition|(
name|repo
operator|instanceof
name|JackrabbitRepository
condition|)
block|{
operator|(
operator|(
name|JackrabbitRepository
operator|)
name|repo
operator|)
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|ConfigurationParameters
name|getSecurityConfigParameters
parameter_list|()
block|{
return|return
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|AuthorizationConfiguration
operator|.
name|NAME
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|ProtectedItemImporter
operator|.
name|PARAM_IMPORT_BEHAVIOR
argument_list|,
name|getImportBehavior
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
specifier|abstract
name|String
name|getImportBehavior
parameter_list|()
function_decl|;
name|UserManager
name|getUserManager
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|adminSession
operator|.
name|getUserManager
argument_list|()
return|;
block|}
name|JackrabbitSession
name|getSession
parameter_list|()
block|{
return|return
name|adminSession
return|;
block|}
name|JackrabbitAccessControlManager
name|getAccessControlManager
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|(
name|JackrabbitAccessControlManager
operator|)
name|adminSession
operator|.
name|getAccessControlManager
argument_list|()
return|;
block|}
name|void
name|doImport
parameter_list|(
name|String
name|parentPath
parameter_list|,
name|String
name|xml
parameter_list|)
throws|throws
name|Exception
block|{
name|doImport
argument_list|(
name|adminSession
argument_list|,
name|parentPath
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_THROW
argument_list|)
expr_stmt|;
block|}
name|void
name|doImport
parameter_list|(
name|Session
name|importSession
parameter_list|,
name|String
name|parentPath
parameter_list|,
name|String
name|xml
parameter_list|,
name|int
name|importUUIDBehavior
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|in
decl_stmt|;
if|if
condition|(
name|xml
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|'<'
condition|)
block|{
name|in
operator|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|xml
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|in
operator|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|xml
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|importSession
operator|.
name|importXML
argument_list|(
name|parentPath
argument_list|,
name|in
argument_list|,
name|importUUIDBehavior
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testPolicyWithoutPrincipalName
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|addMixin
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
expr_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|hasNode
argument_list|(
name|REP_PRINCIPAL_POLICY
argument_list|)
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyPolicyMissingMixinType
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|isNodeType
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|hasNode
argument_list|(
name|REP_PRINCIPAL_POLICY
argument_list|)
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyPolicy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|addMixin
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
expr_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|PrincipalPolicyImpl
name|policy
init|=
name|getPrincipalPolicyImpl
argument_list|(
name|testPrincipal
argument_list|,
name|getAccessControlManager
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|policy
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEmptyPolicyWithInvalidNodeName
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\"someOtherNode\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|addMixin
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
expr_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEmptyPolicyPrincipalNameTypeMismatch
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|getTestUser
argument_list|()
operator|.
name|getPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|addMixin
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
expr_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEmptyPolicyPrincipalNameMultiple
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\" sv:multiple=\"true\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|addMixin
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
expr_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNestedPolicy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|addMixin
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
expr_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEmptyPolicyWithInvalidPrincipalName
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|getTestUser
argument_list|()
operator|.
name|getPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|adminSession
operator|.
name|getNode
argument_list|(
name|testPath
argument_list|)
operator|.
name|addMixin
argument_list|(
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|)
expr_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
comment|//adminSession.save();
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEntryWithMissingEffectivePath
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEntryWithEffectivePathTypeMismatch
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"String\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RepositoryException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEntryWithEffectivePathMV
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\" sv:multiple=\"true\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEntryWithMissingPrivileges
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEntryWithPrivilegesTypeMismatch
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"String\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEntryWithPrivilegesSingleValue
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|Node
name|policyNode
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|PathUtils
operator|.
name|concat
argument_list|(
name|testPath
argument_list|,
name|REP_PRINCIPAL_POLICY
argument_list|)
argument_list|)
decl_stmt|;
name|Node
name|entry
init|=
name|Iterators
operator|.
expr|<
name|Node
operator|>
name|getOnlyElement
argument_list|(
name|policyNode
operator|.
name|getNodes
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|entry
operator|.
name|isNodeType
argument_list|(
name|NT_REP_PRINCIPAL_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|entry
operator|.
name|getProperty
argument_list|(
name|REP_PRIVILEGES
argument_list|)
operator|.
name|isMultiple
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTwoIdenticalEntries
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"<sv:node sv:name=\"entry1\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|PrincipalPolicyImpl
name|policy
init|=
name|getPrincipalPolicyImpl
argument_list|(
name|testPrincipal
argument_list|,
name|getAccessControlManager
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|policy
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTwoDifferentEntries
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"<sv:node sv:name=\"entry1\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value></sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_NAMESPACE_MANAGEMENT
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|PrincipalPolicyImpl
name|policy
init|=
name|getPrincipalPolicyImpl
argument_list|(
name|testPrincipal
argument_list|,
name|getAccessControlManager
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|policy
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PrincipalPolicyImpl
operator|.
name|EntryImpl
argument_list|>
name|entries
init|=
name|policy
operator|.
name|getEntries
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/content"
argument_list|,
name|entries
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEffectivePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|entries
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getEffectivePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEffectivePathInRestriction
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_RESTRICTIONS
operator|+
literal|"\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_RESTRICTIONS
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|AccessControlConstants
operator|.
name|REP_NODE_PATH
operator|+
literal|"\" sv:type=\"String\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|PrincipalPolicyImpl
name|policy
init|=
name|getPrincipalPolicyImpl
argument_list|(
name|testPrincipal
argument_list|,
name|getAccessControlManager
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|policy
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|PrincipalPolicyImpl
operator|.
name|EntryImpl
name|entry
init|=
name|policy
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/content"
argument_list|,
name|entry
operator|.
name|getOakPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|entry
operator|.
name|getRestrictions
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testUnsupportedPath
parameter_list|()
throws|throws
name|Exception
block|{
comment|// move user node outside of supported path.
name|String
name|unsupportedPath
init|=
name|PathUtils
operator|.
name|concat
argument_list|(
name|PathUtils
operator|.
name|getAncestorPath
argument_list|(
name|testPath
argument_list|,
literal|2
argument_list|)
argument_list|,
name|PathUtils
operator|.
name|getName
argument_list|(
name|testPath
argument_list|)
argument_list|)
decl_stmt|;
name|adminSession
operator|.
name|move
argument_list|(
name|testPath
argument_list|,
name|unsupportedPath
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
comment|// import will leave incomplete policy
name|doImport
argument_list|(
name|unsupportedPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEntryWithRestriction
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_PRINCIPAL_POLICY
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_POLICY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRINCIPAL_NAME
operator|+
literal|"\" sv:type=\"String\"><sv:value>"
operator|+
name|testPrincipalName
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:node sv:name=\"entry0\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_PRINCIPAL_ENTRY
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_EFFECTIVE_PATH
operator|+
literal|"\" sv:type=\"Path\"><sv:value>/content</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_PRIVILEGES
operator|+
literal|"\" sv:type=\"Name\" sv:multiple=\"true\">"
operator|+
literal|"<sv:value>"
operator|+
name|JCR_READ
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|REP_RESTRICTIONS
operator|+
literal|"\">"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|JCR_PRIMARYTYPE
operator|+
literal|"\" sv:type=\"Name\"><sv:value>"
operator|+
name|NT_REP_RESTRICTIONS
operator|+
literal|"</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|REP_GLOB
operator|+
literal|"\" sv:type=\"String\"><sv:value>*</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|testPath
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|PrincipalPolicyImpl
name|policy
init|=
name|getPrincipalPolicyImpl
argument_list|(
name|testPrincipal
argument_list|,
name|getAccessControlManager
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|policy
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|PrincipalPolicyImpl
operator|.
name|EntryImpl
name|entry
init|=
name|policy
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"*"
argument_list|,
name|entry
operator|.
name|getRestriction
argument_list|(
name|REP_GLOB
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExportImport
parameter_list|()
throws|throws
name|Exception
block|{
name|JackrabbitAccessControlManager
name|acmgr
init|=
name|getAccessControlManager
argument_list|()
decl_stmt|;
name|PrincipalPolicyImpl
name|policy
init|=
name|getPrincipalPolicyImpl
argument_list|(
name|testPrincipal
argument_list|,
name|acmgr
argument_list|)
decl_stmt|;
name|policy
operator|.
name|addEntry
argument_list|(
literal|"/content"
argument_list|,
name|AccessControlUtils
operator|.
name|privilegesFromNames
argument_list|(
name|acmgr
argument_list|,
name|PrivilegeConstants
operator|.
name|JCR_READ
argument_list|)
argument_list|)
expr_stmt|;
name|policy
operator|.
name|addEntry
argument_list|(
literal|null
argument_list|,
name|AccessControlUtils
operator|.
name|privilegesFromNames
argument_list|(
name|acmgr
argument_list|,
name|PrivilegeConstants
operator|.
name|REP_PRIVILEGE_MANAGEMENT
argument_list|)
argument_list|)
expr_stmt|;
name|AccessControlEntry
index|[]
name|expected
init|=
name|policy
operator|.
name|getAccessControlEntries
argument_list|()
decl_stmt|;
name|acmgr
operator|.
name|setPolicy
argument_list|(
name|policy
operator|.
name|getPath
argument_list|()
argument_list|,
name|policy
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|output
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|adminSession
operator|.
name|exportSystemView
argument_list|(
name|PathUtils
operator|.
name|concat
argument_list|(
name|policy
operator|.
name|getPath
argument_list|()
argument_list|,
name|REP_PRINCIPAL_POLICY
argument_list|)
argument_list|,
name|output
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|refresh
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|importXML
argument_list|(
name|policy
operator|.
name|getPath
argument_list|()
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
operator|(
operator|(
name|ByteArrayOutputStream
operator|)
name|output
operator|)
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_THROW
argument_list|)
expr_stmt|;
name|policy
operator|=
name|getPrincipalPolicyImpl
argument_list|(
name|testPrincipal
argument_list|,
name|acmgr
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|expected
argument_list|,
name|policy
operator|.
name|getAccessControlEntries
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

