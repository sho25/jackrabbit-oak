begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|ClientSessionOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|MongoClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|session
operator|.
name|ClientSession
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|session
operator|.
name|ServerSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|BsonDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|BsonTimestamp
import|;
end_import

begin_comment
comment|/**  * Factory for {@link ClientSession}s.  */
end_comment

begin_class
class|class
name|MongoSessionFactory
block|{
specifier|private
specifier|final
name|MongoClient
name|client
decl_stmt|;
specifier|private
specifier|final
name|ClientSessionOptions
name|options
decl_stmt|;
specifier|private
name|BsonDocument
name|clusterTime
decl_stmt|;
specifier|private
name|BsonTimestamp
name|operationTime
decl_stmt|;
name|MongoSessionFactory
parameter_list|(
name|MongoClient
name|client
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|this
operator|.
name|options
operator|=
name|ClientSessionOptions
operator|.
name|builder
argument_list|()
operator|.
name|causallyConsistent
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|ClientSession
name|createClientSession
parameter_list|()
block|{
name|ClientSession
name|s
init|=
name|client
operator|.
name|startSession
argument_list|(
name|options
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
name|s
operator|.
name|advanceClusterTime
argument_list|(
name|clusterTime
argument_list|)
expr_stmt|;
name|s
operator|.
name|advanceOperationTime
argument_list|(
name|operationTime
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|TrackingClientSession
argument_list|(
name|s
argument_list|)
return|;
block|}
specifier|private
class|class
name|TrackingClientSession
implements|implements
name|ClientSession
block|{
specifier|private
specifier|final
name|ClientSession
name|session
decl_stmt|;
name|TrackingClientSession
parameter_list|(
name|ClientSession
name|session
parameter_list|)
block|{
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ClientSessionOptions
name|getOptions
parameter_list|()
block|{
return|return
name|session
operator|.
name|getOptions
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCausallyConsistent
parameter_list|()
block|{
return|return
name|session
operator|.
name|isCausallyConsistent
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getOriginator
parameter_list|()
block|{
return|return
name|session
operator|.
name|getOriginator
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ServerSession
name|getServerSession
parameter_list|()
block|{
return|return
name|session
operator|.
name|getServerSession
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|BsonTimestamp
name|getOperationTime
parameter_list|()
block|{
return|return
name|session
operator|.
name|getOperationTime
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|advanceOperationTime
parameter_list|(
name|BsonTimestamp
name|operationTime
parameter_list|)
block|{
name|session
operator|.
name|advanceOperationTime
argument_list|(
name|operationTime
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|advanceClusterTime
parameter_list|(
name|BsonDocument
name|clusterTime
parameter_list|)
block|{
name|session
operator|.
name|advanceClusterTime
argument_list|(
name|clusterTime
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|BsonDocument
name|getClusterTime
parameter_list|()
block|{
return|return
name|session
operator|.
name|getClusterTime
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|session
operator|.
name|advanceClusterTime
argument_list|(
name|clusterTime
argument_list|)
expr_stmt|;
name|clusterTime
operator|=
name|session
operator|.
name|getClusterTime
argument_list|()
expr_stmt|;
name|session
operator|.
name|advanceOperationTime
argument_list|(
name|operationTime
argument_list|)
expr_stmt|;
name|operationTime
operator|=
name|session
operator|.
name|getOperationTime
argument_list|()
expr_stmt|;
block|}
name|session
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

