begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CoreValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|PropertyStates
block|{
specifier|private
name|PropertyStates
parameter_list|()
block|{}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|PropertyState
name|createProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|CoreValue
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|PropertyState
name|createProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|List
argument_list|<
name|CoreValue
argument_list|>
name|values
parameter_list|)
block|{
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|values
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Nonnull
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|PropertyState
name|createProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|T
name|value
parameter_list|,
name|Type
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
switch|switch
condition|(
name|type
operator|.
name|tag
argument_list|()
condition|)
block|{
case|case
name|PropertyType
operator|.
name|STRING
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|stringProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|String
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|stringProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|BINARY
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|binaryPropertyFromBlob
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|Blob
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|binaryProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Blob
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|LONG
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|longProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|Long
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|longProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Long
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|DOUBLE
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|doubleProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|Double
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|doubleProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Double
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|DATE
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|dateProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|String
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|dateProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|BOOLEAN
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|booleanProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|Boolean
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|booleanProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Boolean
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|NAME
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|nameProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|String
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|nameProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|PATH
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|pathProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|String
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|pathProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|REFERENCE
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|referenceProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|String
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|referenceProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|WEAKREFERENCE
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|weakreferenceProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|String
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|weakreferenceProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|URI
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|uriProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|String
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|uriProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
case|case
name|PropertyType
operator|.
name|DECIMAL
case|:
return|return
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|decimalProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Iterable
argument_list|<
name|BigDecimal
argument_list|>
operator|)
name|value
argument_list|)
else|:
name|decimalProperty
argument_list|(
name|name
argument_list|,
operator|(
name|BigDecimal
operator|)
name|value
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid type: "
operator|+
name|type
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Nonnull
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|PropertyState
name|createProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|T
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|instanceof
name|String
condition|)
block|{
return|return
name|stringProperty
argument_list|(
name|name
argument_list|,
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|Blob
condition|)
block|{
return|return
name|binaryProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Blob
operator|)
name|value
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|byte
index|[]
condition|)
block|{
return|return
name|binaryProperty
argument_list|(
name|name
argument_list|,
operator|(
name|byte
index|[]
operator|)
name|value
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|Long
condition|)
block|{
return|return
name|longProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Long
operator|)
name|value
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|Integer
condition|)
block|{
return|return
name|longProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Integer
operator|)
name|value
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|Double
condition|)
block|{
return|return
name|doubleProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Double
operator|)
name|value
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|Boolean
condition|)
block|{
return|return
name|booleanProperty
argument_list|(
name|name
argument_list|,
operator|(
name|Boolean
operator|)
name|value
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|BigDecimal
condition|)
block|{
return|return
name|decimalProperty
argument_list|(
name|name
argument_list|,
operator|(
name|BigDecimal
operator|)
name|value
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Can't infer type of value of class '"
operator|+
name|value
operator|.
name|getClass
argument_list|()
operator|+
literal|'\''
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|PropertyState
name|emptyProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Type
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
return|return
operator|new
name|EmptyPropertyState
argument_list|(
name|name
argument_list|,
name|type
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|stringProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|StringValue
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|binaryProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|byte
index|[]
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|BinaryValue
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|longProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|LongValue
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|doubleProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|double
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|DoubleValue
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|dateProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|DATE
argument_list|,
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|booleanProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
name|value
condition|?
name|BooleanValue
operator|.
name|TRUE
else|:
name|BooleanValue
operator|.
name|FALSE
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|nameProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|NAME
argument_list|,
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|pathProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|PATH
argument_list|,
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|referenceProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|REFERENCE
argument_list|,
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|weakreferenceProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|WEAKREFERENCE
argument_list|,
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|uriProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|URI
argument_list|,
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|decimalProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|BigDecimal
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|DecimalValue
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|binaryProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Blob
name|value
parameter_list|)
block|{
return|return
operator|new
name|SinglePropertyState
argument_list|(
name|name
argument_list|,
operator|new
name|BinaryValue
argument_list|(
name|toBytes
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|stringProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|StringValue
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|binaryPropertyFromBlob
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|Blob
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|Blob
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|BinaryValue
argument_list|(
name|toBytes
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|longProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|Long
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|LongValue
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|doubleProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|Double
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|double
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|DoubleValue
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|dateProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|DATE
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|booleanProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|Boolean
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|boolean
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
name|value
condition|?
name|BooleanValue
operator|.
name|TRUE
else|:
name|BooleanValue
operator|.
name|FALSE
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|nameProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|NAME
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|pathProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|PATH
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|referenceProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|REFERENCE
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|weakreferenceProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|WEAKREFERENCE
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|uriProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|GenericValue
argument_list|(
name|PropertyType
operator|.
name|URI
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|decimalProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|BigDecimal
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|BigDecimal
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|DecimalValue
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PropertyState
name|binaryPropertyFromArray
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|byte
index|[]
argument_list|>
name|values
parameter_list|)
block|{
name|List
argument_list|<
name|CoreValue
argument_list|>
name|cvs
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|byte
index|[]
name|value
range|:
name|values
control|)
block|{
name|cvs
operator|.
name|add
argument_list|(
operator|new
name|BinaryValue
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MultiPropertyState
argument_list|(
name|name
argument_list|,
name|cvs
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|byte
index|[]
name|toBytes
parameter_list|(
name|Blob
name|blob
parameter_list|)
block|{
try|try
block|{
name|InputStream
name|is
init|=
name|blob
operator|.
name|getNewStream
argument_list|()
decl_stmt|;
try|try
block|{
name|ByteArrayOutputStream
name|buffer
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
literal|4096
index|]
decl_stmt|;
name|int
name|n
init|=
name|is
operator|.
name|read
argument_list|(
name|b
argument_list|)
decl_stmt|;
while|while
condition|(
name|n
operator|!=
operator|-
literal|1
condition|)
block|{
name|buffer
operator|.
name|write
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
name|n
argument_list|)
expr_stmt|;
name|n
operator|=
name|is
operator|.
name|read
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
return|return
name|buffer
operator|.
name|toByteArray
argument_list|()
return|;
block|}
finally|finally
block|{
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

