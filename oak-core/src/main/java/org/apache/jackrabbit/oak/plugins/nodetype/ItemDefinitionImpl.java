begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|nodetype
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|ItemDefinition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|NodeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|OnParentVersionAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|util
operator|.
name|NodeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  *<pre>  * [nt:{propertyDefinition,childNodeDefinition}]  * - jcr:name (NAME) protected   * - jcr:autoCreated (BOOLEAN) protected mandatory  * - jcr:mandatory (BOOLEAN) protected mandatory  * - jcr:onParentVersion (STRING) protected mandatory  *< 'COPY', 'VERSION', 'INITIALIZE', 'COMPUTE', 'IGNORE', 'ABORT'  * - jcr:protected (BOOLEAN) protected mandatory  *   ...  *</pre>  */
end_comment

begin_class
class|class
name|ItemDefinitionImpl
implements|implements
name|ItemDefinition
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ItemDefinitionImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|NodeType
name|type
decl_stmt|;
specifier|protected
specifier|final
name|NodeUtil
name|node
decl_stmt|;
specifier|protected
name|ItemDefinitionImpl
parameter_list|(
name|NodeType
name|type
parameter_list|,
name|NodeUtil
name|node
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|NodeType
name|getDeclaringNodeType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|node
operator|.
name|getName
argument_list|(
literal|"jcr:name"
argument_list|,
literal|"*"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isAutoCreated
parameter_list|()
block|{
return|return
name|node
operator|.
name|getBoolean
argument_list|(
literal|"jcr:autoCreated"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isMandatory
parameter_list|()
block|{
return|return
name|node
operator|.
name|getBoolean
argument_list|(
literal|"jcr:mandatory"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getOnParentVersion
parameter_list|()
block|{
try|try
block|{
return|return
name|OnParentVersionAction
operator|.
name|valueFromName
argument_list|(
name|node
operator|.
name|getString
argument_list|(
literal|"jcr:onParentVersion"
argument_list|,
name|OnParentVersionAction
operator|.
name|ACTIONNAME_COPY
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Unexpected jcr:onParentVersion value"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
name|OnParentVersionAction
operator|.
name|COPY
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isProtected
parameter_list|()
block|{
return|return
name|node
operator|.
name|getBoolean
argument_list|(
literal|"jcr:protected"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

