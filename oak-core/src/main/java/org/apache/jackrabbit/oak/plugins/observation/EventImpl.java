begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|observation
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|observation
operator|.
name|JackrabbitEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|core
operator|.
name|ImmutableTree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|identifier
operator|.
name|IdentifierManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * TODO document  */
end_comment

begin_class
specifier|final
class|class
name|EventImpl
implements|implements
name|JackrabbitEvent
block|{
specifier|private
specifier|final
name|EventContext
name|context
decl_stmt|;
specifier|private
specifier|final
name|int
name|type
decl_stmt|;
specifier|private
specifier|final
name|ImmutableTree
name|tree
decl_stmt|;
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|info
decl_stmt|;
specifier|private
name|EventImpl
parameter_list|(
name|EventContext
name|context
parameter_list|,
name|int
name|type
parameter_list|,
name|ImmutableTree
name|tree
parameter_list|,
name|String
name|name
parameter_list|,
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|info
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|tree
operator|=
name|tree
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|info
operator|=
name|info
expr_stmt|;
block|}
name|EventImpl
parameter_list|(
name|EventContext
name|context
parameter_list|,
name|int
name|type
parameter_list|,
name|ImmutableTree
name|tree
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
argument_list|(
name|context
argument_list|,
name|type
argument_list|,
name|tree
argument_list|,
name|name
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|EventImpl
parameter_list|(
name|EventContext
name|context
parameter_list|,
name|int
name|type
parameter_list|,
name|ImmutableTree
name|tree
parameter_list|,
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|info
parameter_list|)
block|{
name|this
argument_list|(
name|context
argument_list|,
name|type
argument_list|,
name|tree
argument_list|,
literal|null
argument_list|,
name|info
argument_list|)
expr_stmt|;
block|}
name|EventImpl
parameter_list|(
name|EventContext
name|context
parameter_list|,
name|int
name|type
parameter_list|,
name|ImmutableTree
name|tree
parameter_list|)
block|{
name|this
argument_list|(
name|context
argument_list|,
name|type
argument_list|,
name|tree
argument_list|,
literal|null
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPath
parameter_list|()
block|{
name|String
name|path
init|=
name|tree
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|path
operator|=
name|PathUtils
operator|.
name|concat
argument_list|(
name|path
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
return|return
name|context
operator|.
name|getJcrPath
argument_list|(
name|path
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getUserID
parameter_list|()
block|{
return|return
name|context
operator|.
name|getUserID
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getIdentifier
parameter_list|()
block|{
return|return
name|IdentifierManager
operator|.
name|getIdentifier
argument_list|(
name|tree
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|getInfo
parameter_list|()
block|{
return|return
name|info
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getUserData
parameter_list|()
block|{
return|return
name|context
operator|.
name|getUserData
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getDate
parameter_list|()
block|{
return|return
name|context
operator|.
name|getDate
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isExternal
parameter_list|()
block|{
return|return
name|context
operator|.
name|isExternal
argument_list|()
return|;
block|}
comment|//------------------------------------------------------------< Object>--
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|object
condition|)
block|{
return|return
literal|true
return|;
block|}
elseif|else
if|if
condition|(
name|object
operator|instanceof
name|EventImpl
condition|)
block|{
name|EventImpl
name|that
init|=
operator|(
name|EventImpl
operator|)
name|object
decl_stmt|;
return|return
name|this
operator|.
name|type
operator|==
name|that
operator|.
name|type
operator|&&
name|context
operator|.
name|equals
argument_list|(
name|that
operator|.
name|context
argument_list|)
operator|&&
name|Objects
operator|.
name|equal
argument_list|(
name|this
operator|.
name|info
argument_list|,
name|that
operator|.
name|info
argument_list|)
operator|&&
name|getPath
argument_list|()
operator|.
name|equals
argument_list|(
name|that
operator|.
name|getPath
argument_list|()
argument_list|)
operator|&&
name|getIdentifier
argument_list|()
operator|.
name|equals
argument_list|(
name|that
operator|.
name|getIdentifier
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hashCode
argument_list|(
name|context
argument_list|,
name|type
argument_list|,
name|info
argument_list|,
name|getPath
argument_list|()
argument_list|,
name|getIdentifier
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|toStringHelper
argument_list|(
name|this
argument_list|)
operator|.
name|omitNullValues
argument_list|()
operator|.
name|add
argument_list|(
literal|"type"
argument_list|,
name|type
argument_list|)
operator|.
name|add
argument_list|(
literal|"tree"
argument_list|,
name|tree
argument_list|)
operator|.
name|add
argument_list|(
literal|"name"
argument_list|,
name|name
argument_list|)
operator|.
name|add
argument_list|(
literal|"info"
argument_list|,
name|info
argument_list|)
operator|.
name|add
argument_list|(
literal|"context"
argument_list|,
name|context
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

