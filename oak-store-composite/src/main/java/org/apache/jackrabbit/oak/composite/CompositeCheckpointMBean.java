begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|composite
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|jmx
operator|.
name|AbstractCheckpointMBean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|OpenDataException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|TabularDataSupport
import|;
end_import

begin_class
specifier|public
class|class
name|CompositeCheckpointMBean
extends|extends
name|AbstractCheckpointMBean
block|{
specifier|private
specifier|final
name|CompositeNodeStore
name|store
decl_stmt|;
specifier|public
name|CompositeCheckpointMBean
parameter_list|(
name|CompositeNodeStore
name|store
parameter_list|)
block|{
name|this
operator|.
name|store
operator|=
name|store
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|createCheckpoint
parameter_list|(
name|long
name|lifetime
parameter_list|)
block|{
return|return
name|store
operator|.
name|checkpoint
argument_list|(
name|lifetime
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|releaseCheckpoint
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
name|store
operator|.
name|release
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|collectCheckpoints
parameter_list|(
name|TabularDataSupport
name|tab
parameter_list|)
throws|throws
name|OpenDataException
block|{
for|for
control|(
name|String
name|id
range|:
name|store
operator|.
name|checkpoints
argument_list|()
control|)
block|{
name|tab
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|toCompositeData
argument_list|(
name|id
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|store
operator|.
name|checkpointInfo
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|getOldestCheckpointCreationTimestamp
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
block|}
end_class

end_unit

