begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|wikipedia
operator|.
name|WikipediaImport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|JcrCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakRepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|RepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|LuceneIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|LuceneIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneIndexHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneInitializerHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Observer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakFixture
operator|.
name|SegmentFixture
import|;
end_import

begin_class
specifier|public
class|class
name|RepositoryGrowthTest
extends|extends
name|WikipediaImport
block|{
specifier|private
specifier|final
name|boolean
name|luceneIndexOnFS
decl_stmt|;
specifier|private
specifier|final
name|File
name|basedir
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|RepositoryFixture
argument_list|,
name|File
argument_list|>
name|indexDirs
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
specifier|public
name|RepositoryGrowthTest
parameter_list|(
name|File
name|dump
parameter_list|,
name|File
name|basedir
parameter_list|,
name|boolean
name|luceneIndexOnFS
parameter_list|)
block|{
name|super
argument_list|(
name|dump
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|luceneIndexOnFS
operator|=
name|luceneIndexOnFS
expr_stmt|;
name|this
operator|.
name|basedir
operator|=
name|basedir
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Repository
index|[]
name|setupCluster
parameter_list|(
specifier|final
name|RepositoryFixture
name|fixture
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|fixture
operator|instanceof
name|OakRepositoryFixture
condition|)
block|{
return|return
operator|(
operator|(
name|OakRepositoryFixture
operator|)
name|fixture
operator|)
operator|.
name|setUpCluster
argument_list|(
literal|1
argument_list|,
operator|new
name|JcrCreator
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Jcr
name|customize
parameter_list|(
name|Oak
name|oak
parameter_list|)
block|{
name|LuceneIndexProvider
name|provider
init|=
operator|new
name|LuceneIndexProvider
argument_list|()
decl_stmt|;
name|String
name|path
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|luceneIndexOnFS
condition|)
block|{
name|File
name|indexDir
init|=
operator|new
name|File
argument_list|(
name|basedir
argument_list|,
literal|"lucene-"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|path
operator|=
name|indexDir
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
name|indexDirs
operator|.
name|put
argument_list|(
name|fixture
argument_list|,
name|indexDir
argument_list|)
expr_stmt|;
block|}
name|oak
operator|.
name|with
argument_list|(
operator|(
name|QueryIndexProvider
operator|)
name|provider
argument_list|)
operator|.
name|with
argument_list|(
operator|(
name|Observer
operator|)
name|provider
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|LuceneIndexEditorProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|LuceneInitializerHelper
argument_list|(
literal|"luceneGlobal"
argument_list|,
name|LuceneIndexHelper
operator|.
name|JR_PROPERTY_INCLUDES
argument_list|,
literal|null
argument_list|,
name|path
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|Jcr
argument_list|(
name|oak
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
return|return
name|super
operator|.
name|setupCluster
argument_list|(
name|fixture
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|(
name|RepositoryFixture
name|fixture
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|fixture
operator|instanceof
name|OakRepositoryFixture
condition|)
block|{
name|OakFixture
name|oakFixture
init|=
operator|(
operator|(
name|OakRepositoryFixture
operator|)
name|fixture
operator|)
operator|.
name|getOakFixture
argument_list|()
decl_stmt|;
if|if
condition|(
name|oakFixture
operator|instanceof
name|SegmentFixture
condition|)
block|{
name|SegmentFixture
name|sf
init|=
operator|(
name|SegmentFixture
operator|)
name|oakFixture
decl_stmt|;
name|long
name|size
init|=
name|sf
operator|.
name|getStores
argument_list|()
index|[
literal|0
index|]
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|sf
operator|.
name|getBlobStoreFixtures
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|size
operator|=
name|sf
operator|.
name|getBlobStoreFixtures
argument_list|()
index|[
literal|0
index|]
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|File
name|indexDir
init|=
name|indexDirs
operator|.
name|get
argument_list|(
name|fixture
argument_list|)
decl_stmt|;
if|if
condition|(
name|indexDir
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|FileUtils
operator|.
name|sizeOfDirectory
argument_list|(
name|indexDir
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|printf
argument_list|(
literal|"Repository size %s %s %n"
argument_list|,
name|fixture
argument_list|,
name|IOUtils
operator|.
name|humanReadableByteCount
argument_list|(
name|size
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|super
operator|.
name|tearDown
argument_list|(
name|fixture
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|batchDone
parameter_list|(
name|Session
name|session
parameter_list|,
name|long
name|start
parameter_list|,
name|int
name|count
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|super
operator|.
name|batchDone
argument_list|(
name|session
argument_list|,
name|start
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

