begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Modified
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|PropertyOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|PropertyUnbounded
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|ReferenceCardinality
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|ReferencePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|References
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PropertiesUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|osgi
operator|.
name|OsgiWhiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|composite
operator|.
name|CompositeAuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|CompositeConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|AuthenticationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|CompositeTokenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|TokenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|accesscontrol
operator|.
name|AccessControlConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|restriction
operator|.
name|RestrictionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|CompositePrincipalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|AuthorizableNodeName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserAuthenticationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AuthorizableActionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|whiteboard
operator|.
name|WhiteboardAuthorizableActionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|whiteboard
operator|.
name|WhiteboardAuthorizableNodeName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|restriction
operator|.
name|WhiteboardRestrictionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|whiteboard
operator|.
name|WhiteboardUserAuthenticationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newCopyOnWriteArrayList
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|,
name|label
operator|=
literal|"Apache Jackrabbit Oak SecurityProvider"
argument_list|,
name|description
operator|=
literal|"The default SecurityProvider embedded in Apache Jackrabbit Oak"
argument_list|)
annotation|@
name|Properties
argument_list|(
block|{
annotation|@
name|Property
argument_list|(
name|name
operator|=
literal|"requiredServicePids"
argument_list|,
name|label
operator|=
literal|"Required Service PIDs"
argument_list|,
name|description
operator|=
literal|"The SecurityProvider will not register itself "
operator|+
literal|"unless the services identified by these PIDs are "
operator|+
literal|"registered first. Only the PIDs of implementations of "
operator|+
literal|"the following interfaces are checked: "
operator|+
literal|"AuthorizationConfiguration, PrincipalConfiguration, "
operator|+
literal|"TokenConfiguration, AuthorizableActionProvider, "
operator|+
literal|"RestrictionProvider and UserAuthenticationFactory."
argument_list|,
name|value
operator|=
block|{
literal|"org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl"
block|,
literal|"org.apache.jackrabbit.oak.security.principal.PrincipalConfigurationImpl"
block|,
literal|"org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl"
block|,
literal|"org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider"
block|,
literal|"org.apache.jackrabbit.oak.security.authorization.restriction.RestrictionProviderImpl"
block|,
literal|"org.apache.jackrabbit.oak.security.user.UserAuthenticationFactoryImpl"
block|}
argument_list|,
name|unbounded
operator|=
name|PropertyUnbounded
operator|.
name|ARRAY
argument_list|)
block|,
annotation|@
name|Property
argument_list|(
name|name
operator|=
literal|"authorizationCompositionType"
argument_list|,
name|label
operator|=
literal|"Authorization Composition Type"
argument_list|,
name|description
operator|=
literal|"The Composite Authorization model uses this flag to determine what type of logic "
operator|+
literal|"to apply to the existing providers (default value is AND)."
argument_list|,
name|value
operator|=
literal|"AND"
argument_list|,
name|options
operator|=
block|{
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"AND"
argument_list|,
name|value
operator|=
literal|"AND"
argument_list|)
block|,
annotation|@
name|PropertyOption
argument_list|(
name|name
operator|=
literal|"OR"
argument_list|,
name|value
operator|=
literal|"OR"
argument_list|)
block|}
argument_list|)
block|}
argument_list|)
annotation|@
name|References
argument_list|(
block|{
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"authorizationConfiguration"
argument_list|,
name|referenceInterface
operator|=
name|AuthorizationConfiguration
operator|.
name|class
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|)
block|,
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"principalConfiguration"
argument_list|,
name|referenceInterface
operator|=
name|PrincipalConfiguration
operator|.
name|class
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|)
block|,
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"tokenConfiguration"
argument_list|,
name|referenceInterface
operator|=
name|TokenConfiguration
operator|.
name|class
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|)
block|,
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"authorizableNodeName"
argument_list|,
name|referenceInterface
operator|=
name|AuthorizableNodeName
operator|.
name|class
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|)
block|,
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"authorizableActionProvider"
argument_list|,
name|referenceInterface
operator|=
name|AuthorizableActionProvider
operator|.
name|class
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|)
block|,
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"restrictionProvider"
argument_list|,
name|referenceInterface
operator|=
name|RestrictionProvider
operator|.
name|class
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|)
block|,
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"userAuthenticationFactory"
argument_list|,
name|referenceInterface
operator|=
name|UserAuthenticationFactory
operator|.
name|class
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|)
block|}
argument_list|)
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
class|class
name|SecurityProviderRegistration
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SecurityProviderRegistration
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|AuthenticationConfiguration
name|authenticationConfiguration
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|PrivilegeConfiguration
name|privilegeConfiguration
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|UserConfiguration
name|userConfiguration
decl_stmt|;
specifier|private
name|BundleContext
name|context
decl_stmt|;
specifier|private
name|ServiceRegistration
name|registration
decl_stmt|;
specifier|private
name|boolean
name|registering
decl_stmt|;
specifier|private
specifier|final
name|Preconditions
name|preconditions
init|=
operator|new
name|Preconditions
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|CompositeAuthorizationConfiguration
name|authorizationConfiguration
init|=
operator|new
name|CompositeAuthorizationConfiguration
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|CompositePrincipalConfiguration
name|principalConfiguration
init|=
operator|new
name|CompositePrincipalConfiguration
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|CompositeTokenConfiguration
name|tokenConfiguration
init|=
operator|new
name|CompositeTokenConfiguration
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|AuthorizableNodeName
argument_list|>
name|authorizableNodeNames
init|=
name|newCopyOnWriteArrayList
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|AuthorizableActionProvider
argument_list|>
name|authorizableActionProviders
init|=
name|newCopyOnWriteArrayList
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|RestrictionProvider
argument_list|>
name|restrictionProviders
init|=
name|newCopyOnWriteArrayList
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|UserAuthenticationFactory
argument_list|>
name|userAuthenticationFactories
init|=
name|newCopyOnWriteArrayList
argument_list|()
decl_stmt|;
comment|//----------------------------------------------------< SCR integration>---
annotation|@
name|Activate
specifier|public
name|void
name|activate
parameter_list|(
name|BundleContext
name|context
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration
parameter_list|)
block|{
name|String
index|[]
name|requiredServicePids
init|=
name|getRequiredServicePids
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
for|for
control|(
name|String
name|pid
range|:
name|requiredServicePids
control|)
block|{
name|preconditions
operator|.
name|addPrecondition
argument_list|(
name|pid
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
name|this
operator|.
name|authorizationConfiguration
operator|.
name|withCompositionType
argument_list|(
name|getAuthorizationCompositionType
argument_list|(
name|configuration
argument_list|)
argument_list|)
expr_stmt|;
name|maybeRegister
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Modified
specifier|public
name|void
name|modified
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration
parameter_list|)
block|{
name|String
index|[]
name|requiredServicePids
init|=
name|getRequiredServicePids
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
name|preconditions
operator|.
name|clearPreconditions
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|pid
range|:
name|requiredServicePids
control|)
block|{
name|preconditions
operator|.
name|addPrecondition
argument_list|(
name|pid
argument_list|)
expr_stmt|;
block|}
block|}
name|this
operator|.
name|authorizationConfiguration
operator|.
name|withCompositionType
argument_list|(
name|getAuthorizationCompositionType
argument_list|(
name|configuration
argument_list|)
argument_list|)
expr_stmt|;
name|maybeUnregister
argument_list|()
expr_stmt|;
name|maybeRegister
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Deactivate
specifier|public
name|void
name|deactivate
parameter_list|()
block|{
name|ServiceRegistration
name|registration
decl_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
name|registration
operator|=
name|this
operator|.
name|registration
expr_stmt|;
name|this
operator|.
name|registration
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|registering
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|context
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|preconditions
operator|.
name|clearPreconditions
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|registration
operator|!=
literal|null
condition|)
block|{
name|registration
operator|.
name|unregister
argument_list|()
expr_stmt|;
block|}
block|}
comment|//--------------------------------------< unary security configurations>---
specifier|public
name|void
name|bindAuthenticationConfiguration
parameter_list|(
name|AuthenticationConfiguration
name|authenticationConfiguration
parameter_list|)
block|{
name|this
operator|.
name|authenticationConfiguration
operator|=
name|authenticationConfiguration
expr_stmt|;
block|}
specifier|public
name|void
name|unbindAuthenticationConfiguration
parameter_list|(
name|AuthenticationConfiguration
name|authenticationConfiguration
parameter_list|)
block|{
name|this
operator|.
name|authenticationConfiguration
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|void
name|bindPrivilegeConfiguration
parameter_list|(
name|PrivilegeConfiguration
name|privilegeConfiguration
parameter_list|)
block|{
name|this
operator|.
name|privilegeConfiguration
operator|=
name|privilegeConfiguration
expr_stmt|;
block|}
specifier|public
name|void
name|unbindPrivilegeConfiguration
parameter_list|(
name|PrivilegeConfiguration
name|privilegeConfiguration
parameter_list|)
block|{
name|this
operator|.
name|privilegeConfiguration
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|void
name|bindUserConfiguration
parameter_list|(
name|UserConfiguration
name|userConfiguration
parameter_list|)
block|{
name|this
operator|.
name|userConfiguration
operator|=
name|userConfiguration
expr_stmt|;
block|}
specifier|public
name|void
name|unbindUserConfiguration
parameter_list|(
name|UserConfiguration
name|userConfiguration
parameter_list|)
block|{
name|this
operator|.
name|userConfiguration
operator|=
literal|null
expr_stmt|;
block|}
comment|//-----------------------------------< multiple security configurations>---
specifier|public
name|void
name|bindAuthorizationConfiguration
parameter_list|(
name|AuthorizationConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|bindConfiguration
argument_list|(
name|authorizationConfiguration
argument_list|,
name|configuration
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|unbindAuthorizationConfiguration
parameter_list|(
name|AuthorizationConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|unbindConfiguration
argument_list|(
name|authorizationConfiguration
argument_list|,
name|configuration
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|bindPrincipalConfiguration
parameter_list|(
name|PrincipalConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|bindConfiguration
argument_list|(
name|principalConfiguration
argument_list|,
name|configuration
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|unbindPrincipalConfiguration
parameter_list|(
name|PrincipalConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|unbindConfiguration
argument_list|(
name|principalConfiguration
argument_list|,
name|configuration
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|bindTokenConfiguration
parameter_list|(
name|TokenConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|bindConfiguration
argument_list|(
name|tokenConfiguration
argument_list|,
name|configuration
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|unbindTokenConfiguration
parameter_list|(
name|TokenConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|unbindConfiguration
argument_list|(
name|tokenConfiguration
argument_list|,
name|configuration
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|bindConfiguration
parameter_list|(
annotation|@
name|Nonnull
name|CompositeConfiguration
name|composite
parameter_list|,
annotation|@
name|Nonnull
name|SecurityConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|composite
operator|.
name|addConfiguration
argument_list|(
name|configuration
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
name|addCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeRegister
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|unbindConfiguration
parameter_list|(
annotation|@
name|Nonnull
name|CompositeConfiguration
name|composite
parameter_list|,
annotation|@
name|Nonnull
name|SecurityConfiguration
name|configuration
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|composite
operator|.
name|removeConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|removeCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeUnregister
argument_list|()
expr_stmt|;
block|}
comment|//------------------------------------------------------------< add ons>---
specifier|public
name|void
name|bindAuthorizableNodeName
parameter_list|(
name|AuthorizableNodeName
name|authorizableNodeName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|authorizableNodeNames
operator|.
name|add
argument_list|(
name|authorizableNodeName
argument_list|)
expr_stmt|;
name|addCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeRegister
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|unbindAuthorizableNodeName
parameter_list|(
name|AuthorizableNodeName
name|authorizableNodeName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|authorizableNodeNames
operator|.
name|remove
argument_list|(
name|authorizableNodeName
argument_list|)
expr_stmt|;
name|removeCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeUnregister
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|bindAuthorizableActionProvider
parameter_list|(
name|AuthorizableActionProvider
name|authorizableActionProvider
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|authorizableActionProviders
operator|.
name|add
argument_list|(
name|authorizableActionProvider
argument_list|)
expr_stmt|;
name|addCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeRegister
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|unbindAuthorizableActionProvider
parameter_list|(
name|AuthorizableActionProvider
name|authorizableActionProvider
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|authorizableActionProviders
operator|.
name|remove
argument_list|(
name|authorizableActionProvider
argument_list|)
expr_stmt|;
name|removeCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeUnregister
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|bindRestrictionProvider
parameter_list|(
name|RestrictionProvider
name|restrictionProvider
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|restrictionProviders
operator|.
name|add
argument_list|(
name|restrictionProvider
argument_list|)
expr_stmt|;
name|addCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeRegister
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|unbindRestrictionProvider
parameter_list|(
name|RestrictionProvider
name|restrictionProvider
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|restrictionProviders
operator|.
name|remove
argument_list|(
name|restrictionProvider
argument_list|)
expr_stmt|;
name|removeCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeUnregister
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|bindUserAuthenticationFactory
parameter_list|(
name|UserAuthenticationFactory
name|userAuthenticationFactory
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|userAuthenticationFactories
operator|.
name|add
argument_list|(
name|userAuthenticationFactory
argument_list|)
expr_stmt|;
name|addCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeRegister
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|unbindUserAuthenticationFactory
parameter_list|(
name|UserAuthenticationFactory
name|userAuthenticationFactory
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|userAuthenticationFactories
operator|.
name|remove
argument_list|(
name|userAuthenticationFactory
argument_list|)
expr_stmt|;
name|removeCandidate
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|maybeUnregister
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeRegister
parameter_list|()
block|{
name|BundleContext
name|context
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Trying to register a SecurityProvider..."
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
comment|// The component is not activated, yet. We have no means of registering
comment|// the SecurityProvider. This method will be called again after
comment|// activation completes.
if|if
condition|(
name|this
operator|.
name|context
operator|==
literal|null
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Aborting: no BundleContext is available"
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// The preconditions are not satisifed. This may happen when this
comment|// component is activated but not enough mandatory services are bound
comment|// to it.
if|if
condition|(
operator|!
name|preconditions
operator|.
name|areSatisfied
argument_list|()
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Aborting: preconditions are not satisfied: {}"
argument_list|,
name|preconditions
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// The SecurityProvider is already registered. This may happen when a
comment|// new dependency is added to this component, but the requirements are
comment|// already satisfied.
if|if
condition|(
name|registration
operator|!=
literal|null
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Aborting: a SecurityProvider is already registered"
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// If the component is in the process of registering an instance of
comment|// SecurityProvider, return. This check is necessary because we don't
comment|// want to call createSecurityProvider() more than once. That method,
comment|// in fact, changes the state of the bound dependencies (it sets a
comment|// back-reference from the security configurations to the new
comment|// SecurityProvider). We want those dependencies to change state only
comment|// when we are sure that we will register the SecurityProvider we
comment|// are creating.
if|if
condition|(
name|registering
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Aborting: a SecurityProvider is already being registered"
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// Mark the start of a registration process.
name|registering
operator|=
literal|true
expr_stmt|;
comment|// Save the BundleContext for local usage.
name|context
operator|=
name|this
operator|.
name|context
expr_stmt|;
block|}
comment|// Register the SecurityProvider.
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|ServiceRegistration
name|registration
init|=
name|context
operator|.
name|registerService
argument_list|(
name|SecurityProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|createSecurityProvider
argument_list|(
name|context
argument_list|)
argument_list|,
name|properties
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
name|this
operator|.
name|registration
operator|=
name|registration
expr_stmt|;
name|this
operator|.
name|registering
operator|=
literal|false
expr_stmt|;
block|}
name|log
operator|.
name|info
argument_list|(
literal|"SecurityProvider instance registered"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|maybeUnregister
parameter_list|()
block|{
name|ServiceRegistration
name|registration
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Trying to unregister the SecurityProvider..."
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
comment|// If there is nothing to register, we obviously have nothing to do.
if|if
condition|(
name|this
operator|.
name|registration
operator|==
literal|null
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Aborting: no SecurityProvider is registered"
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// The preconditions are still satisfied. This may happen when a
comment|// dependency is unbound while not being listed as required service.
if|if
condition|(
name|preconditions
operator|.
name|areSatisfied
argument_list|()
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Aborting: preconditions are satisfied"
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// Save the ServiceRegistration for local use.
name|registration
operator|=
name|this
operator|.
name|registration
expr_stmt|;
name|this
operator|.
name|registration
operator|=
literal|null
expr_stmt|;
block|}
name|registration
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"SecurityProvider instance unregistered"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SecurityProvider
name|createSecurityProvider
parameter_list|(
annotation|@
name|Nonnull
name|BundleContext
name|context
parameter_list|)
block|{
name|InternalSecurityProvider
name|securityProvider
init|=
operator|new
name|InternalSecurityProvider
argument_list|()
decl_stmt|;
comment|// Static, mandatory references
name|securityProvider
operator|.
name|setAuthenticationConfiguration
argument_list|(
name|ConfigurationInitializer
operator|.
name|initializeConfiguration
argument_list|(
name|securityProvider
argument_list|,
name|authenticationConfiguration
argument_list|)
argument_list|)
expr_stmt|;
name|securityProvider
operator|.
name|setPrivilegeConfiguration
argument_list|(
name|ConfigurationInitializer
operator|.
name|initializeConfiguration
argument_list|(
name|securityProvider
argument_list|,
name|privilegeConfiguration
argument_list|)
argument_list|)
expr_stmt|;
name|ConfigurationParameters
name|userParams
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConstants
operator|.
name|PARAM_AUTHORIZABLE_ACTION_PROVIDER
argument_list|,
name|createWhiteboardAuthorizableActionProvider
argument_list|()
argument_list|)
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConstants
operator|.
name|PARAM_AUTHORIZABLE_NODE_NAME
argument_list|,
name|createWhiteboardAuthorizableNodeName
argument_list|()
argument_list|)
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConstants
operator|.
name|PARAM_USER_AUTHENTICATION_FACTORY
argument_list|,
name|createWhiteboardUserAuthenticationFactory
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|securityProvider
operator|.
name|setUserConfiguration
argument_list|(
name|ConfigurationInitializer
operator|.
name|initializeConfiguration
argument_list|(
name|securityProvider
argument_list|,
name|userConfiguration
argument_list|,
name|userParams
argument_list|)
argument_list|)
expr_stmt|;
comment|// Multiple, dynamic references
name|ConfigurationParameters
name|restrictionParams
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|AccessControlConstants
operator|.
name|PARAM_RESTRICTION_PROVIDER
argument_list|,
name|createWhiteboardRestrictionProvider
argument_list|()
argument_list|)
decl_stmt|;
name|ConfigurationInitializer
operator|.
name|initializeConfigurations
argument_list|(
name|securityProvider
argument_list|,
name|authorizationConfiguration
argument_list|,
name|restrictionParams
argument_list|)
expr_stmt|;
name|securityProvider
operator|.
name|setAuthorizationConfiguration
argument_list|(
name|authorizationConfiguration
argument_list|)
expr_stmt|;
name|ConfigurationInitializer
operator|.
name|initializeConfigurations
argument_list|(
name|securityProvider
argument_list|,
name|principalConfiguration
argument_list|,
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|securityProvider
operator|.
name|setPrincipalConfiguration
argument_list|(
name|principalConfiguration
argument_list|)
expr_stmt|;
name|ConfigurationInitializer
operator|.
name|initializeConfigurations
argument_list|(
name|securityProvider
argument_list|,
name|tokenConfiguration
argument_list|,
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|securityProvider
operator|.
name|setTokenConfiguration
argument_list|(
name|tokenConfiguration
argument_list|)
expr_stmt|;
comment|// Whiteboard
name|securityProvider
operator|.
name|setWhiteboard
argument_list|(
operator|new
name|OsgiWhiteboard
argument_list|(
name|context
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|securityProvider
return|;
block|}
specifier|private
name|RestrictionProvider
name|createWhiteboardRestrictionProvider
parameter_list|()
block|{
return|return
operator|new
name|WhiteboardRestrictionProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|RestrictionProvider
argument_list|>
name|getServices
parameter_list|()
block|{
return|return
name|newArrayList
argument_list|(
name|restrictionProviders
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|private
name|AuthorizableActionProvider
name|createWhiteboardAuthorizableActionProvider
parameter_list|()
block|{
return|return
operator|new
name|WhiteboardAuthorizableActionProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|AuthorizableActionProvider
argument_list|>
name|getServices
parameter_list|()
block|{
return|return
name|newArrayList
argument_list|(
name|authorizableActionProviders
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|private
name|AuthorizableNodeName
name|createWhiteboardAuthorizableNodeName
parameter_list|()
block|{
return|return
operator|new
name|WhiteboardAuthorizableNodeName
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|AuthorizableNodeName
argument_list|>
name|getServices
parameter_list|()
block|{
return|return
name|newArrayList
argument_list|(
name|authorizableNodeNames
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|private
name|UserAuthenticationFactory
name|createWhiteboardUserAuthenticationFactory
parameter_list|()
block|{
return|return
operator|new
name|WhiteboardUserAuthenticationFactory
argument_list|(
name|UserConfigurationImpl
operator|.
name|getDefaultAuthenticationFactory
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|UserAuthenticationFactory
argument_list|>
name|getServices
parameter_list|()
block|{
return|return
name|newArrayList
argument_list|(
name|userAuthenticationFactories
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|private
name|void
name|addCandidate
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|String
name|pid
init|=
name|getServicePid
argument_list|(
name|properties
argument_list|)
decl_stmt|;
if|if
condition|(
name|pid
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|preconditions
operator|.
name|addCandidate
argument_list|(
name|pid
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|removeCandidate
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|String
name|pid
init|=
name|getServicePid
argument_list|(
name|properties
argument_list|)
decl_stmt|;
if|if
condition|(
name|pid
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|preconditions
operator|.
name|removeCandidate
argument_list|(
name|pid
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|String
name|getServicePid
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
return|return
name|PropertiesUtil
operator|.
name|toString
argument_list|(
name|properties
operator|.
name|get
argument_list|(
name|Constants
operator|.
name|SERVICE_PID
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|String
index|[]
name|getRequiredServicePids
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration
parameter_list|)
block|{
return|return
name|PropertiesUtil
operator|.
name|toStringArray
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
literal|"requiredServicePids"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
specifier|private
specifier|static
name|String
name|getAuthorizationCompositionType
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
return|return
name|PropertiesUtil
operator|.
name|toString
argument_list|(
name|properties
operator|.
name|get
argument_list|(
literal|"authorizationCompositionType"
argument_list|)
argument_list|,
literal|"AND"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

