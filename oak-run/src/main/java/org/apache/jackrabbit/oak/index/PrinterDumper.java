begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|output
operator|.
name|TeeOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|inventory
operator|.
name|Format
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|inventory
operator|.
name|InventoryPrinter
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_class
class|class
name|PrinterDumper
block|{
specifier|private
specifier|final
name|File
name|outDir
decl_stmt|;
specifier|private
specifier|final
name|String
name|fileName
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|dumpToSysOut
decl_stmt|;
specifier|private
specifier|final
name|Format
name|format
decl_stmt|;
specifier|private
specifier|final
name|InventoryPrinter
name|printer
decl_stmt|;
specifier|private
name|File
name|outFile
decl_stmt|;
specifier|public
name|PrinterDumper
parameter_list|(
name|File
name|outDir
parameter_list|,
name|String
name|fileName
parameter_list|,
name|boolean
name|dumpToSysOut
parameter_list|,
name|Format
name|format
parameter_list|,
name|InventoryPrinter
name|printer
parameter_list|)
block|{
name|this
operator|.
name|outDir
operator|=
name|outDir
expr_stmt|;
name|this
operator|.
name|fileName
operator|=
name|fileName
expr_stmt|;
name|this
operator|.
name|dumpToSysOut
operator|=
name|dumpToSysOut
expr_stmt|;
name|this
operator|.
name|format
operator|=
name|format
expr_stmt|;
name|this
operator|.
name|printer
operator|=
name|printer
expr_stmt|;
block|}
specifier|public
name|void
name|dump
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|OutputStream
name|os
init|=
name|newOutput
argument_list|()
init|)
block|{
name|OutputStream
name|writerStream
init|=
name|dumpToSysOut
condition|?
operator|new
name|TeeOutputStream
argument_list|(
name|os
argument_list|,
name|System
operator|.
name|out
argument_list|)
else|:
name|os
decl_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
name|writerStream
argument_list|)
decl_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|pw
argument_list|,
name|format
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|pw
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|File
name|getOutFile
parameter_list|()
block|{
return|return
name|checkNotNull
argument_list|(
name|outFile
argument_list|)
return|;
block|}
specifier|private
name|OutputStream
name|newOutput
parameter_list|()
throws|throws
name|IOException
block|{
name|outFile
operator|=
operator|new
name|File
argument_list|(
name|outDir
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
return|return
operator|new
name|BufferedOutputStream
argument_list|(
name|FileUtils
operator|.
name|openOutputStream
argument_list|(
name|outFile
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

