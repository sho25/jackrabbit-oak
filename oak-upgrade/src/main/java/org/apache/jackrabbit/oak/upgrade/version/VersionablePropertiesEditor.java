begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
operator|.
name|version
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|nodetype
operator|.
name|TypePredicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|DefaultEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Editor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|ChildNodeEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
operator|.
name|newHashSet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_BASEVERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_FROZENMIXINTYPES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_ISCHECKEDOUT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_PREDECESSORS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_ROOTVERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_SUCCESSORS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_UUID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_VERSIONHISTORY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|MIX_VERSIONABLE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|NT_FROZENNODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|NT_VERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
operator|.
name|NAMES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
operator|.
name|REFERENCE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
operator|.
name|REFERENCES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MultiGenericPropertyState
operator|.
name|nameProperty
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
operator|.
name|version
operator|.
name|VersionHistoryUtil
operator|.
name|getVersionHistoryNodeState
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
operator|.
name|version
operator|.
name|VersionHistoryUtil
operator|.
name|getVersionStorage
import|;
end_import

begin_comment
comment|/**  * The VersionablePropertiesEditor adds missing versionable properties.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|VersionablePropertiesEditor
extends|extends
name|DefaultEditor
block|{
specifier|private
specifier|static
specifier|final
name|String
name|MIX_SIMPLE_VERSIONABLE
init|=
literal|"mix:simpleVersionable"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|VersionablePropertiesEditor
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|NodeBuilder
name|rootBuilder
decl_stmt|;
specifier|private
specifier|final
name|NodeBuilder
name|versionStorage
decl_stmt|;
specifier|private
specifier|final
name|NodeBuilder
name|builder
decl_stmt|;
specifier|private
specifier|final
name|TypePredicate
name|isVersionable
decl_stmt|;
specifier|private
specifier|final
name|TypePredicate
name|isNtVersion
decl_stmt|;
specifier|private
specifier|final
name|TypePredicate
name|isFrozenNode
decl_stmt|;
specifier|private
name|VersionablePropertiesEditor
parameter_list|(
name|NodeBuilder
name|rootBuilder
parameter_list|)
block|{
name|this
operator|.
name|builder
operator|=
name|rootBuilder
expr_stmt|;
name|this
operator|.
name|rootBuilder
operator|=
name|rootBuilder
expr_stmt|;
name|this
operator|.
name|versionStorage
operator|=
name|getVersionStorage
argument_list|(
name|rootBuilder
argument_list|)
expr_stmt|;
name|this
operator|.
name|isVersionable
operator|=
operator|new
name|TypePredicate
argument_list|(
name|rootBuilder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|MIX_VERSIONABLE
argument_list|)
expr_stmt|;
name|this
operator|.
name|isNtVersion
operator|=
operator|new
name|TypePredicate
argument_list|(
name|rootBuilder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|NT_VERSION
argument_list|)
expr_stmt|;
name|this
operator|.
name|isFrozenNode
operator|=
operator|new
name|TypePredicate
argument_list|(
name|rootBuilder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|NT_FROZENNODE
argument_list|)
expr_stmt|;
block|}
specifier|private
name|VersionablePropertiesEditor
parameter_list|(
name|VersionablePropertiesEditor
name|parent
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
name|this
operator|.
name|rootBuilder
operator|=
name|parent
operator|.
name|rootBuilder
expr_stmt|;
name|this
operator|.
name|versionStorage
operator|=
name|parent
operator|.
name|versionStorage
expr_stmt|;
name|this
operator|.
name|isVersionable
operator|=
name|parent
operator|.
name|isVersionable
expr_stmt|;
name|this
operator|.
name|isNtVersion
operator|=
name|parent
operator|.
name|isNtVersion
expr_stmt|;
name|this
operator|.
name|isFrozenNode
operator|=
name|parent
operator|.
name|isFrozenNode
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|Provider
implements|implements
name|EditorProvider
block|{
annotation|@
name|Override
specifier|public
name|Editor
name|getRootEditor
parameter_list|(
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|,
name|CommitInfo
name|info
parameter_list|)
throws|throws
name|CommitFailedException
block|{
return|return
operator|new
name|VersionablePropertiesEditor
argument_list|(
name|builder
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"VersionablePropertiesEditor"
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Editor
name|childNodeAdded
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|NodeBuilder
name|nodeBuilder
init|=
name|builder
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|isVersionable
operator|.
name|apply
argument_list|(
name|after
argument_list|)
condition|)
block|{
name|fixProperties
argument_list|(
name|nodeBuilder
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|isFrozenNode
operator|.
name|apply
argument_list|(
name|after
argument_list|)
condition|)
block|{
name|updateFrozenMixins
argument_list|(
name|nodeBuilder
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|VersionablePropertiesEditor
argument_list|(
name|this
argument_list|,
name|nodeBuilder
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Editor
name|childNodeChanged
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
return|return
name|childNodeAdded
argument_list|(
name|name
argument_list|,
name|after
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|boolean
name|updateFrozenMixins
parameter_list|(
name|NodeBuilder
name|builder
parameter_list|)
block|{
if|if
condition|(
name|builder
operator|.
name|hasProperty
argument_list|(
name|JCR_FROZENMIXINTYPES
argument_list|)
condition|)
block|{
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|mixins
init|=
name|newHashSet
argument_list|(
name|builder
operator|.
name|getProperty
argument_list|(
name|JCR_FROZENMIXINTYPES
argument_list|)
operator|.
name|getValue
argument_list|(
name|NAMES
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|mixins
operator|.
name|remove
argument_list|(
name|MIX_SIMPLE_VERSIONABLE
argument_list|)
condition|)
block|{
name|mixins
operator|.
name|add
argument_list|(
name|MIX_VERSIONABLE
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setProperty
argument_list|(
name|nameProperty
argument_list|(
name|JCR_FROZENMIXINTYPES
argument_list|,
name|mixins
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|void
name|fixProperties
parameter_list|(
name|NodeBuilder
name|node
parameter_list|)
block|{
name|NodeState
name|versionHistory
init|=
name|getVersionHistoryNodeState
argument_list|(
name|versionStorage
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|node
operator|.
name|getString
argument_list|(
name|JCR_UUID
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|versionHistory
operator|.
name|exists
argument_list|()
condition|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"No version history for {}"
argument_list|,
name|node
argument_list|)
expr_stmt|;
return|return;
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|updated
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|node
operator|.
name|hasProperty
argument_list|(
name|JCR_VERSIONHISTORY
argument_list|)
condition|)
block|{
name|node
operator|.
name|setProperty
argument_list|(
name|JCR_VERSIONHISTORY
argument_list|,
name|versionHistory
operator|.
name|getString
argument_list|(
name|JCR_UUID
argument_list|)
argument_list|,
name|REFERENCE
argument_list|)
expr_stmt|;
name|updated
operator|.
name|add
argument_list|(
name|JCR_VERSIONHISTORY
argument_list|)
expr_stmt|;
block|}
name|String
name|baseVersion
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|node
operator|.
name|hasProperty
argument_list|(
name|JCR_BASEVERSION
argument_list|)
condition|)
block|{
name|baseVersion
operator|=
name|getLastVersion
argument_list|(
name|versionHistory
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
name|JCR_BASEVERSION
argument_list|,
name|baseVersion
argument_list|,
name|REFERENCE
argument_list|)
expr_stmt|;
name|updated
operator|.
name|add
argument_list|(
name|JCR_BASEVERSION
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|node
operator|.
name|hasProperty
argument_list|(
name|JCR_PREDECESSORS
argument_list|)
condition|)
block|{
name|baseVersion
operator|=
name|baseVersion
operator|==
literal|null
condition|?
name|getLastVersion
argument_list|(
name|versionHistory
argument_list|)
else|:
name|baseVersion
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|predecessors
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|node
operator|.
name|getBoolean
argument_list|(
name|JCR_ISCHECKEDOUT
argument_list|)
condition|)
block|{
name|predecessors
operator|.
name|add
argument_list|(
name|baseVersion
argument_list|)
expr_stmt|;
block|}
name|node
operator|.
name|setProperty
argument_list|(
name|JCR_PREDECESSORS
argument_list|,
name|predecessors
argument_list|,
name|REFERENCES
argument_list|)
expr_stmt|;
name|updated
operator|.
name|add
argument_list|(
name|JCR_PREDECESSORS
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|updated
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Updated versionable properties {} for {}"
argument_list|,
name|updated
argument_list|,
name|node
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getLastVersion
parameter_list|(
name|NodeState
name|versionHistory
parameter_list|)
block|{
name|NodeState
name|lastVersion
init|=
name|versionHistory
operator|.
name|getChildNode
argument_list|(
name|JCR_ROOTVERSION
argument_list|)
decl_stmt|;
for|for
control|(
name|ChildNodeEntry
name|child
range|:
name|versionHistory
operator|.
name|getChildNodeEntries
argument_list|()
control|)
block|{
name|NodeState
name|v
init|=
name|child
operator|.
name|getNodeState
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|isNtVersion
operator|.
name|apply
argument_list|(
name|v
argument_list|)
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
name|v
operator|.
name|getProperty
argument_list|(
name|JCR_SUCCESSORS
argument_list|)
operator|.
name|count
argument_list|()
operator|==
literal|0
condition|)
block|{
comment|// no successors
name|lastVersion
operator|=
name|v
expr_stmt|;
block|}
block|}
return|return
name|lastVersion
operator|.
name|getString
argument_list|(
name|JCR_UUID
argument_list|)
return|;
block|}
block|}
end_class

end_unit

