begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|property
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Stopwatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|ChildNodeEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStateUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|RecursiveDelete
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|NodeStore
name|nodeStore
decl_stmt|;
specifier|private
specifier|final
name|CommitHook
name|commitHook
decl_stmt|;
specifier|private
specifier|final
name|Supplier
argument_list|<
name|CommitInfo
argument_list|>
name|commitInfo
decl_stmt|;
specifier|private
specifier|final
name|String
name|path
decl_stmt|;
specifier|private
name|int
name|batchSize
init|=
literal|1024
decl_stmt|;
specifier|private
name|int
name|numRemoved
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|mergeCount
decl_stmt|;
specifier|private
name|NodeBuilder
name|builder
decl_stmt|;
specifier|public
name|RecursiveDelete
parameter_list|(
name|NodeStore
name|nodeStore
parameter_list|,
name|CommitHook
name|commitHook
parameter_list|,
name|Supplier
argument_list|<
name|CommitInfo
argument_list|>
name|commitInfo
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|nodeStore
operator|=
name|nodeStore
expr_stmt|;
name|this
operator|.
name|commitHook
operator|=
name|commitHook
expr_stmt|;
name|this
operator|.
name|commitInfo
operator|=
name|commitInfo
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
specifier|public
name|void
name|run
parameter_list|()
throws|throws
name|CommitFailedException
block|{
name|NodeState
name|root
init|=
name|nodeStore
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|builder
operator|=
name|root
operator|.
name|builder
argument_list|()
expr_stmt|;
name|NodeState
name|node
init|=
name|NodeStateUtils
operator|.
name|getNode
argument_list|(
name|root
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|Stopwatch
name|w
init|=
name|Stopwatch
operator|.
name|createStarted
argument_list|()
decl_stmt|;
name|int
name|currentSize
init|=
name|delete
argument_list|(
name|node
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|save
argument_list|(
name|path
argument_list|,
name|currentSize
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Removed subtree under [{}] with {} child nodes "
operator|+
literal|"in {} ({} saves)"
argument_list|,
name|path
argument_list|,
name|numRemoved
argument_list|,
name|w
argument_list|,
name|mergeCount
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getNumRemoved
parameter_list|()
block|{
return|return
name|numRemoved
return|;
block|}
specifier|public
name|int
name|getMergeCount
parameter_list|()
block|{
return|return
name|mergeCount
return|;
block|}
specifier|public
name|void
name|setBatchSize
parameter_list|(
name|int
name|batchSize
parameter_list|)
block|{
name|this
operator|.
name|batchSize
operator|=
name|batchSize
expr_stmt|;
block|}
specifier|private
name|int
name|delete
parameter_list|(
name|NodeState
name|node
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|int
name|currentSize
init|=
name|deleteChildNodes
argument_list|(
name|node
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|child
argument_list|(
name|builder
argument_list|,
name|path
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|numRemoved
operator|++
expr_stmt|;
return|return
name|currentSize
operator|+
literal|1
return|;
block|}
specifier|private
name|int
name|deleteChildNodes
parameter_list|(
name|NodeState
name|node
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|int
name|currentSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ChildNodeEntry
name|cne
range|:
name|node
operator|.
name|getChildNodeEntries
argument_list|()
control|)
block|{
name|String
name|name
init|=
name|cne
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|childPath
init|=
name|PathUtils
operator|.
name|concat
argument_list|(
name|path
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|currentSize
operator|+=
name|delete
argument_list|(
name|cne
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|childPath
argument_list|)
expr_stmt|;
if|if
condition|(
name|save
argument_list|(
name|childPath
argument_list|,
name|currentSize
argument_list|,
literal|false
argument_list|)
condition|)
block|{
name|currentSize
operator|=
literal|0
expr_stmt|;
block|}
block|}
return|return
name|currentSize
return|;
block|}
specifier|private
name|boolean
name|save
parameter_list|(
name|String
name|path
parameter_list|,
name|int
name|currentSize
parameter_list|,
name|boolean
name|force
parameter_list|)
throws|throws
name|CommitFailedException
block|{
if|if
condition|(
name|currentSize
operator|>=
name|batchSize
operator|||
name|force
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Deleting {} nodes on {} ({} removed so far)"
argument_list|,
name|currentSize
argument_list|,
name|path
argument_list|,
name|numRemoved
argument_list|)
expr_stmt|;
name|nodeStore
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|commitHook
argument_list|,
name|commitInfo
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
name|nodeStore
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
expr_stmt|;
name|mergeCount
operator|++
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|private
specifier|static
name|NodeBuilder
name|child
parameter_list|(
name|NodeBuilder
name|nb
parameter_list|,
name|String
name|path
parameter_list|)
block|{
for|for
control|(
name|String
name|name
range|:
name|PathUtils
operator|.
name|elements
argument_list|(
name|path
argument_list|)
control|)
block|{
name|nb
operator|=
name|nb
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
return|return
name|nb
return|;
block|}
block|}
end_class

end_unit

