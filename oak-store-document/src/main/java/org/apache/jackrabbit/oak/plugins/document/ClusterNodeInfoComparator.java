begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_comment
comment|/**  * Comparator for {@link ClusterNodeInfo} instances based on a given environment  * defined by a {@code machineId} and {@code instanceId}. The comparator orders  * cluster node info with a matching environment before others that do not match  * and then compares the clusterId, lower values first.  */
end_comment

begin_class
class|class
name|ClusterNodeInfoComparator
implements|implements
name|Comparator
argument_list|<
name|ClusterNodeInfo
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|Comparator
argument_list|<
name|Boolean
argument_list|>
name|BOOLEAN_REVERSED
init|=
name|Comparator
operator|.
name|comparing
argument_list|(
name|Boolean
operator|::
name|booleanValue
argument_list|)
operator|.
name|reversed
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|String
name|machineId
decl_stmt|;
specifier|private
specifier|final
name|String
name|instanceId
decl_stmt|;
name|ClusterNodeInfoComparator
parameter_list|(
name|String
name|machineId
parameter_list|,
name|String
name|instanceId
parameter_list|)
block|{
name|this
operator|.
name|machineId
operator|=
name|machineId
expr_stmt|;
name|this
operator|.
name|instanceId
operator|=
name|instanceId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|ClusterNodeInfo
name|info1
parameter_list|,
name|ClusterNodeInfo
name|info2
parameter_list|)
block|{
comment|// first compare whether the environment matches
return|return
name|Comparator
operator|.
name|comparing
argument_list|(
name|this
operator|::
name|matchesEnvironment
argument_list|,
name|BOOLEAN_REVERSED
argument_list|)
comment|// then compare the clusterIds
operator|.
name|thenComparingInt
argument_list|(
name|ClusterNodeInfo
operator|::
name|getId
argument_list|)
operator|.
name|compare
argument_list|(
name|info1
argument_list|,
name|info2
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|matchesEnvironment
parameter_list|(
name|ClusterNodeInfo
name|info
parameter_list|)
block|{
return|return
name|machineId
operator|.
name|equals
argument_list|(
name|info
operator|.
name|getMachineId
argument_list|()
argument_list|)
operator|&&
name|instanceId
operator|.
name|equals
argument_list|(
name|info
operator|.
name|getInstanceId
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

