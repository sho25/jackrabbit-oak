begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|BlobStoreBlob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobOptions
operator|.
name|UploadType
operator|.
name|SYNCHRONOUS
import|;
end_import

begin_interface
specifier|public
interface|interface
name|BlobFactory
block|{
name|Boolean
name|ENABLE_ASYNC_DS
init|=
name|Boolean
operator|.
name|getBoolean
argument_list|(
literal|"oak.lucene.ds.async"
argument_list|)
decl_stmt|;
name|Blob
name|createBlob
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|IOException
function_decl|;
specifier|static
name|BlobFactory
name|getNodeBuilderBlobFactory
parameter_list|(
specifier|final
name|NodeBuilder
name|builder
parameter_list|)
block|{
return|return
name|builder
operator|::
name|createBlob
return|;
block|}
specifier|static
name|BlobFactory
name|getBlobStoreBlobFactory
parameter_list|(
specifier|final
name|BlobStore
name|store
parameter_list|)
block|{
return|return
name|in
lambda|->
block|{
name|String
name|blobId
decl_stmt|;
if|if
condition|(
operator|!
name|ENABLE_ASYNC_DS
condition|)
block|{
name|blobId
operator|=
name|store
operator|.
name|writeBlob
argument_list|(
name|in
argument_list|,
operator|new
name|BlobOptions
argument_list|()
operator|.
name|setUpload
argument_list|(
name|SYNCHRONOUS
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|blobId
operator|=
name|store
operator|.
name|writeBlob
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|BlobStoreBlob
argument_list|(
name|store
argument_list|,
name|blobId
argument_list|)
return|;
block|}
return|;
block|}
block|}
end_interface

end_unit

