begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|BasicDBObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|MongoException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|CounterStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatsOptions
operator|.
name|METRICS_ONLY
import|;
end_import

begin_comment
comment|/**  * Implementation specific metrics exposed by the {@link MongoDocumentStore}.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|MongoDocumentStoreMetrics
implements|implements
name|Runnable
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MongoDocumentStoreMetrics
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
argument_list|>
name|COLLECTIONS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
name|Collection
operator|.
name|JOURNAL
argument_list|,
name|Collection
operator|.
name|CLUSTER_NODES
argument_list|,
name|Collection
operator|.
name|SETTINGS
argument_list|,
name|Collection
operator|.
name|BLOBS
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|DB
name|db
decl_stmt|;
specifier|private
specifier|final
name|StatisticsProvider
name|statsProvider
decl_stmt|;
specifier|public
name|MongoDocumentStoreMetrics
parameter_list|(
name|MongoDocumentStore
name|store
parameter_list|,
name|StatisticsProvider
name|statsProvider
parameter_list|)
block|{
name|this
operator|.
name|db
operator|=
name|store
operator|.
name|getDBCollection
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|)
operator|.
name|getDB
argument_list|()
expr_stmt|;
name|this
operator|.
name|statsProvider
operator|=
name|statsProvider
expr_stmt|;
block|}
comment|//-----------------------< Runnable>---------------------------------------
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|updateCounters
argument_list|()
expr_stmt|;
block|}
comment|//-----------------------< internal>---------------------------------------
specifier|private
name|void
name|updateCounters
parameter_list|()
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Updating counters"
argument_list|)
expr_stmt|;
try|try
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|collectionNames
init|=
name|db
operator|.
name|getCollectionNames
argument_list|()
decl_stmt|;
for|for
control|(
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|c
range|:
name|COLLECTIONS
control|)
block|{
if|if
condition|(
operator|!
name|collectionNames
operator|.
name|contains
argument_list|(
name|c
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Collection {} does not exist"
argument_list|,
name|c
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|CollectionStats
name|stats
init|=
name|getStats
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|updateCounter
argument_list|(
name|getCounter
argument_list|(
name|c
argument_list|,
literal|"count"
argument_list|)
argument_list|,
name|stats
operator|.
name|count
argument_list|)
expr_stmt|;
name|updateCounter
argument_list|(
name|getCounter
argument_list|(
name|c
argument_list|,
literal|"size"
argument_list|)
argument_list|,
name|stats
operator|.
name|size
argument_list|)
expr_stmt|;
name|updateCounter
argument_list|(
name|getCounter
argument_list|(
name|c
argument_list|,
literal|"storageSize"
argument_list|)
argument_list|,
name|stats
operator|.
name|storageSize
argument_list|)
expr_stmt|;
name|updateCounter
argument_list|(
name|getCounter
argument_list|(
name|c
argument_list|,
literal|"totalIndexSize"
argument_list|)
argument_list|,
name|stats
operator|.
name|totalIndexSize
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|MongoException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Updating counters failed: {}"
argument_list|,
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|updateCounter
parameter_list|(
name|CounterStats
name|counter
parameter_list|,
name|long
name|value
parameter_list|)
block|{
name|counter
operator|.
name|inc
argument_list|(
name|value
operator|-
name|counter
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CollectionStats
name|getStats
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|c
parameter_list|)
throws|throws
name|MongoException
block|{
name|CollectionStats
name|stats
init|=
operator|new
name|CollectionStats
argument_list|()
decl_stmt|;
name|BasicDBObject
name|result
init|=
name|db
operator|.
name|getCollection
argument_list|(
name|c
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|getStats
argument_list|()
decl_stmt|;
name|stats
operator|.
name|count
operator|=
name|result
operator|.
name|getLong
argument_list|(
literal|"count"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|stats
operator|.
name|size
operator|=
name|result
operator|.
name|getLong
argument_list|(
literal|"size"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|stats
operator|.
name|storageSize
operator|=
name|result
operator|.
name|getLong
argument_list|(
literal|"storageSize"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|stats
operator|.
name|totalIndexSize
operator|=
name|result
operator|.
name|getLong
argument_list|(
literal|"totalIndexSize"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
specifier|private
name|CounterStats
name|getCounter
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|c
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|String
name|counterName
init|=
literal|"MongoDB."
operator|+
name|c
operator|.
name|toString
argument_list|()
operator|+
literal|"."
operator|+
name|name
decl_stmt|;
return|return
name|statsProvider
operator|.
name|getCounterStats
argument_list|(
name|counterName
argument_list|,
name|METRICS_ONLY
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
class|class
name|CollectionStats
block|{
name|long
name|count
decl_stmt|;
name|long
name|size
decl_stmt|;
name|long
name|storageSize
decl_stmt|;
name|long
name|totalIndexSize
decl_stmt|;
block|}
block|}
end_class

end_unit

