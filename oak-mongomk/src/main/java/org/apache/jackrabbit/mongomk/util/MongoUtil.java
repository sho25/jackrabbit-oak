begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|CommitMongo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|HeadMongo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|NodeMongo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|BasicDBObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DBCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DBObject
import|;
end_import

begin_comment
comment|/**  * Utility classes for preparing the {@code MongoDB} environement.  *  * @author<a href="mailto:pmarx@adobe.com>Philipp Marx</a>  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"javadoc"
argument_list|)
specifier|public
class|class
name|MongoUtil
block|{
specifier|public
specifier|static
specifier|final
name|String
name|INITIAL_COMMIT_MESSAGE
init|=
literal|"This is an autogenerated initial commit"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INITIAL_COMMIT_PATH
init|=
literal|""
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INITIAL_COMMIT_DIFF
init|=
literal|"+/ : {}"
decl_stmt|;
specifier|public
specifier|static
name|void
name|clearCommitCollection
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|DBCollection
name|commitCollection
init|=
name|mongoConnection
operator|.
name|getCommitCollection
argument_list|()
decl_stmt|;
name|commitCollection
operator|.
name|drop
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|clearDatabase
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|clearNodeCollection
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
name|clearCommitCollection
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
name|clearHeadCollection
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|clearHeadCollection
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|DBCollection
name|headCollection
init|=
name|mongoConnection
operator|.
name|getHeadCollection
argument_list|()
decl_stmt|;
name|headCollection
operator|.
name|drop
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|clearNodeCollection
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|DBCollection
name|nodeCollection
init|=
name|mongoConnection
operator|.
name|getNodeCollection
argument_list|()
decl_stmt|;
name|nodeCollection
operator|.
name|drop
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|initCommitCollection
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|DBCollection
name|commitCollection
init|=
name|mongoConnection
operator|.
name|getCommitCollection
argument_list|()
decl_stmt|;
name|DBObject
name|index
init|=
operator|new
name|BasicDBObject
argument_list|()
decl_stmt|;
name|index
operator|.
name|put
argument_list|(
name|CommitMongo
operator|.
name|KEY_REVISION_ID
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|DBObject
name|options
init|=
operator|new
name|BasicDBObject
argument_list|()
decl_stmt|;
name|options
operator|.
name|put
argument_list|(
literal|"unique"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|commitCollection
operator|.
name|ensureIndex
argument_list|(
name|index
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|CommitMongo
name|commit
init|=
operator|new
name|CommitMongo
argument_list|()
decl_stmt|;
name|commit
operator|.
name|setAffectedPaths
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"/"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|commit
operator|.
name|setBaseRevId
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|commit
operator|.
name|setDiff
argument_list|(
name|INITIAL_COMMIT_DIFF
argument_list|)
expr_stmt|;
name|commit
operator|.
name|setMessage
argument_list|(
name|INITIAL_COMMIT_MESSAGE
argument_list|)
expr_stmt|;
name|commit
operator|.
name|setPath
argument_list|(
name|INITIAL_COMMIT_PATH
argument_list|)
expr_stmt|;
name|commit
operator|.
name|setRevisionId
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|commitCollection
operator|.
name|insert
argument_list|(
name|commit
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|initDatabase
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|clearDatabase
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
name|initNodeCollection
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
name|initCommitCollection
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
name|initHeadCollection
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|initHeadCollection
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|DBCollection
name|headCollection
init|=
name|mongoConnection
operator|.
name|getHeadCollection
argument_list|()
decl_stmt|;
name|HeadMongo
name|headMongo
init|=
operator|new
name|HeadMongo
argument_list|()
decl_stmt|;
name|headMongo
operator|.
name|setHeadRevisionId
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|headMongo
operator|.
name|setNextRevisionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|headCollection
operator|.
name|insert
argument_list|(
name|headMongo
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|initNodeCollection
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|)
block|{
name|DBCollection
name|nodeCollection
init|=
name|mongoConnection
operator|.
name|getNodeCollection
argument_list|()
decl_stmt|;
name|DBObject
name|index
init|=
operator|new
name|BasicDBObject
argument_list|()
decl_stmt|;
name|index
operator|.
name|put
argument_list|(
name|NodeMongo
operator|.
name|KEY_PATH
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|index
operator|.
name|put
argument_list|(
name|NodeMongo
operator|.
name|KEY_REVISION_ID
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|DBObject
name|options
init|=
operator|new
name|BasicDBObject
argument_list|()
decl_stmt|;
name|options
operator|.
name|put
argument_list|(
literal|"unique"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|nodeCollection
operator|.
name|ensureIndex
argument_list|(
name|index
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|NodeMongo
name|root
init|=
operator|new
name|NodeMongo
argument_list|()
decl_stmt|;
name|root
operator|.
name|setRevisionId
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|root
operator|.
name|setPath
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|nodeCollection
operator|.
name|insert
argument_list|(
name|root
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|String
name|fromMongoRepresentation
parameter_list|(
name|Long
name|revisionId
parameter_list|)
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|revisionId
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Long
name|toMongoRepresentation
parameter_list|(
name|String
name|revisionId
parameter_list|)
block|{
return|return
name|revisionId
operator|!=
literal|null
condition|?
name|Long
operator|.
name|parseLong
argument_list|(
name|revisionId
argument_list|)
else|:
literal|null
return|;
block|}
block|}
end_class

end_unit

