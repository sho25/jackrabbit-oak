begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|tasks
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|util
operator|.
name|Committer
import|;
end_import

begin_class
specifier|public
class|class
name|GenericWriteTask
implements|implements
name|Runnable
block|{
name|MicroKernel
name|mk
decl_stmt|;
name|Committer
name|committer
decl_stmt|;
name|String
name|diff
decl_stmt|;
name|int
name|nodesPerCommit
decl_stmt|;
specifier|public
name|GenericWriteTask
parameter_list|(
name|MicroKernel
name|mk
parameter_list|,
name|String
name|diff
parameter_list|,
name|int
name|nodesPerCommit
parameter_list|)
block|{
name|this
operator|.
name|mk
operator|=
name|mk
expr_stmt|;
name|this
operator|.
name|diff
operator|=
name|diff
expr_stmt|;
name|this
operator|.
name|nodesPerCommit
operator|=
name|nodesPerCommit
expr_stmt|;
name|committer
operator|=
operator|new
name|Committer
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|committer
operator|.
name|addNodes
argument_list|(
name|mk
argument_list|,
name|diff
argument_list|,
name|nodesPerCommit
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

