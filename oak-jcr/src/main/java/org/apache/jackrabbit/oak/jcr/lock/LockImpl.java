begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|lock
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|lock
operator|.
name|Lock
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|LockImpl
implements|implements
name|Lock
block|{
specifier|private
specifier|final
name|Node
name|node
decl_stmt|;
specifier|private
specifier|final
name|String
name|userID
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|isDeep
decl_stmt|;
specifier|public
name|LockImpl
parameter_list|(
name|Node
name|node
parameter_list|,
name|String
name|userID
parameter_list|,
name|boolean
name|isDeep
parameter_list|)
block|{
name|this
operator|.
name|node
operator|=
name|checkNotNull
argument_list|(
name|node
argument_list|)
expr_stmt|;
name|this
operator|.
name|userID
operator|=
name|userID
expr_stmt|;
name|this
operator|.
name|isDeep
operator|=
name|isDeep
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Node
name|getNode
parameter_list|()
block|{
return|return
name|node
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLockOwner
parameter_list|()
block|{
return|return
name|userID
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDeep
parameter_list|()
block|{
return|return
name|isDeep
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLockToken
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getSecondsRemaining
parameter_list|()
block|{
return|return
name|Long
operator|.
name|MAX_VALUE
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isLive
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSessionScoped
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isLockOwningSession
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|refresh
parameter_list|()
block|{     }
block|}
end_class

end_unit

