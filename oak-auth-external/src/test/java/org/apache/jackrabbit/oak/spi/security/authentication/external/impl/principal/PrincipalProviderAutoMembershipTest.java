begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|principal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|basic
operator|.
name|DefaultSyncConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Extension of the {@link ExternalGroupPrincipalProviderTest} with 'automembership'  * configured in the {@link DefaultSyncConfig}.  */
end_comment

begin_class
specifier|public
class|class
name|PrincipalProviderAutoMembershipTest
extends|extends
name|ExternalGroupPrincipalProviderTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|USER_AUTO_MEMBERSHIP_GROUP_ID
init|=
literal|"testGroup-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|USER_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
init|=
literal|"p-"
operator|+
name|USER_AUTO_MEMBERSHIP_GROUP_ID
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_AUTO_MEMBERSHIP_GROUP_ID
init|=
literal|"testGroup2-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
init|=
literal|"p-"
operator|+
name|GROUP_AUTO_MEMBERSHIP_GROUP_ID
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NON_EXISTING_GROUP_ID
init|=
literal|"nonExistingGroup"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NON_EXISTING_GROUP_ID2
init|=
literal|"nonExistingGroup2"
decl_stmt|;
specifier|private
name|Group
name|userAutoMembershipGroup
decl_stmt|;
specifier|private
name|Group
name|groupAutoMembershipGroup
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|userAutoMembershipGroup
operator|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createGroup
argument_list|(
name|USER_AUTO_MEMBERSHIP_GROUP_ID
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|USER_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|groupAutoMembershipGroup
operator|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createGroup
argument_list|(
name|GROUP_AUTO_MEMBERSHIP_GROUP_ID
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|GROUP_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|DefaultSyncConfig
name|createSyncConfig
parameter_list|()
block|{
name|DefaultSyncConfig
name|syncConfig
init|=
name|super
operator|.
name|createSyncConfig
argument_list|()
decl_stmt|;
name|syncConfig
operator|.
name|user
argument_list|()
operator|.
name|setAutoMembership
argument_list|(
name|USER_AUTO_MEMBERSHIP_GROUP_ID
argument_list|,
name|NON_EXISTING_GROUP_ID
argument_list|)
expr_stmt|;
name|syncConfig
operator|.
name|group
argument_list|()
operator|.
name|setAutoMembership
argument_list|(
name|GROUP_AUTO_MEMBERSHIP_GROUP_ID
argument_list|,
name|NON_EXISTING_GROUP_ID2
argument_list|)
expr_stmt|;
return|return
name|syncConfig
return|;
block|}
annotation|@
name|Override
name|Set
argument_list|<
name|Principal
argument_list|>
name|getExpectedGroupPrincipals
parameter_list|(
annotation|@
name|Nonnull
name|String
name|userId
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|ImmutableSet
operator|.
expr|<
name|Principal
operator|>
name|builder
argument_list|()
operator|.
name|addAll
argument_list|(
name|super
operator|.
name|getExpectedGroupPrincipals
argument_list|(
name|userId
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|userAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
name|groupAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
annotation|@
name|Test
specifier|public
name|void
name|testFindPrincipalsByTypeAll
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|res
init|=
name|ImmutableSet
operator|.
name|copyOf
argument_list|(
name|principalProvider
operator|.
name|findPrincipals
argument_list|(
name|PrincipalManager
operator|.
name|SEARCH_TYPE_ALL
argument_list|)
argument_list|)
decl_stmt|;
comment|// not automembership principals expected here
name|assertEquals
argument_list|(
name|super
operator|.
name|getExpectedGroupPrincipals
argument_list|(
name|USER_ID
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAutoMembershipPrincipal
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNull
argument_list|(
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|userAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|groupAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|USER_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|USER_AUTO_MEMBERSHIP_GROUP_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|GROUP_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|GROUP_AUTO_MEMBERSHIP_GROUP_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|principalProvider
operator|.
name|getPrincipal
argument_list|(
name|NON_EXISTING_GROUP_ID
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetGroupPrincipals
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|Principal
argument_list|>
name|expected
init|=
name|getExpectedGroupPrincipals
argument_list|(
name|USER_ID
argument_list|)
decl_stmt|;
name|Authorizable
name|user
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|USER_ID
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Principal
argument_list|>
name|result
init|=
name|principalProvider
operator|.
name|getMembershipPrincipals
argument_list|(
name|user
operator|.
name|getPrincipal
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|contains
argument_list|(
name|userAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|contains
argument_list|(
name|groupAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPrincipals
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|Principal
argument_list|>
name|expected
init|=
name|getExpectedGroupPrincipals
argument_list|(
name|USER_ID
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|result
init|=
name|principalProvider
operator|.
name|getPrincipals
argument_list|(
name|USER_ID
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|contains
argument_list|(
name|userAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|contains
argument_list|(
name|groupAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindPrincipalsByHint
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|hints
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|USER_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
argument_list|,
name|GROUP_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
argument_list|,
name|USER_AUTO_MEMBERSHIP_GROUP_ID
argument_list|,
name|GROUP_AUTO_MEMBERSHIP_GROUP_ID
argument_list|,
name|USER_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
literal|6
argument_list|)
argument_list|,
name|GROUP_AUTO_MEMBERSHIP_GROUP_PRINCIPAL_NAME
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
literal|6
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|hint
range|:
name|hints
control|)
block|{
name|Iterator
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|res
init|=
name|principalProvider
operator|.
name|findPrincipals
argument_list|(
name|hint
argument_list|,
name|PrincipalManager
operator|.
name|SEARCH_TYPE_GROUP
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|Iterators
operator|.
name|contains
argument_list|(
name|res
argument_list|,
name|userAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Iterators
operator|.
name|contains
argument_list|(
name|res
argument_list|,
name|groupAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Iterators
operator|.
name|contains
argument_list|(
name|res
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|NON_EXISTING_GROUP_ID
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindPrincipalsByTypeGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Iterator
argument_list|<
name|?
extends|extends
name|Principal
argument_list|>
name|res
init|=
name|principalProvider
operator|.
name|findPrincipals
argument_list|(
name|PrincipalManager
operator|.
name|SEARCH_TYPE_GROUP
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|Iterators
operator|.
name|contains
argument_list|(
name|res
argument_list|,
name|userAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Iterators
operator|.
name|contains
argument_list|(
name|res
argument_list|,
name|groupAutoMembershipGroup
operator|.
name|getPrincipal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Iterators
operator|.
name|contains
argument_list|(
name|res
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|NON_EXISTING_GROUP_ID
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

