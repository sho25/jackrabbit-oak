begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_class
class|class
name|MetatypeInformation
block|{
specifier|static
name|MetatypeInformation
name|open
parameter_list|(
name|InputStream
name|stream
parameter_list|)
throws|throws
name|Exception
block|{
name|DocumentBuilderFactory
name|factory
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|DocumentBuilder
name|builder
init|=
name|factory
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|document
init|=
name|builder
operator|.
name|parse
argument_list|(
name|stream
argument_list|)
decl_stmt|;
return|return
operator|new
name|MetatypeInformation
argument_list|(
name|document
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|boolean
name|hasAttribute
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|element
operator|.
name|hasAttribute
argument_list|(
name|name
argument_list|)
operator|&&
name|element
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|)
operator|.
name|equals
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|Element
name|root
decl_stmt|;
specifier|private
name|MetatypeInformation
parameter_list|(
name|Element
name|root
parameter_list|)
block|{
name|this
operator|.
name|root
operator|=
name|root
expr_stmt|;
block|}
name|ObjectClassDefinition
name|getObjectClassDefinition
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
operator|new
name|ObjectClassDefinition
argument_list|(
name|id
argument_list|)
return|;
block|}
class|class
name|ObjectClassDefinition
block|{
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
specifier|private
name|ObjectClassDefinition
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
name|HasAttributeDefinition
name|hasAttributeDefinition
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
operator|new
name|HasAttributeDefinition
argument_list|(
name|this
operator|.
name|id
argument_list|,
name|id
argument_list|)
return|;
block|}
block|}
class|class
name|HasAttributeDefinition
block|{
specifier|private
specifier|final
name|String
name|ocd
decl_stmt|;
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
specifier|private
name|String
name|type
decl_stmt|;
specifier|private
name|String
name|defaultValue
decl_stmt|;
specifier|private
name|String
name|cardinality
decl_stmt|;
specifier|private
name|String
index|[]
name|options
decl_stmt|;
specifier|private
name|HasAttributeDefinition
parameter_list|(
name|String
name|ocd
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|ocd
operator|=
name|ocd
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
name|HasAttributeDefinition
name|withStringType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"String"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withLongType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Long"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withDoubleType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Double"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withFloatType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Float"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withIntegerType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Integer"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withByteType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Byte"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withCharType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Char"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withBooleanType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Boolean"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withShortType
parameter_list|()
block|{
name|this
operator|.
name|type
operator|=
literal|"Short"
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withDefaultValue
parameter_list|(
name|String
name|defaultValue
parameter_list|)
block|{
name|this
operator|.
name|defaultValue
operator|=
name|defaultValue
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withCardinality
parameter_list|(
name|String
name|cardinality
parameter_list|)
block|{
name|this
operator|.
name|cardinality
operator|=
name|cardinality
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasAttributeDefinition
name|withOptions
parameter_list|(
name|String
modifier|...
name|options
parameter_list|)
block|{
name|this
operator|.
name|options
operator|=
name|options
expr_stmt|;
return|return
name|this
return|;
block|}
name|boolean
name|check
parameter_list|()
block|{
name|NodeList
name|ocds
init|=
name|root
operator|.
name|getElementsByTagName
argument_list|(
literal|"OCD"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ocds
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|ocd
init|=
operator|(
name|Element
operator|)
name|ocds
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasAttribute
argument_list|(
name|ocd
argument_list|,
literal|"id"
argument_list|,
name|this
operator|.
name|ocd
argument_list|)
condition|)
block|{
return|return
name|checkOCD
argument_list|(
name|ocd
argument_list|)
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkOCD
parameter_list|(
name|Element
name|ocd
parameter_list|)
block|{
name|NodeList
name|ads
init|=
name|ocd
operator|.
name|getElementsByTagName
argument_list|(
literal|"AD"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ads
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|ad
init|=
operator|(
name|Element
operator|)
name|ads
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasAttribute
argument_list|(
name|ad
argument_list|,
literal|"id"
argument_list|,
name|id
argument_list|)
condition|)
block|{
return|return
name|checkAD
argument_list|(
name|ad
argument_list|)
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkAD
parameter_list|(
name|Element
name|ad
parameter_list|)
block|{
if|if
condition|(
name|type
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|ad
argument_list|,
literal|"type"
argument_list|,
name|type
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|defaultValue
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|ad
argument_list|,
literal|"default"
argument_list|,
name|defaultValue
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|cardinality
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|ad
argument_list|,
literal|"cardinality"
argument_list|,
name|cardinality
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|options
operator|!=
literal|null
condition|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|optionValues
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|NodeList
name|optionElements
init|=
name|ad
operator|.
name|getElementsByTagName
argument_list|(
literal|"Option"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|optionElements
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|optionElement
init|=
operator|(
name|Element
operator|)
name|optionElements
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|optionValues
operator|.
name|add
argument_list|(
name|optionElement
operator|.
name|getAttribute
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|length
operator|!=
name|optionValues
operator|.
name|size
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|String
name|option
range|:
name|options
control|)
block|{
if|if
condition|(
operator|!
name|optionValues
operator|.
name|contains
argument_list|(
name|option
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
block|}
name|HasDesignate
name|hasDesignate
parameter_list|()
block|{
return|return
operator|new
name|HasDesignate
argument_list|()
return|;
block|}
class|class
name|HasDesignate
block|{
specifier|private
name|String
name|pid
decl_stmt|;
specifier|private
name|String
name|factoryPid
decl_stmt|;
specifier|private
name|String
name|reference
decl_stmt|;
specifier|private
name|HasDesignate
parameter_list|()
block|{
comment|// Prevent instantiation outside of this class.
block|}
name|HasDesignate
name|withPid
parameter_list|(
name|String
name|pid
parameter_list|)
block|{
name|this
operator|.
name|pid
operator|=
name|pid
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasDesignate
name|withFactoryPid
parameter_list|(
name|String
name|factoryPid
parameter_list|)
block|{
name|this
operator|.
name|factoryPid
operator|=
name|factoryPid
expr_stmt|;
return|return
name|this
return|;
block|}
name|HasDesignate
name|withReference
parameter_list|(
name|String
name|reference
parameter_list|)
block|{
name|this
operator|.
name|reference
operator|=
name|reference
expr_stmt|;
return|return
name|this
return|;
block|}
name|boolean
name|check
parameter_list|()
block|{
name|NodeList
name|designates
init|=
name|root
operator|.
name|getElementsByTagName
argument_list|(
literal|"Designate"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|designates
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|checkDesignate
argument_list|(
operator|(
name|Element
operator|)
name|designates
operator|.
name|item
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkDesignate
parameter_list|(
name|Element
name|element
parameter_list|)
block|{
if|if
condition|(
name|pid
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|element
argument_list|,
literal|"pid"
argument_list|,
name|pid
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|factoryPid
operator|!=
literal|null
operator|&&
operator|!
name|hasAttribute
argument_list|(
name|element
argument_list|,
literal|"factoryPid"
argument_list|,
name|factoryPid
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|reference
operator|!=
literal|null
condition|)
block|{
name|NodeList
name|objects
init|=
name|element
operator|.
name|getElementsByTagName
argument_list|(
literal|"Object"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|objects
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|hasAttribute
argument_list|(
operator|(
name|Element
operator|)
name|objects
operator|.
name|item
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"ocdref"
argument_list|,
name|reference
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
block|}
end_class

end_unit

