begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
package|;
end_package

begin_enum
enum|enum
name|Mode
block|{
name|BACKUP
argument_list|(
literal|"backup"
argument_list|,
operator|new
name|BackupCommand
argument_list|()
argument_list|)
block|,
name|RESTORE
argument_list|(
literal|"restore"
argument_list|,
operator|new
name|RestoreCommand
argument_list|()
argument_list|)
block|,
name|BENCHMARK
argument_list|(
literal|"benchmark"
argument_list|,
operator|new
name|BenchmarkCommand
argument_list|()
argument_list|)
block|,
name|CONSOLE
argument_list|(
literal|"console"
argument_list|,
operator|new
name|ConsoleCommand
argument_list|()
argument_list|)
block|,
name|DEBUG
argument_list|(
literal|"debug"
argument_list|,
operator|new
name|DebugCommand
argument_list|()
argument_list|)
block|,
name|GRAPH
argument_list|(
literal|"graph"
argument_list|,
operator|new
name|GraphCommand
argument_list|()
argument_list|)
block|,
name|HISTORY
argument_list|(
literal|"history"
argument_list|,
operator|new
name|HistoryCommand
argument_list|()
argument_list|)
block|,
name|CHECK
argument_list|(
literal|"check"
argument_list|,
operator|new
name|CheckCommand
argument_list|()
argument_list|)
block|,
name|COMPACT
argument_list|(
literal|"compact"
argument_list|,
operator|new
name|CompactCommand
argument_list|()
argument_list|)
block|,
name|SERVER
argument_list|(
literal|"server"
argument_list|,
operator|new
name|ServerCommand
argument_list|()
argument_list|)
block|,
name|UPGRADE
argument_list|(
literal|"upgrade"
argument_list|,
operator|new
name|UpgradeCommand
argument_list|()
argument_list|)
block|,
name|UNLOCKUPGRADE
argument_list|(
literal|"unlockUpgrade"
argument_list|,
operator|new
name|UnlockUpgradeCommand
argument_list|()
argument_list|)
block|,
name|SCALABILITY
argument_list|(
literal|"scalability"
argument_list|,
operator|new
name|ScalabilityCommand
argument_list|()
argument_list|)
block|,
name|EXPLORE
argument_list|(
literal|"explore"
argument_list|,
operator|new
name|ExploreCommand
argument_list|()
argument_list|)
block|,
name|CHECKPOINTS
argument_list|(
literal|"checkpoints"
argument_list|,
operator|new
name|CheckpointsCommand
argument_list|()
argument_list|)
block|,
name|RECOVERY
argument_list|(
literal|"recovery"
argument_list|,
operator|new
name|RecoveryCommand
argument_list|()
argument_list|)
block|,
name|REPAIR
argument_list|(
literal|"repair"
argument_list|,
operator|new
name|RepairCommand
argument_list|()
argument_list|)
block|,
name|TIKA
argument_list|(
literal|"tika"
argument_list|,
operator|new
name|TikaCommand
argument_list|()
argument_list|)
block|,
name|GARBAGE
argument_list|(
literal|"garbage"
argument_list|,
operator|new
name|GarbageCommand
argument_list|()
argument_list|)
block|,
name|TARMKDIFF
argument_list|(
literal|"tarmkdiff"
argument_list|,
operator|new
name|FileStoreDiffCommand
argument_list|()
argument_list|)
block|,
name|DATASTORECHECK
argument_list|(
literal|"datastorecheck"
argument_list|,
operator|new
name|DataStoreCheckCommand
argument_list|()
argument_list|)
block|,
name|RESETCLUSTERID
argument_list|(
literal|"resetclusterid"
argument_list|,
operator|new
name|ResetClusterIdCommand
argument_list|()
argument_list|)
block|,
name|PERSISTENTCACHE
argument_list|(
literal|"persistentcache"
argument_list|,
operator|new
name|PersistentCacheCommand
argument_list|()
argument_list|)
block|,
name|THREADDUMP
argument_list|(
literal|"threaddump"
argument_list|,
operator|new
name|ThreadDumpCommand
argument_list|()
argument_list|)
block|,
name|DATASTORECACHEUPGRADE
argument_list|(
literal|"datastorecacheupgrade"
argument_list|,
operator|new
name|DataStoreCacheUpgradeCommand
argument_list|()
argument_list|)
block|,
name|INDEX
argument_list|(
literal|"index"
argument_list|,
operator|new
name|IndexCommand
argument_list|()
argument_list|)
block|,
name|HELP
argument_list|(
literal|"help"
argument_list|,
operator|new
name|HelpCommand
argument_list|()
argument_list|)
block|;
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|Command
name|command
decl_stmt|;
name|Mode
parameter_list|(
name|String
name|name
parameter_list|,
name|Command
name|command
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|command
operator|=
name|command
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|execute
parameter_list|(
name|String
modifier|...
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
block|}
end_enum

end_unit

