begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|data
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|Buffer
import|;
end_import

begin_class
class|class
name|SegmentDataRaw
implements|implements
name|SegmentData
block|{
specifier|private
specifier|final
name|Buffer
name|buffer
decl_stmt|;
name|SegmentDataRaw
parameter_list|(
name|Buffer
name|buffer
parameter_list|)
block|{
name|this
operator|.
name|buffer
operator|=
name|buffer
expr_stmt|;
block|}
specifier|private
name|int
name|index
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
return|return
name|SegmentDataUtils
operator|.
name|index
argument_list|(
name|buffer
argument_list|,
name|recordReferenceOffset
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Buffer
name|readBytes
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|,
name|int
name|size
parameter_list|)
block|{
return|return
name|SegmentDataUtils
operator|.
name|readBytes
argument_list|(
name|buffer
argument_list|,
name|index
argument_list|(
name|recordReferenceOffset
argument_list|)
argument_list|,
name|size
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|hexDump
parameter_list|(
name|OutputStream
name|stream
parameter_list|)
throws|throws
name|IOException
block|{
name|SegmentDataUtils
operator|.
name|hexDump
argument_list|(
name|buffer
argument_list|,
name|stream
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|binDump
parameter_list|(
name|OutputStream
name|stream
parameter_list|)
throws|throws
name|IOException
block|{
name|SegmentDataUtils
operator|.
name|binDump
argument_list|(
name|buffer
argument_list|,
name|stream
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|buffer
operator|.
name|remaining
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|estimateMemoryUsage
parameter_list|()
block|{
return|return
name|SegmentDataUtils
operator|.
name|estimateMemoryUsage
argument_list|(
name|buffer
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
name|getVersion
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSignature
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getFullGeneration
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCompacted
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getGeneration
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getSegmentReferencesCount
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRecordReferencesCount
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRecordReferenceNumber
parameter_list|(
name|int
name|i
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|byte
name|getRecordReferenceType
parameter_list|(
name|int
name|i
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRecordReferenceOffset
parameter_list|(
name|int
name|i
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getSegmentReferenceMsb
parameter_list|(
name|int
name|i
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getSegmentReferenceLsb
parameter_list|(
name|int
name|i
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|readLength
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|StringData
name|readString
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|RecordIdData
name|readRecordId
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|byte
name|readByte
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|readInt
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|short
name|readShort
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|readLong
parameter_list|(
name|int
name|recordReferenceOffset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"invalid operation"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

