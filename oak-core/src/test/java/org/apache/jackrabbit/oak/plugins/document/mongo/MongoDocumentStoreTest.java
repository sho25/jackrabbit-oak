begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|AbstractMongoConnectionTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMK
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|MongoUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|NodeDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  *<code>MongoDocumentStoreTest</code>...  */
end_comment

begin_class
specifier|public
class|class
name|MongoDocumentStoreTest
extends|extends
name|AbstractMongoConnectionTest
block|{
specifier|private
name|TestStore
name|store
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUpConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|mongoConnection
operator|=
name|connectionFactory
operator|.
name|getConnection
argument_list|()
expr_stmt|;
name|MongoUtils
operator|.
name|dropCollections
argument_list|(
name|mongoConnection
operator|.
name|getDB
argument_list|()
argument_list|)
expr_stmt|;
name|DocumentMK
operator|.
name|Builder
name|builder
init|=
operator|new
name|DocumentMK
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|store
operator|=
operator|new
name|TestStore
argument_list|(
name|mongoConnection
operator|.
name|getDB
argument_list|()
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setDocumentStore
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|mk
operator|=
name|builder
operator|.
name|setMongoDB
argument_list|(
name|mongoConnection
operator|.
name|getDB
argument_list|()
argument_list|)
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|timeoutQuery
parameter_list|()
block|{
name|String
name|fromId
init|=
name|Utils
operator|.
name|getKeyLowerLimit
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|String
name|toId
init|=
name|Utils
operator|.
name|getKeyUpperLimit
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|store
operator|.
name|setMaxLockedQueryTimeMS
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|long
name|index
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
comment|// keep adding nodes until the query runs into the timeout
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|1000
condition|;
name|j
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"+\"node-"
argument_list|)
operator|.
name|append
argument_list|(
name|index
operator|++
argument_list|)
operator|.
name|append
argument_list|(
literal|"\":{}"
argument_list|)
expr_stmt|;
block|}
name|mk
operator|.
name|commit
argument_list|(
literal|"/"
argument_list|,
name|sb
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|store
operator|.
name|queriesWithoutLock
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|NodeDocument
argument_list|>
name|docs
init|=
name|store
operator|.
name|query
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
name|fromId
argument_list|,
name|toId
argument_list|,
literal|"foo"
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|docs
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|store
operator|.
name|queriesWithoutLock
operator|.
name|get
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return;
block|}
block|}
name|fail
argument_list|(
literal|"No query timeout triggered even after adding "
operator|+
name|index
operator|+
literal|" nodes"
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|final
class|class
name|TestStore
extends|extends
name|MongoDocumentStore
block|{
name|AtomicInteger
name|queriesWithoutLock
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|TestStore
parameter_list|(
name|DB
name|db
parameter_list|,
name|DocumentMK
operator|.
name|Builder
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|db
argument_list|,
name|builder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
argument_list|<
name|T
extends|extends
name|Document
argument_list|>
name|List
argument_list|<
name|T
argument_list|>
name|queryInternal
parameter_list|(
name|Collection
argument_list|<
name|T
argument_list|>
name|collection
parameter_list|,
name|String
name|fromKey
parameter_list|,
name|String
name|toKey
parameter_list|,
name|String
name|indexedProperty
parameter_list|,
name|long
name|startValue
parameter_list|,
name|int
name|limit
parameter_list|,
name|long
name|maxQueryTime
parameter_list|,
name|boolean
name|withLock
parameter_list|)
block|{
if|if
condition|(
name|collection
operator|==
name|Collection
operator|.
name|NODES
operator|&&
operator|!
name|withLock
condition|)
block|{
name|queriesWithoutLock
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
block|}
return|return
name|super
operator|.
name|queryInternal
argument_list|(
name|collection
argument_list|,
name|fromKey
argument_list|,
name|toKey
argument_list|,
name|indexedProperty
argument_list|,
name|startValue
argument_list|,
name|limit
argument_list|,
name|maxQueryTime
argument_list|,
name|withLock
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

