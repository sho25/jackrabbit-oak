begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|CheckForNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|configuration
operator|.
name|SolrServerConfigurationDefaults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|ConcurrentUpdateSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrServer
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultSolrServerProvider
implements|implements
name|SolrServerProvider
block|{
specifier|private
name|SolrClient
name|solrServer
decl_stmt|;
specifier|private
name|SolrClient
name|indexingSolrServer
decl_stmt|;
annotation|@
name|CheckForNull
annotation|@
name|Override
specifier|public
name|SolrClient
name|getSolrServer
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|solrServer
operator|==
literal|null
condition|)
block|{
name|solrServer
operator|=
operator|new
name|HttpSolrServer
argument_list|(
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|solrServer
return|;
block|}
annotation|@
name|CheckForNull
annotation|@
name|Override
specifier|public
name|SolrClient
name|getIndexingSolrServer
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|indexingSolrServer
operator|==
literal|null
condition|)
block|{
name|indexingSolrServer
operator|=
operator|new
name|ConcurrentUpdateSolrServer
argument_list|(
name|getUrl
argument_list|()
argument_list|,
literal|1000
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
return|return
name|indexingSolrServer
return|;
block|}
annotation|@
name|CheckForNull
annotation|@
name|Override
specifier|public
name|SolrClient
name|getSearchingSolrServer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|getSolrServer
argument_list|()
return|;
block|}
specifier|private
name|String
name|getUrl
parameter_list|()
block|{
return|return
name|SolrServerConfigurationDefaults
operator|.
name|LOCAL_BASE_URL
operator|+
literal|':'
operator|+
name|SolrServerConfigurationDefaults
operator|.
name|HTTP_PORT
operator|+
name|SolrServerConfigurationDefaults
operator|.
name|CONTEXT
operator|+
literal|'/'
operator|+
name|SolrServerConfigurationDefaults
operator|.
name|CORE_NAME
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|SolrClient
name|solrServer
init|=
name|getSolrServer
argument_list|()
decl_stmt|;
if|if
condition|(
name|solrServer
operator|!=
literal|null
condition|)
block|{
name|solrServer
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
try|try
block|{
name|SolrClient
name|indexingSolrServer
init|=
name|getIndexingSolrServer
argument_list|()
decl_stmt|;
if|if
condition|(
name|indexingSolrServer
operator|!=
literal|null
condition|)
block|{
name|indexingSolrServer
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
try|try
block|{
name|getSearchingSolrServer
argument_list|()
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
block|}
block|}
end_class

end_unit

