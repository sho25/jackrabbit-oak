begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|principal
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|AbstractExternalAuthTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|ExternalIdentityConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|util
operator|.
name|TreeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|ExternalIdentityRepositoryInitializerTest
extends|extends
name|AbstractExternalAuthTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testIndexDefinitions
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|oakIndex
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|'/'
operator|+
name|IndexConstants
operator|.
name|INDEX_DEFINITIONS_NAME
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|oakIndex
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Tree
name|externalPrincipalNames
init|=
name|oakIndex
operator|.
name|getChild
argument_list|(
literal|"externalPrincipalNames"
argument_list|)
decl_stmt|;
name|assertIndexDefinition
argument_list|(
name|externalPrincipalNames
argument_list|,
name|ExternalIdentityConstants
operator|.
name|REP_EXTERNAL_PRINCIPAL_NAMES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|assertIndexDefinition
parameter_list|(
name|Tree
name|tree
parameter_list|,
name|String
name|propName
parameter_list|,
name|boolean
name|isUnique
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|tree
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|isUnique
argument_list|,
name|TreeUtil
operator|.
name|getBoolean
argument_list|(
name|tree
argument_list|,
name|IndexConstants
operator|.
name|UNIQUE_PROPERTY_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|propName
argument_list|,
operator|new
name|String
index|[]
block|{
name|propName
block|}
argument_list|,
name|Iterables
operator|.
name|toArray
argument_list|(
name|TreeUtil
operator|.
name|getStrings
argument_list|(
name|tree
argument_list|,
name|IndexConstants
operator|.
name|PROPERTY_NAMES
argument_list|)
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Iterable
argument_list|<
name|String
argument_list|>
name|declaringNtNames
init|=
name|TreeUtil
operator|.
name|getStrings
argument_list|(
name|tree
argument_list|,
name|IndexConstants
operator|.
name|DECLARING_NODE_TYPES
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|declaringNtNames
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

