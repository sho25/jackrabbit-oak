begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|j2ee
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|catalina
operator|.
name|startup
operator|.
name|Tomcat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|bridge
operator|.
name|SLF4JBridgeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|html
operator|.
name|HtmlElement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|html
operator|.
name|HtmlForm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|html
operator|.
name|HtmlInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|html
operator|.
name|HtmlPage
import|;
end_import

begin_class
specifier|public
class|class
name|TomcatIT
extends|extends
name|TestCase
block|{
static|static
block|{
name|SLF4JBridgeHandler
operator|.
name|install
argument_list|()
expr_stmt|;
block|}
specifier|private
name|URL
name|url
decl_stmt|;
specifier|private
name|Tomcat
name|tomcat
decl_stmt|;
specifier|private
name|WebClient
name|client
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|war
init|=
literal|null
decl_stmt|;
for|for
control|(
name|File
name|f
range|:
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
operator|.
name|listFiles
argument_list|()
control|)
block|{
if|if
condition|(
name|f
operator|.
name|isDirectory
argument_list|()
operator|&&
operator|new
name|File
argument_list|(
name|f
argument_list|,
literal|"WEB-INF/web.xml"
argument_list|)
operator|.
name|isFile
argument_list|()
condition|)
block|{
name|war
operator|=
name|f
expr_stmt|;
break|break;
block|}
block|}
name|assertNotNull
argument_list|(
name|war
argument_list|)
expr_stmt|;
name|File
name|bootstrap
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"bootstrap.properties"
argument_list|)
decl_stmt|;
name|bootstrap
operator|.
name|delete
argument_list|()
expr_stmt|;
name|RepositoryAccessServlet
operator|.
name|bootstrapOverride
operator|=
name|bootstrap
operator|.
name|getPath
argument_list|()
expr_stmt|;
name|RepositoryStartupServlet
operator|.
name|bootstrapOverride
operator|=
name|bootstrap
operator|.
name|getPath
argument_list|()
expr_stmt|;
name|File
name|baseDir
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"tomcat"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|baseDir
argument_list|)
expr_stmt|;
name|File
name|repoDir
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"repository"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|repoDir
argument_list|)
expr_stmt|;
name|url
operator|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:12856/"
argument_list|)
expr_stmt|;
name|tomcat
operator|=
operator|new
name|Tomcat
argument_list|()
expr_stmt|;
name|tomcat
operator|.
name|setSilent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tomcat
operator|.
name|setBaseDir
argument_list|(
name|baseDir
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|tomcat
operator|.
name|setHostname
argument_list|(
name|url
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|tomcat
operator|.
name|setPort
argument_list|(
name|url
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|tomcat
operator|.
name|addWebapp
argument_list|(
literal|""
argument_list|,
name|war
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|tomcat
operator|.
name|start
argument_list|()
expr_stmt|;
name|client
operator|=
operator|new
name|WebClient
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testTomcat
parameter_list|()
throws|throws
name|Exception
block|{
name|HtmlPage
name|page
init|=
name|client
operator|.
name|getPage
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Content Repository Setup"
argument_list|,
name|page
operator|.
name|getTitleText
argument_list|()
argument_list|)
expr_stmt|;
name|page
operator|=
name|submitNewRepositoryForm
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Content Repository Ready"
argument_list|,
name|page
operator|.
name|getTitleText
argument_list|()
argument_list|)
expr_stmt|;
name|page
operator|=
name|page
operator|.
name|getAnchorByText
argument_list|(
literal|"home"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache Jackrabbit JCR Server"
argument_list|,
name|page
operator|.
name|getTitleText
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|HtmlPage
name|submitNewRepositoryForm
parameter_list|(
name|HtmlPage
name|page
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|HtmlForm
name|form
range|:
name|page
operator|.
name|getForms
argument_list|()
control|)
block|{
for|for
control|(
name|HtmlInput
name|mode
range|:
name|form
operator|.
name|getInputsByName
argument_list|(
literal|"mode"
argument_list|)
control|)
block|{
if|if
condition|(
literal|"new"
operator|.
name|equals
argument_list|(
name|mode
operator|.
name|getValueAttribute
argument_list|()
argument_list|)
condition|)
block|{
for|for
control|(
name|HtmlInput
name|home
range|:
name|form
operator|.
name|getInputsByName
argument_list|(
literal|"repository_home"
argument_list|)
control|)
block|{
name|home
operator|.
name|setValueAttribute
argument_list|(
literal|"target/repository"
argument_list|)
expr_stmt|;
for|for
control|(
name|HtmlElement
name|submit
range|:
name|form
operator|.
name|getElementsByAttribute
argument_list|(
literal|"input"
argument_list|,
literal|"type"
argument_list|,
literal|"submit"
argument_list|)
control|)
block|{
return|return
name|submit
operator|.
name|click
argument_list|()
return|;
block|}
block|}
block|}
block|}
block|}
name|fail
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|closeAllWindows
argument_list|()
expr_stmt|;
name|tomcat
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

