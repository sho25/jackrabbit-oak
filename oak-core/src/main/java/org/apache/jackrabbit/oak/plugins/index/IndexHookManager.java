begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Editor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_comment
comment|/**  * Keeps existing IndexHooks updated.  *   *<p>  * The existing index list is obtained via the IndexHookProvider.  *</p>  *   * @see IndexHook  * @see IndexHookProvider  *   */
end_comment

begin_class
specifier|public
class|class
name|IndexHookManager
extends|extends
name|EditorHook
block|{
specifier|public
specifier|static
specifier|final
name|IndexHookManager
name|of
parameter_list|(
name|IndexHookProvider
name|provider
parameter_list|)
block|{
return|return
operator|new
name|IndexHookManager
argument_list|(
operator|new
name|EditorProviderWrapper
argument_list|(
name|provider
argument_list|)
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|EditorProviderWrapper
implements|implements
name|EditorProvider
block|{
specifier|private
specifier|final
name|IndexHookProvider
name|provider
decl_stmt|;
name|EditorProviderWrapper
parameter_list|(
name|IndexHookProvider
name|provider
parameter_list|)
block|{
name|this
operator|.
name|provider
operator|=
name|provider
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Editor
name|getRootEditor
parameter_list|(
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|)
block|{
return|return
operator|new
name|IndexHookManagerDiff
argument_list|(
name|provider
argument_list|,
name|builder
argument_list|)
return|;
block|}
block|}
specifier|protected
name|IndexHookManager
parameter_list|(
name|EditorProvider
name|provider
parameter_list|)
block|{
name|super
argument_list|(
name|provider
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

