begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Implementations of this interface would get callbacks while indexing documents. It's the responsibility  * of the implementation to exit as early as possible if it doesn't care about the document being indexed.  */
end_comment

begin_interface
specifier|public
interface|interface
name|IndexFieldProvider
block|{
comment|/**      * Implementation which doesn't do anything useful... yet, abides with the contract.      */
name|IndexFieldProvider
name|DEFAULT
init|=
operator|new
name|IndexFieldProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|Field
argument_list|>
name|getAugmentedFields
parameter_list|(
name|String
name|path
parameter_list|,
name|NodeState
name|document
parameter_list|,
name|NodeState
name|indexDefinition
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|EMPTY_LIST
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getSupportedTypes
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|EMPTY_SET
return|;
block|}
block|}
decl_stmt|;
comment|/**      * This method would get called while indexing a document.      *      * @param path path of the document being indexed      * @param document {@link NodeState} of the document being indexed      * @param indexDefinition {@link NodeState} of index definition      * @return {@link Iterable} of fields that are to be added to {@link org.apache.lucene.document.Document} being prepared      */
annotation|@
name|NotNull
name|Iterable
argument_list|<
name|Field
argument_list|>
name|getAugmentedFields
parameter_list|(
name|String
name|path
parameter_list|,
name|NodeState
name|document
parameter_list|,
name|NodeState
name|indexDefinition
parameter_list|)
function_decl|;
comment|/**      * This method is used to find which node types are supported by the implementation. Based, on the index      * definition being used to index the document, only those implementations would get callback to      * {@link IndexFieldProvider#getAugmentedFields} which declare a matching node type. Note, node types are      * exact matches and do not support inheritance.      * @return {@link Set} of types supported by the implementation      */
annotation|@
name|NotNull
name|Set
argument_list|<
name|String
argument_list|>
name|getSupportedTypes
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

