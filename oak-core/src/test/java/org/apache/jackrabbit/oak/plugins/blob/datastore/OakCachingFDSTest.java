begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|junit
operator|.
name|OsgiContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
operator|.
name|newHashMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|AbstractDataStoreService
operator|.
name|JR2_CACHING_PROP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_comment
comment|/**  * Tests {@link OakCachingFDS} and OSGi registration using {@link FileDataStoreService}.  */
end_comment

begin_class
specifier|public
class|class
name|OakCachingFDSTest
block|{
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|OsgiContext
name|context
init|=
operator|new
name|OsgiContext
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{     }
specifier|private
name|OakCachingFDS
name|dataStore
decl_stmt|;
specifier|private
name|String
name|fsBackendPath
decl_stmt|;
specifier|private
name|String
name|path
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|JR2_CACHING_PROP
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|fsBackendPath
operator|=
name|folder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
name|path
operator|=
name|folder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tear
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|clearProperty
argument_list|(
name|JR2_CACHING_PROP
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createAndCheckReferenceKey
parameter_list|()
throws|throws
name|Exception
block|{
name|createCachingFDS
argument_list|()
expr_stmt|;
name|assertReferenceKey
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|registerAndCheckReferenceKey
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|registerService
argument_list|(
name|StatisticsProvider
operator|.
name|class
argument_list|,
name|StatisticsProvider
operator|.
name|NOOP
argument_list|)
expr_stmt|;
name|registerCachingFDS
argument_list|()
expr_stmt|;
name|assertReferenceKey
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|assertReferenceKey
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|key
init|=
name|dataStore
operator|.
name|getOrCreateReferenceKey
argument_list|()
decl_stmt|;
comment|// Check bytes retrieved from reference.key file
name|File
name|refFile
init|=
operator|new
name|File
argument_list|(
name|fsBackendPath
argument_list|,
literal|"reference.key"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|keyRet
init|=
name|FileUtils
operator|.
name|readFileToByteArray
argument_list|(
name|refFile
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|key
argument_list|,
name|keyRet
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|key
argument_list|,
name|dataStore
operator|.
name|getOrCreateReferenceKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|registerCachingFDS
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
name|newHashMap
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cachePath"
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
name|fsBackendPath
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cacheSize"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"repository.home"
argument_list|,
operator|new
name|File
argument_list|(
name|fsBackendPath
argument_list|)
operator|.
name|getParentFile
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
operator|new
name|FileDataStoreService
argument_list|()
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|context
operator|.
name|getService
argument_list|(
name|BlobStore
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|BlobStore
name|blobStore
init|=
name|context
operator|.
name|getService
argument_list|(
name|BlobStore
operator|.
name|class
argument_list|)
decl_stmt|;
assert|assert
name|blobStore
operator|instanceof
name|DataStoreBlobStore
assert|;
name|DataStore
name|ds
init|=
operator|(
operator|(
name|DataStoreBlobStore
operator|)
name|blobStore
operator|)
operator|.
name|getDataStore
argument_list|()
decl_stmt|;
assert|assert
name|ds
operator|instanceof
name|OakCachingFDS
assert|;
name|dataStore
operator|=
operator|(
name|OakCachingFDS
operator|)
name|ds
expr_stmt|;
block|}
specifier|private
name|void
name|createCachingFDS
parameter_list|()
throws|throws
name|Exception
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"fsBackendPath"
argument_list|,
name|fsBackendPath
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cacheSize"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|dataStore
operator|=
operator|new
name|OakCachingFDS
argument_list|()
expr_stmt|;
name|dataStore
operator|.
name|setFsBackendPath
argument_list|(
name|fsBackendPath
argument_list|)
expr_stmt|;
name|dataStore
operator|.
name|setAsyncUploadLimit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|dataStore
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|dataStore
operator|.
name|init
argument_list|(
name|folder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

