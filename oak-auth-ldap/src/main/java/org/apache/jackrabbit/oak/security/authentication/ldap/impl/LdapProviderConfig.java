begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|ldap
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|api
operator|.
name|ldap
operator|.
name|model
operator|.
name|exception
operator|.
name|LdapInvalidDnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|api
operator|.
name|ldap
operator|.
name|model
operator|.
name|filter
operator|.
name|FilterEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|api
operator|.
name|ldap
operator|.
name|model
operator|.
name|name
operator|.
name|Dn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_comment
comment|/**  * Configuration of the ldap provider.  */
end_comment

begin_class
annotation|@
name|Component
argument_list|(
name|label
operator|=
literal|"Apache Jackrabbit Oak LDAP Identity Provider"
argument_list|,
name|name
operator|=
literal|"org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider"
argument_list|,
name|configurationFactory
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|,
name|ds
operator|=
literal|false
argument_list|)
specifier|public
class|class
name|LdapProviderConfig
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_NAME_DEFAULT
init|=
literal|"ldap"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|label
operator|=
literal|"LDAP Provider Name"
argument_list|,
name|description
operator|=
literal|"Name of this LDAP provider configuration. This is used to reference this provider by the login modules."
argument_list|,
name|value
operator|=
name|PARAM_NAME_DEFAULT
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_NAME
init|=
literal|"provider.name"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_LDAP_HOST_DEFAULT
init|=
literal|"localhost"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|label
operator|=
literal|"LDAP Server Hostname"
argument_list|,
name|description
operator|=
literal|"Hostname of the LDAP server"
argument_list|,
name|value
operator|=
name|PARAM_LDAP_HOST_DEFAULT
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_LDAP_HOST
init|=
literal|"host.name"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|PARAM_LDAP_PORT_DEFAULT
init|=
literal|389
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|label
operator|=
literal|"LDAP Server Port"
argument_list|,
name|description
operator|=
literal|"Port of the LDAP server"
argument_list|,
name|intValue
operator|=
name|PARAM_LDAP_PORT_DEFAULT
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_LDAP_PORT
init|=
literal|"host.port"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|boolean
name|PARAM_USE_SSL_DEFAULT
init|=
literal|false
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|label
operator|=
literal|"Use SSL"
argument_list|,
name|description
operator|=
literal|"Indicates if an SSL connection should be used."
argument_list|,
name|boolValue
operator|=
name|PARAM_USE_SSL_DEFAULT
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_USE_SSL
init|=
literal|"host.ssl"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_BIND_DN_DEFAULT
init|=
literal|""
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|label
operator|=
literal|"Bind DN"
argument_list|,
name|description
operator|=
literal|"DN of the user for authentication. Leave empty for anonymous bind."
argument_list|,
name|value
operator|=
name|PARAM_BIND_DN_DEFAULT
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_BIND_DN
init|=
literal|"bind.dn"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_BIND_PASSWORD_DEFAULT
init|=
literal|""
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|label
operator|=
literal|"Bind Password"
argument_list|,
name|description
operator|=
literal|"Password of the user for authentication."
argument_list|,
name|passwordValue
operator|=
name|PARAM_BIND_PASSWORD_DEFAULT
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_BIND_PASSWORD
init|=
literal|"bind.password"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|PARAM_SEARCH_TIMEOUT_DEFAULT
init|=
literal|60000
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|label
operator|=
literal|"Search Timeout"
argument_list|,
name|description
operator|=
literal|"Time in milliseconds until a search times out."
argument_list|,
name|intValue
operator|=
name|PARAM_SEARCH_TIMEOUT_DEFAULT
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|PARAM_SEARCH_TIMEOUT
init|=
literal|"search.timeout"
decl_stmt|;
comment|/**      * Defines the configuration of an identity.      */
specifier|public
specifier|static
class|class
name|Identity
block|{
specifier|private
name|Dn
name|baseDN
decl_stmt|;
specifier|private
name|String
index|[]
name|objectClasses
decl_stmt|;
specifier|private
name|String
name|idAttribute
decl_stmt|;
specifier|private
name|String
name|extraFilter
decl_stmt|;
specifier|private
name|String
name|filterTemplate
decl_stmt|;
specifier|public
name|Dn
name|getBaseDN
parameter_list|()
block|{
return|return
name|baseDN
return|;
block|}
specifier|public
name|void
name|setBaseDN
parameter_list|(
name|String
name|baseDN
parameter_list|)
throws|throws
name|LdapInvalidDnException
block|{
name|this
operator|.
name|baseDN
operator|=
operator|new
name|Dn
argument_list|(
name|baseDN
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getObjectClasses
parameter_list|()
block|{
return|return
name|objectClasses
return|;
block|}
specifier|public
name|void
name|setObjectClasses
parameter_list|(
name|String
index|[]
name|objectClasses
parameter_list|)
block|{
name|this
operator|.
name|objectClasses
operator|=
name|objectClasses
expr_stmt|;
name|filterTemplate
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|String
name|getIdAttribute
parameter_list|()
block|{
return|return
name|idAttribute
return|;
block|}
specifier|public
name|void
name|setIdAttribute
parameter_list|(
name|String
name|idAttribute
parameter_list|)
block|{
name|this
operator|.
name|idAttribute
operator|=
name|idAttribute
expr_stmt|;
name|filterTemplate
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|String
name|getExtraFilter
parameter_list|()
block|{
return|return
name|extraFilter
return|;
block|}
specifier|public
name|void
name|setExtraFilter
parameter_list|(
name|String
name|extraFilter
parameter_list|)
block|{
name|this
operator|.
name|extraFilter
operator|=
name|extraFilter
expr_stmt|;
name|filterTemplate
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|String
name|getSearchFilter
parameter_list|(
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|filterTemplate
operator|==
literal|null
condition|)
block|{
name|StringBuilder
name|filter
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"(&("
argument_list|)
operator|.
name|append
argument_list|(
name|idAttribute
argument_list|)
operator|.
name|append
argument_list|(
literal|"=%s)"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|objectClass
range|:
name|objectClasses
control|)
block|{
name|filter
operator|.
name|append
argument_list|(
literal|"(objectclass="
argument_list|)
operator|.
name|append
argument_list|(
name|FilterEncoder
operator|.
name|encodeFilterValue
argument_list|(
name|objectClass
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|')'
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|extraFilter
operator|!=
literal|null
operator|&&
name|extraFilter
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|filter
operator|.
name|append
argument_list|(
name|extraFilter
argument_list|)
expr_stmt|;
block|}
name|filter
operator|.
name|append
argument_list|(
literal|')'
argument_list|)
expr_stmt|;
name|filterTemplate
operator|=
name|filter
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
return|return
name|String
operator|.
name|format
argument_list|(
name|filterTemplate
argument_list|,
name|FilterEncoder
operator|.
name|encodeFilterValue
argument_list|(
name|id
argument_list|)
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|LdapProviderConfig
name|of
parameter_list|(
name|ConfigurationParameters
name|params
parameter_list|)
block|{
name|LdapProviderConfig
name|cfg
init|=
operator|new
name|LdapProviderConfig
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|name
operator|=
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_NAME
argument_list|,
name|cfg
operator|.
name|name
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|host
operator|=
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_LDAP_HOST
argument_list|,
name|PARAM_LDAP_HOST_DEFAULT
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|port
operator|=
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_LDAP_PORT
argument_list|,
name|PARAM_LDAP_PORT_DEFAULT
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|useSSL
operator|=
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_USE_SSL
argument_list|,
name|PARAM_USE_SSL_DEFAULT
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|bindDN
operator|=
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_BIND_DN
argument_list|,
name|PARAM_BIND_DN_DEFAULT
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|bindPassword
operator|=
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_BIND_PASSWORD
argument_list|,
name|PARAM_BIND_PASSWORD_DEFAULT
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|searchTimeout
operator|=
name|params
operator|.
name|getConfigValue
argument_list|(
name|PARAM_SEARCH_TIMEOUT
argument_list|,
name|PARAM_SEARCH_TIMEOUT_DEFAULT
argument_list|)
expr_stmt|;
return|return
name|cfg
return|;
block|}
specifier|private
name|String
name|name
init|=
literal|"ldap"
decl_stmt|;
specifier|private
name|String
name|host
init|=
name|PARAM_LDAP_HOST_DEFAULT
decl_stmt|;
specifier|private
name|int
name|port
init|=
name|PARAM_LDAP_PORT_DEFAULT
decl_stmt|;
specifier|private
name|boolean
name|useSSL
init|=
name|PARAM_USE_SSL_DEFAULT
decl_stmt|;
specifier|private
name|String
name|bindDN
init|=
name|PARAM_BIND_DN_DEFAULT
decl_stmt|;
specifier|private
name|String
name|bindPassword
init|=
name|PARAM_BIND_PASSWORD_DEFAULT
decl_stmt|;
specifier|private
name|int
name|searchTimeout
init|=
name|PARAM_SEARCH_TIMEOUT_DEFAULT
decl_stmt|;
specifier|private
specifier|final
name|Identity
name|userConfig
init|=
operator|new
name|Identity
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Identity
name|groupConfig
init|=
operator|new
name|Identity
argument_list|()
decl_stmt|;
specifier|private
name|String
name|groupMembershipAttribute
init|=
literal|"uniquemember"
decl_stmt|;
annotation|@
name|Nonnull
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
annotation|@
name|Nonnull
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
specifier|public
name|void
name|setPort
parameter_list|(
name|int
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseSSL
parameter_list|()
block|{
return|return
name|useSSL
return|;
block|}
specifier|public
name|void
name|setUseSSL
parameter_list|(
name|boolean
name|useSSL
parameter_list|)
block|{
name|this
operator|.
name|useSSL
operator|=
name|useSSL
expr_stmt|;
block|}
specifier|public
name|String
name|getBindDN
parameter_list|()
block|{
return|return
name|bindDN
return|;
block|}
specifier|public
name|void
name|setBindDN
parameter_list|(
name|String
name|bindDN
parameter_list|)
block|{
name|this
operator|.
name|bindDN
operator|=
name|bindDN
expr_stmt|;
block|}
specifier|public
name|String
name|getBindPassword
parameter_list|()
block|{
return|return
name|bindPassword
return|;
block|}
specifier|public
name|void
name|setBindPassword
parameter_list|(
name|String
name|bindPassword
parameter_list|)
block|{
name|this
operator|.
name|bindPassword
operator|=
name|bindPassword
expr_stmt|;
block|}
specifier|public
name|int
name|getSearchTimeout
parameter_list|()
block|{
return|return
name|searchTimeout
return|;
block|}
specifier|public
name|void
name|setSearchTimeout
parameter_list|(
name|int
name|searchTimeout
parameter_list|)
block|{
name|this
operator|.
name|searchTimeout
operator|=
name|searchTimeout
expr_stmt|;
block|}
specifier|public
name|String
name|getGroupMembershipAttribute
parameter_list|()
block|{
return|return
name|groupMembershipAttribute
return|;
block|}
specifier|public
name|void
name|setGroupMembershipAttribute
parameter_list|(
name|String
name|groupMembershipAttribute
parameter_list|)
block|{
name|this
operator|.
name|groupMembershipAttribute
operator|=
name|groupMembershipAttribute
expr_stmt|;
block|}
specifier|public
name|Identity
name|getUserConfig
parameter_list|()
block|{
return|return
name|userConfig
return|;
block|}
specifier|public
name|Identity
name|getGroupConfig
parameter_list|()
block|{
return|return
name|groupConfig
return|;
block|}
block|}
end_class

end_unit

