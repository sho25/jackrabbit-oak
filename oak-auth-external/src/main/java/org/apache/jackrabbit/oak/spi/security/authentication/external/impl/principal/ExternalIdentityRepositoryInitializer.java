begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|principal
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|lifecycle
operator|.
name|RepositoryInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|ExternalIdentityConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_comment
comment|/**  * Implementation of the {@code RepositoryInitializer} interface responsible for  * setting up query indices for the system maintained, protected properties defined  * by this module:  *  *<ul>  *<li>Index Definition<i>externalPrincipalNames</i>: Indexing  *     {@link ExternalIdentityConstants#REP_EXTERNAL_PRINCIPAL_NAMES} properties.  *     This index is used by the {@link ExternalGroupPrincipalProvider} to lookup  *     and find principals stored in this property.</li>  *</ul>  *  * @since Oak 1.5.3  */
end_comment

begin_class
class|class
name|ExternalIdentityRepositoryInitializer
implements|implements
name|RepositoryInitializer
block|{
specifier|private
specifier|final
name|boolean
name|enforceUniqueIds
decl_stmt|;
name|ExternalIdentityRepositoryInitializer
parameter_list|(
name|boolean
name|enforceUniqueIds
parameter_list|)
block|{
name|this
operator|.
name|enforceUniqueIds
operator|=
name|enforceUniqueIds
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
annotation|@
name|Nonnull
name|NodeBuilder
name|builder
parameter_list|)
block|{
comment|// create index definition for "rep:externalId" and
comment|// "rep:externalPrincipalNames"
name|NodeBuilder
name|index
init|=
name|IndexUtils
operator|.
name|getOrCreateOakIndex
argument_list|(
name|builder
argument_list|)
decl_stmt|;
if|if
condition|(
name|enforceUniqueIds
operator|&&
operator|!
name|index
operator|.
name|hasChildNode
argument_list|(
literal|"externalId"
argument_list|)
condition|)
block|{
name|NodeBuilder
name|definition
init|=
name|IndexUtils
operator|.
name|createIndexDefinition
argument_list|(
name|index
argument_list|,
literal|"externalId"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|ExternalIdentityConstants
operator|.
name|REP_EXTERNAL_ID
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|definition
operator|.
name|setProperty
argument_list|(
literal|"info"
argument_list|,
literal|"Oak index assuring uniqueness of rep:externalId properties."
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|index
operator|.
name|hasChildNode
argument_list|(
literal|"externalPrincipalNames"
argument_list|)
condition|)
block|{
name|NodeBuilder
name|definition
init|=
name|IndexUtils
operator|.
name|createIndexDefinition
argument_list|(
name|index
argument_list|,
literal|"externalPrincipalNames"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|ExternalIdentityConstants
operator|.
name|REP_EXTERNAL_PRINCIPAL_NAMES
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|definition
operator|.
name|setProperty
argument_list|(
literal|"info"
argument_list|,
literal|"Oak index used by the principal management provided by the external authentication module."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

