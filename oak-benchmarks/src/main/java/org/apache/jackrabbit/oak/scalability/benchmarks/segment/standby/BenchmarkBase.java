begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|scalability
operator|.
name|benchmarks
operator|.
name|segment
operator|.
name|standby
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStoreBuilder
operator|.
name|fileStoreBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Closer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|concurrent
operator|.
name|ExecutorCloser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|DefaultStatisticsProvider
import|;
end_import

begin_class
class|class
name|BenchmarkBase
block|{
specifier|static
class|class
name|TemporaryFolder
implements|implements
name|Closeable
block|{
specifier|private
specifier|final
name|File
name|folder
decl_stmt|;
name|TemporaryFolder
parameter_list|(
name|String
name|prefix
parameter_list|)
throws|throws
name|IOException
block|{
name|folder
operator|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
literal|"target"
argument_list|)
argument_list|,
name|prefix
argument_list|)
operator|.
name|toFile
argument_list|()
expr_stmt|;
block|}
name|File
name|toFile
parameter_list|()
block|{
return|return
name|folder
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|folder
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|TemporaryExecutor
implements|implements
name|Closeable
block|{
specifier|private
specifier|final
name|ScheduledExecutorService
name|executor
decl_stmt|;
name|TemporaryExecutor
parameter_list|()
block|{
name|executor
operator|=
name|Executors
operator|.
name|newSingleThreadScheduledExecutor
argument_list|()
expr_stmt|;
block|}
name|ScheduledExecutorService
name|toScheduledExecutorService
parameter_list|()
block|{
return|return
name|executor
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
operator|new
name|ExecutorCloser
argument_list|(
name|executor
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|FileStore
name|newFileStore
parameter_list|(
name|File
name|directory
parameter_list|,
name|ScheduledExecutorService
name|executor
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|fileStoreBuilder
argument_list|(
name|directory
argument_list|)
operator|.
name|withMaxFileSize
argument_list|(
literal|1
argument_list|)
operator|.
name|withMemoryMapping
argument_list|(
literal|false
argument_list|)
operator|.
name|withNodeDeduplicationCacheSize
argument_list|(
literal|1
argument_list|)
operator|.
name|withSegmentCacheSize
argument_list|(
literal|0
argument_list|)
operator|.
name|withStringCacheSize
argument_list|(
literal|0
argument_list|)
operator|.
name|withTemplateCacheSize
argument_list|(
literal|0
argument_list|)
operator|.
name|withStatisticsProvider
argument_list|(
operator|new
name|DefaultStatisticsProvider
argument_list|(
name|executor
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
name|Closer
name|closer
decl_stmt|;
name|FileStore
name|primaryStore
decl_stmt|;
name|FileStore
name|standbyStore
decl_stmt|;
name|void
name|setUpServerAndClient
parameter_list|()
throws|throws
name|Exception
block|{
name|closer
operator|=
name|Closer
operator|.
name|create
argument_list|()
expr_stmt|;
name|File
name|primaryDirectory
init|=
name|closer
operator|.
name|register
argument_list|(
operator|new
name|TemporaryFolder
argument_list|(
literal|"primary-"
argument_list|)
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|ScheduledExecutorService
name|primaryExecutor
init|=
name|closer
operator|.
name|register
argument_list|(
operator|new
name|TemporaryExecutor
argument_list|()
argument_list|)
operator|.
name|toScheduledExecutorService
argument_list|()
decl_stmt|;
name|primaryStore
operator|=
name|closer
operator|.
name|register
argument_list|(
name|newFileStore
argument_list|(
name|primaryDirectory
argument_list|,
name|primaryExecutor
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|standbyDirectory
init|=
name|closer
operator|.
name|register
argument_list|(
operator|new
name|TemporaryFolder
argument_list|(
literal|"standby-"
argument_list|)
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|ScheduledExecutorService
name|standbyExecutor
init|=
name|closer
operator|.
name|register
argument_list|(
operator|new
name|TemporaryExecutor
argument_list|()
argument_list|)
operator|.
name|toScheduledExecutorService
argument_list|()
decl_stmt|;
name|standbyStore
operator|=
name|closer
operator|.
name|register
argument_list|(
name|newFileStore
argument_list|(
name|standbyDirectory
argument_list|,
name|standbyExecutor
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|void
name|closeServerAndClient
parameter_list|()
block|{
try|try
block|{
name|closer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|(
name|System
operator|.
name|err
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

