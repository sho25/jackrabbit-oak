begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
operator|.
name|cli
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Closer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"UnusedLabel"
argument_list|)
specifier|public
class|class
name|LoopbackBlobStoreFactoryTest
block|{
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|cannotCreateLoopbackBlobStoreFactoryWithNullCloser
parameter_list|()
block|{
name|when
label|:
block|{
specifier|final
name|LoopbackBlobStoreFactory
name|factory
init|=
operator|new
name|LoopbackBlobStoreFactory
argument_list|()
decl_stmt|;
name|factory
operator|.
name|create
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|canCreateLoopbackBlobStoreFactory
parameter_list|()
throws|throws
name|IOException
block|{
name|when
label|:
block|{
specifier|final
name|LoopbackBlobStoreFactory
name|factory
init|=
operator|new
name|LoopbackBlobStoreFactory
argument_list|()
decl_stmt|;
specifier|final
name|Closer
name|closer
init|=
name|Closer
operator|.
name|create
argument_list|()
decl_stmt|;
specifier|final
name|BlobStore
name|blobStore
init|=
name|factory
operator|.
name|create
argument_list|(
name|closer
argument_list|)
decl_stmt|;
name|then
label|:
block|{
name|assertNotNull
argument_list|(
name|blobStore
argument_list|)
expr_stmt|;
block|}
name|and
label|:
block|{
name|closer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|canGetNameFromLoopbackBlobStoreFactory
parameter_list|()
block|{
name|when
label|:
block|{
specifier|final
name|LoopbackBlobStoreFactory
name|factory
init|=
operator|new
name|LoopbackBlobStoreFactory
argument_list|()
decl_stmt|;
name|then
label|:
block|{
name|assertEquals
argument_list|(
literal|"LoopbackBlobStore"
argument_list|,
name|factory
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

