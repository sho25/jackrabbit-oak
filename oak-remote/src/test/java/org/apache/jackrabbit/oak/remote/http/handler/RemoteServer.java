begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|RemoteServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHolder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_class
specifier|public
class|class
name|RemoteServer
block|{
specifier|private
specifier|final
name|Server
name|server
decl_stmt|;
specifier|public
name|RemoteServer
parameter_list|(
name|RemoteRepository
name|repository
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
name|this
operator|.
name|server
operator|=
name|createServer
argument_list|(
name|repository
argument_list|,
operator|new
name|InetSocketAddress
argument_list|(
name|host
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Server
name|createServer
parameter_list|(
name|RemoteRepository
name|repository
parameter_list|,
name|InetSocketAddress
name|address
parameter_list|)
block|{
name|Server
name|server
init|=
operator|new
name|Server
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|createHandler
argument_list|(
name|repository
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|server
return|;
block|}
specifier|private
name|Handler
name|createHandler
parameter_list|(
name|RemoteRepository
name|repository
parameter_list|)
block|{
name|ServletHandler
name|handler
init|=
operator|new
name|ServletHandler
argument_list|()
decl_stmt|;
name|handler
operator|.
name|addServletWithMapping
argument_list|(
operator|new
name|ServletHolder
argument_list|(
operator|new
name|RemoteServlet
argument_list|(
name|repository
argument_list|)
argument_list|)
argument_list|,
literal|"/*"
argument_list|)
expr_stmt|;
return|return
name|handler
return|;
block|}
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|join
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

