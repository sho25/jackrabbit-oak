begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|version
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|AccessDeniedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|NodeIterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|ReferentialIntegrityException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|UnsupportedRepositoryOperationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|LabelExistsVersionException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|VersionException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|VersionHistory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|VersionIterator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|iterator
operator|.
name|FrozenNodeIteratorAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|iterator
operator|.
name|VersionIteratorAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|NodeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|delegate
operator|.
name|VersionDelegate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|delegate
operator|.
name|VersionHistoryDelegate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|operation
operator|.
name|SessionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|util
operator|.
name|TODO
import|;
end_import

begin_comment
comment|/**  * {@code VersionHistoryImpl}...  */
end_comment

begin_class
specifier|public
class|class
name|VersionHistoryImpl
extends|extends
name|NodeImpl
argument_list|<
name|VersionHistoryDelegate
argument_list|>
implements|implements
name|VersionHistory
block|{
specifier|public
name|VersionHistoryImpl
parameter_list|(
name|VersionHistoryDelegate
name|dlg
parameter_list|,
name|SessionContext
name|sessionContext
parameter_list|)
block|{
name|super
argument_list|(
name|dlg
argument_list|,
name|sessionContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getVersionableUUID
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|getVersionableIdentifier
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getVersionableIdentifier
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|dlg
operator|.
name|getVersionableIdentifier
argument_list|()
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Version
name|getRootVersion
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|Version
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Version
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|new
name|VersionImpl
argument_list|(
name|dlg
operator|.
name|getRootVersion
argument_list|()
argument_list|,
name|sessionContext
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|VersionIterator
name|getAllLinearVersions
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|VersionIterator
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|VersionIterator
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|new
name|VersionIteratorAdapter
argument_list|(
name|Iterators
operator|.
name|transform
argument_list|(
name|dlg
operator|.
name|getAllLinearVersions
argument_list|()
argument_list|,
operator|new
name|Function
argument_list|<
name|VersionDelegate
argument_list|,
name|Version
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Version
name|apply
parameter_list|(
name|VersionDelegate
name|input
parameter_list|)
block|{
return|return
operator|new
name|VersionImpl
argument_list|(
name|input
argument_list|,
name|sessionContext
argument_list|)
return|;
block|}
block|}
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|VersionIterator
name|getAllVersions
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|VersionIterator
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|VersionIterator
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|new
name|VersionIteratorAdapter
argument_list|(
name|Iterators
operator|.
name|transform
argument_list|(
name|dlg
operator|.
name|getAllVersions
argument_list|()
argument_list|,
operator|new
name|Function
argument_list|<
name|VersionDelegate
argument_list|,
name|Version
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Version
name|apply
parameter_list|(
name|VersionDelegate
name|input
parameter_list|)
block|{
return|return
operator|new
name|VersionImpl
argument_list|(
name|input
argument_list|,
name|sessionContext
argument_list|)
return|;
block|}
block|}
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|NodeIterator
name|getAllLinearFrozenNodes
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|new
name|FrozenNodeIteratorAdapter
argument_list|(
name|getAllLinearVersions
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|NodeIterator
name|getAllFrozenNodes
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|new
name|FrozenNodeIteratorAdapter
argument_list|(
name|getAllVersions
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Version
name|getVersion
parameter_list|(
specifier|final
name|String
name|versionName
parameter_list|)
throws|throws
name|VersionException
throws|,
name|RepositoryException
block|{
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|Version
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Version
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
operator|new
name|VersionImpl
argument_list|(
name|dlg
operator|.
name|getVersion
argument_list|(
name|versionName
argument_list|)
argument_list|,
name|sessionContext
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Version
name|getVersionByLabel
parameter_list|(
specifier|final
name|String
name|label
parameter_list|)
throws|throws
name|VersionException
throws|,
name|RepositoryException
block|{
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|Version
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Version
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|String
name|oakLabel
init|=
name|sessionContext
operator|.
name|getOakName
argument_list|(
name|label
argument_list|)
decl_stmt|;
return|return
operator|new
name|VersionImpl
argument_list|(
name|dlg
operator|.
name|getVersionByLabel
argument_list|(
name|oakLabel
argument_list|)
argument_list|,
name|sessionContext
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addVersionLabel
parameter_list|(
specifier|final
name|String
name|versionName
parameter_list|,
specifier|final
name|String
name|label
parameter_list|,
specifier|final
name|boolean
name|moveLabel
parameter_list|)
throws|throws
name|LabelExistsVersionException
throws|,
name|VersionException
throws|,
name|RepositoryException
block|{
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|String
name|oakLabel
init|=
name|sessionContext
operator|.
name|getOakName
argument_list|(
name|label
argument_list|)
decl_stmt|;
comment|// will throw VersionException if version does not exist
name|VersionDelegate
name|version
init|=
name|dlg
operator|.
name|getVersion
argument_list|(
name|versionName
argument_list|)
decl_stmt|;
name|dlg
operator|.
name|addVersionLabel
argument_list|(
name|version
argument_list|,
name|oakLabel
argument_list|,
name|moveLabel
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeVersionLabel
parameter_list|(
specifier|final
name|String
name|label
parameter_list|)
throws|throws
name|VersionException
throws|,
name|RepositoryException
block|{
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|String
name|oakLabel
init|=
name|sessionContext
operator|.
name|getOakName
argument_list|(
name|label
argument_list|)
decl_stmt|;
name|dlg
operator|.
name|removeVersionLabel
argument_list|(
name|oakLabel
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasVersionLabel
parameter_list|(
name|String
name|label
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|getVersionLabels
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|label
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasVersionLabel
parameter_list|(
name|Version
name|version
parameter_list|,
name|String
name|label
parameter_list|)
throws|throws
name|VersionException
throws|,
name|RepositoryException
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|getVersionLabels
argument_list|(
name|version
argument_list|)
argument_list|)
operator|.
name|contains
argument_list|(
name|label
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getVersionLabels
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|String
index|[]
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
index|[]
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|labels
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|label
range|:
name|dlg
operator|.
name|getVersionLabels
argument_list|()
control|)
block|{
name|labels
operator|.
name|add
argument_list|(
name|sessionContext
operator|.
name|getJcrName
argument_list|(
name|label
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|labels
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|labels
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getVersionLabels
parameter_list|(
specifier|final
name|Version
name|version
parameter_list|)
throws|throws
name|VersionException
throws|,
name|RepositoryException
block|{
if|if
condition|(
operator|!
name|version
operator|.
name|getContainingHistory
argument_list|()
operator|.
name|getPath
argument_list|()
operator|.
name|equals
argument_list|(
name|getPath
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|VersionException
argument_list|(
literal|"Version is not contained in this "
operator|+
literal|"VersionHistory"
argument_list|)
throw|;
block|}
return|return
name|perform
argument_list|(
operator|new
name|SessionOperation
argument_list|<
name|String
index|[]
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
index|[]
name|perform
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|labels
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|label
range|:
name|dlg
operator|.
name|getVersionLabels
argument_list|(
name|version
operator|.
name|getIdentifier
argument_list|()
argument_list|)
control|)
block|{
name|labels
operator|.
name|add
argument_list|(
name|sessionContext
operator|.
name|getJcrName
argument_list|(
name|label
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|labels
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|labels
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeVersion
parameter_list|(
name|String
name|versionName
parameter_list|)
throws|throws
name|ReferentialIntegrityException
throws|,
name|AccessDeniedException
throws|,
name|UnsupportedRepositoryOperationException
throws|,
name|VersionException
throws|,
name|RepositoryException
block|{
name|TODO
operator|.
name|unimplemented
argument_list|()
operator|.
name|doNothing
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

