begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Closer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|MongoClientURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMK
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
operator|.
name|MongoDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|rdb
operator|.
name|RDBDataSourceFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|rdb
operator|.
name|RDBDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|Whiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|WhiteboardUtils
operator|.
name|getService
import|;
end_import

begin_class
class|class
name|DocumentFixtureProvider
block|{
specifier|static
name|NodeStore
name|configureDocumentMk
parameter_list|(
name|Options
name|options
parameter_list|,
name|BlobStore
name|blobStore
parameter_list|,
name|Whiteboard
name|wb
parameter_list|,
name|Closer
name|closer
parameter_list|,
name|boolean
name|readOnly
parameter_list|)
throws|throws
name|UnknownHostException
block|{
name|DocumentMK
operator|.
name|Builder
name|builder
init|=
operator|new
name|DocumentMK
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|StatisticsProvider
name|statisticsProvider
init|=
name|checkNotNull
argument_list|(
name|getService
argument_list|(
name|wb
argument_list|,
name|StatisticsProvider
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|blobStore
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setBlobStore
argument_list|(
name|blobStore
argument_list|)
expr_stmt|;
block|}
name|DocumentNodeStoreOptions
name|docStoreOpts
init|=
name|options
operator|.
name|getOptionBean
argument_list|(
name|DocumentNodeStoreOptions
operator|.
name|class
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setClusterId
argument_list|(
name|docStoreOpts
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setStatisticsProvider
argument_list|(
name|statisticsProvider
argument_list|)
expr_stmt|;
if|if
condition|(
name|readOnly
condition|)
block|{
name|builder
operator|.
name|setReadOnlyMode
argument_list|()
expr_stmt|;
block|}
name|int
name|cacheSize
init|=
name|docStoreOpts
operator|.
name|getCacheSize
argument_list|()
decl_stmt|;
if|if
condition|(
name|cacheSize
operator|!=
literal|0
condition|)
block|{
name|builder
operator|.
name|memoryCacheSize
argument_list|(
name|cacheSize
operator|*
name|FileUtils
operator|.
name|ONE_MB
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|docStoreOpts
operator|.
name|disableBranchesSpec
argument_list|()
condition|)
block|{
name|builder
operator|.
name|disableBranches
argument_list|()
expr_stmt|;
block|}
name|CommonOptions
name|commonOpts
init|=
name|options
operator|.
name|getOptionBean
argument_list|(
name|CommonOptions
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|docStoreOpts
operator|.
name|isCacheDistributionDefined
argument_list|()
condition|)
block|{
name|builder
operator|.
name|memoryCacheDistribution
argument_list|(
name|docStoreOpts
operator|.
name|getNodeCachePercentage
argument_list|()
argument_list|,
name|docStoreOpts
operator|.
name|getPrevDocCachePercentage
argument_list|()
argument_list|,
name|docStoreOpts
operator|.
name|getChildrenCachePercentage
argument_list|()
argument_list|,
name|docStoreOpts
operator|.
name|getDiffCachePercentage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|DocumentNodeStore
name|dns
decl_stmt|;
if|if
condition|(
name|commonOpts
operator|.
name|isMongo
argument_list|()
condition|)
block|{
name|MongoClientURI
name|uri
init|=
operator|new
name|MongoClientURI
argument_list|(
name|commonOpts
operator|.
name|getStoreArg
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|uri
operator|.
name|getDatabase
argument_list|()
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Database missing in MongoDB URI: "
operator|+
name|uri
operator|.
name|getURI
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
name|MongoConnection
name|mongo
init|=
operator|new
name|MongoConnection
argument_list|(
name|uri
operator|.
name|getURI
argument_list|()
argument_list|)
decl_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|MongoConnection
operator|.
name|class
argument_list|,
name|mongo
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|closer
operator|.
name|register
argument_list|(
name|mongo
operator|::
name|close
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMongoDB
argument_list|(
name|mongo
operator|.
name|getDB
argument_list|()
argument_list|)
expr_stmt|;
name|dns
operator|=
name|builder
operator|.
name|getNodeStore
argument_list|()
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|MongoDocumentStore
operator|.
name|class
argument_list|,
operator|(
name|MongoDocumentStore
operator|)
name|builder
operator|.
name|getDocumentStore
argument_list|()
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|commonOpts
operator|.
name|isRDB
argument_list|()
condition|)
block|{
name|RDBStoreOptions
name|rdbOpts
init|=
name|options
operator|.
name|getOptionBean
argument_list|(
name|RDBStoreOptions
operator|.
name|class
argument_list|)
decl_stmt|;
name|DataSource
name|ds
init|=
name|RDBDataSourceFactory
operator|.
name|forJdbcUrl
argument_list|(
name|commonOpts
operator|.
name|getStoreArg
argument_list|()
argument_list|,
name|rdbOpts
operator|.
name|getUser
argument_list|()
argument_list|,
name|rdbOpts
operator|.
name|getPassword
argument_list|()
argument_list|)
decl_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|DataSource
operator|.
name|class
argument_list|,
name|ds
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRDBConnection
argument_list|(
name|ds
argument_list|)
expr_stmt|;
name|dns
operator|=
name|builder
operator|.
name|getNodeStore
argument_list|()
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|RDBDocumentStore
operator|.
name|class
argument_list|,
operator|(
name|RDBDocumentStore
operator|)
name|builder
operator|.
name|getDocumentStore
argument_list|()
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Unknown DocumentStore"
argument_list|)
throw|;
block|}
name|closer
operator|.
name|register
argument_list|(
name|dns
operator|::
name|dispose
argument_list|)
expr_stmt|;
return|return
name|dns
return|;
block|}
block|}
end_class

end_unit

