begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|RootProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_class
specifier|public
class|class
name|ConfigurationBaseTest
block|{
specifier|private
specifier|final
name|ConfigurationBase
name|base
init|=
operator|new
name|ConfigurationBase
argument_list|()
block|{}
decl_stmt|;
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalStateException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetSecurityProvider
parameter_list|()
block|{
name|base
operator|.
name|getSecurityProvider
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetSecurityProvider
parameter_list|()
block|{
name|SecurityProvider
name|securityProvider
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SecurityProvider
operator|.
name|class
argument_list|)
decl_stmt|;
name|base
operator|.
name|setSecurityProvider
argument_list|(
name|securityProvider
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|securityProvider
argument_list|,
name|base
operator|.
name|getSecurityProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalStateException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetRootProvider
parameter_list|()
block|{
name|base
operator|.
name|getRootProvider
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetRootProvider
parameter_list|()
block|{
name|RootProvider
name|rootProvider
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|RootProvider
operator|.
name|class
argument_list|)
decl_stmt|;
name|base
operator|.
name|setRootProvider
argument_list|(
name|rootProvider
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|rootProvider
argument_list|,
name|base
operator|.
name|getRootProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalStateException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testTreeProvider
parameter_list|()
block|{
name|base
operator|.
name|getTreeProvider
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetTreeProvider
parameter_list|()
block|{
name|TreeProvider
name|treeProvider
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TreeProvider
operator|.
name|class
argument_list|)
decl_stmt|;
name|base
operator|.
name|setTreeProvider
argument_list|(
name|treeProvider
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|treeProvider
argument_list|,
name|base
operator|.
name|getTreeProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetParameters
parameter_list|()
block|{
name|assertSame
argument_list|(
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|,
name|base
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetParameters
parameter_list|()
block|{
name|ConfigurationParameters
name|params
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|base
operator|.
name|setParameters
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|params
argument_list|,
name|base
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNonOsgiConstructor
parameter_list|()
block|{
name|SecurityProvider
name|sp
init|=
operator|new
name|OpenSecurityProvider
argument_list|()
decl_stmt|;
name|ConfigurationParameters
name|config
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
literal|"a"
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|ConfigurationBase
name|base
init|=
operator|new
name|ConfigurationBase
argument_list|(
name|sp
argument_list|,
name|config
argument_list|)
block|{}
decl_stmt|;
name|assertSame
argument_list|(
name|sp
argument_list|,
name|base
operator|.
name|getSecurityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|config
argument_list|,
name|base
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

