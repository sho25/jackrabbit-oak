begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|stats
operator|.
name|BlobStoreStatsMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|stats
operator|.
name|BlobStatsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|HistogramStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|MeterStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatsOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|stats
operator|.
name|TimeSeriesStatsUtil
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|IOUtils
operator|.
name|humanReadableByteCount
import|;
end_import

begin_class
specifier|public
class|class
name|BlobStoreStats
implements|implements
name|BlobStoreStatsMBean
implements|,
name|BlobStatsCollector
block|{
specifier|private
specifier|static
specifier|final
name|String
name|BLOB_UPLOADS
init|=
literal|"BLOB_UPLOADS"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BLOB_DOWNLOADS
init|=
literal|"BLOB_DOWNLOADS"
decl_stmt|;
specifier|private
specifier|final
name|StatisticsProvider
name|statisticsProvider
decl_stmt|;
specifier|private
specifier|final
name|HistogramStats
name|uploadHisto
decl_stmt|;
specifier|private
specifier|final
name|MeterStats
name|uploadSizeMeter
decl_stmt|;
specifier|private
specifier|final
name|MeterStats
name|uploadTimeMeter
decl_stmt|;
specifier|private
specifier|final
name|HistogramStats
name|downloadHisto
decl_stmt|;
specifier|private
specifier|final
name|MeterStats
name|downloadSizeMeter
decl_stmt|;
specifier|private
specifier|final
name|MeterStats
name|downloadTimeMeter
decl_stmt|;
specifier|public
name|BlobStoreStats
parameter_list|(
name|StatisticsProvider
name|sp
parameter_list|)
block|{
name|this
operator|.
name|statisticsProvider
operator|=
name|sp
expr_stmt|;
name|this
operator|.
name|uploadHisto
operator|=
name|sp
operator|.
name|getHistogram
argument_list|(
name|BLOB_UPLOADS
argument_list|,
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
comment|//TODO Need to expose an API in StatisticsProvider to register for avg
comment|//That would give us upload and download *rate*
name|this
operator|.
name|uploadSizeMeter
operator|=
name|sp
operator|.
name|getMeter
argument_list|(
literal|"BLOB_UPLOAD_SIZE"
argument_list|,
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
name|this
operator|.
name|uploadTimeMeter
operator|=
name|sp
operator|.
name|getMeter
argument_list|(
literal|"BLOB_UPLOAD_TIME"
argument_list|,
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
name|this
operator|.
name|downloadHisto
operator|=
name|sp
operator|.
name|getHistogram
argument_list|(
name|BLOB_DOWNLOADS
argument_list|,
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
name|this
operator|.
name|downloadSizeMeter
operator|=
name|sp
operator|.
name|getMeter
argument_list|(
literal|"BLOB_DOWNLOAD_SIZE"
argument_list|,
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
name|this
operator|.
name|downloadTimeMeter
operator|=
name|sp
operator|.
name|getMeter
argument_list|(
literal|"BLOB_DOWNLOAD_TIME"
argument_list|,
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uploaded
parameter_list|(
name|long
name|timeTaken
parameter_list|,
name|TimeUnit
name|unit
parameter_list|,
name|long
name|size
parameter_list|)
block|{
name|uploadHisto
operator|.
name|update
argument_list|(
name|size
argument_list|)
expr_stmt|;
comment|//Recording upload like this is not accurate. A more accurate way
comment|//would be to mark as upload or download is progressing.
comment|//That would however add quite a bit of overhead
comment|//Approach below would record an upload/download at moment when
comment|//it got completed. So acts like a rough approximation
name|uploadSizeMeter
operator|.
name|mark
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|uploadTimeMeter
operator|.
name|mark
argument_list|(
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|convert
argument_list|(
name|timeTaken
argument_list|,
name|unit
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|downloaded
parameter_list|(
name|String
name|blobId
parameter_list|,
name|long
name|timeTaken
parameter_list|,
name|TimeUnit
name|unit
parameter_list|,
name|long
name|size
parameter_list|)
block|{
name|downloadHisto
operator|.
name|update
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|downloadSizeMeter
operator|.
name|mark
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|downloadTimeMeter
operator|.
name|mark
argument_list|(
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|convert
argument_list|(
name|timeTaken
argument_list|,
name|unit
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//~--------------------------------------< BlobStoreMBean>
annotation|@
name|Override
specifier|public
name|long
name|getUploadTotalSize
parameter_list|()
block|{
return|return
name|uploadSizeMeter
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getUploadCount
parameter_list|()
block|{
return|return
name|uploadHisto
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getUploadTotalSeconds
parameter_list|()
block|{
return|return
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toSeconds
argument_list|(
name|uploadTimeMeter
operator|.
name|getCount
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getDownloadTotalSize
parameter_list|()
block|{
return|return
name|downloadSizeMeter
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getDownloadCount
parameter_list|()
block|{
return|return
name|downloadHisto
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getDownloadTotalSeconds
parameter_list|()
block|{
return|return
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toSeconds
argument_list|(
name|downloadTimeMeter
operator|.
name|getCount
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|blobStoreInfoAsString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"Uploads - size = %s, count = %d%nDownloads - size = %s, count = %d"
argument_list|,
name|humanReadableByteCount
argument_list|(
name|getUploadTotalSize
argument_list|()
argument_list|)
argument_list|,
name|getUploadCount
argument_list|()
argument_list|,
name|humanReadableByteCount
argument_list|(
name|getDownloadTotalSize
argument_list|()
argument_list|)
argument_list|,
name|getDownloadCount
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CompositeData
name|getUploadSizeHistory
parameter_list|()
block|{
return|return
name|getTimeSeries
argument_list|(
name|BLOB_UPLOADS
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CompositeData
name|getDownloadSizeHistory
parameter_list|()
block|{
return|return
name|getTimeSeries
argument_list|(
name|BLOB_DOWNLOADS
argument_list|)
return|;
block|}
specifier|private
name|CompositeData
name|getTimeSeries
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|TimeSeriesStatsUtil
operator|.
name|asCompositeData
argument_list|(
name|statisticsProvider
operator|.
name|getStats
argument_list|()
operator|.
name|getTimeSeries
argument_list|(
name|name
argument_list|,
literal|true
argument_list|)
argument_list|,
name|name
argument_list|)
return|;
block|}
block|}
end_class

end_unit

