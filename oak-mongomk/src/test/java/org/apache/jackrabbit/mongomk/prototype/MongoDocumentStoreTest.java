begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|prototype
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|AbstractMongoConnectionTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|prototype
operator|.
name|DocumentStore
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|MongoDocumentStoreTest
extends|extends
name|AbstractMongoConnectionTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|addGetAndRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentStore
name|docStore
init|=
operator|new
name|MongoDocumentStore
argument_list|(
name|mongoConnection
operator|.
name|getDB
argument_list|()
argument_list|)
decl_stmt|;
name|UpdateOp
name|updateOp
init|=
operator|new
name|UpdateOp
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|updateOp
operator|.
name|addMapEntry
argument_list|(
literal|"property1"
argument_list|,
literal|"key1"
argument_list|,
literal|"value1"
argument_list|)
expr_stmt|;
name|updateOp
operator|.
name|increment
argument_list|(
literal|"property2"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|updateOp
operator|.
name|set
argument_list|(
literal|"property3"
argument_list|,
literal|"value3"
argument_list|)
expr_stmt|;
name|docStore
operator|.
name|createOrUpdate
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
name|updateOp
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|obj
init|=
name|docStore
operator|.
name|find
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|Map
name|property1
init|=
operator|(
name|Map
operator|)
name|obj
operator|.
name|get
argument_list|(
literal|"property1"
argument_list|)
decl_stmt|;
name|String
name|value1
init|=
operator|(
name|String
operator|)
name|property1
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|value1
argument_list|)
expr_stmt|;
name|Long
name|value2
init|=
operator|(
name|Long
operator|)
name|obj
operator|.
name|get
argument_list|(
literal|"property2"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|,
name|value2
argument_list|)
expr_stmt|;
name|String
name|value3
init|=
operator|(
name|String
operator|)
name|obj
operator|.
name|get
argument_list|(
literal|"property3"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"value3"
argument_list|,
name|value3
argument_list|)
expr_stmt|;
name|docStore
operator|.
name|remove
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|obj
operator|=
name|docStore
operator|.
name|find
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|obj
operator|==
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

