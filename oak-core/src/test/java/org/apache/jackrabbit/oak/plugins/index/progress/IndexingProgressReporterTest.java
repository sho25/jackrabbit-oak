begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|progress
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexUpdateCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|NodeTraversalCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasItems
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|IndexingProgressReporterTest
block|{
specifier|private
name|IndexingProgressReporter
name|reporter
init|=
operator|new
name|IndexingProgressReporter
argument_list|(
name|IndexUpdateCallback
operator|.
name|NOOP
argument_list|,
name|NodeTraversalCallback
operator|.
name|NOOP
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|basicTest
parameter_list|()
throws|throws
name|Exception
block|{
name|reporter
operator|.
name|registerIndex
argument_list|(
literal|"foo"
argument_list|,
literal|false
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|reporter
operator|.
name|isReindexingPerformed
argument_list|()
argument_list|)
expr_stmt|;
name|reporter
operator|.
name|registerIndex
argument_list|(
literal|"bar"
argument_list|,
literal|true
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|reporter
operator|.
name|isReindexingPerformed
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reporter
operator|.
name|getUpdatedIndexPaths
argument_list|()
argument_list|,
name|hasItems
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reporter
operator|.
name|getReindexedIndexPaths
argument_list|()
argument_list|,
name|hasItems
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|reporter
operator|.
name|somethingIndexed
argument_list|()
argument_list|)
expr_stmt|;
name|reporter
operator|.
name|indexUpdate
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|reporter
operator|.
name|somethingIndexed
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

