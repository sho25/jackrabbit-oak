begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|CheckForNull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Testing user import with default {@link org.apache.jackrabbit.oak.spi.xml.ImportBehavior}  * and pw-expiry content  *  * @see OAK-1922  */
end_comment

begin_class
specifier|public
class|class
name|UserImportPwExpiryTest
extends|extends
name|AbstractImportTest
block|{
annotation|@
name|Override
specifier|protected
name|String
name|getTargetPath
parameter_list|()
block|{
return|return
name|USERPATH
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getImportBehavior
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|CheckForNull
specifier|protected
name|ConfigurationParameters
name|getConfigurationParameters
parameter_list|()
block|{
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|userParams
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
block|{
block|{
name|put
argument_list|(
name|UserConstants
operator|.
name|PARAM_PASSWORD_MAX_AGE
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
return|return
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|UserConfiguration
operator|.
name|NAME
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|userParams
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * @since Oak 1.1      */
annotation|@
name|Test
specifier|public
name|void
name|testImportUserCreatesPasswordLastModified
parameter_list|()
throws|throws
name|Exception
block|{
comment|// import user
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\"x\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">"
operator|+
literal|"<sv:value>rep:User</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\">"
operator|+
literal|"<sv:value>9dd4e461-268c-3034-b5c8-564e155c67a6</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\">"
operator|+
literal|"<sv:value>pw</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\">"
operator|+
literal|"<sv:value>xPrincipal</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|UserConstants
operator|.
name|REP_PWD
operator|+
literal|"\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">"
operator|+
literal|"<sv:value>"
operator|+
name|UserConstants
operator|.
name|NT_REP_PASSWORD
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|USERPATH
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|Authorizable
name|authorizable
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
literal|"x"
argument_list|)
decl_stmt|;
name|Node
name|userNode
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|userNode
operator|.
name|hasNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|pwdNode
init|=
name|userNode
operator|.
name|getNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|pwdNode
operator|.
name|getDefinition
argument_list|()
operator|.
name|isProtected
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pwdNode
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_PASSWORD_LAST_MODIFIED
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pwdNode
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_PASSWORD_LAST_MODIFIED
argument_list|)
operator|.
name|getDefinition
argument_list|()
operator|.
name|isProtected
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * @since Oak 1.1      */
annotation|@
name|Test
specifier|public
name|void
name|testImportUserWithPwdProperties
parameter_list|()
throws|throws
name|Exception
block|{
comment|// import user
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\"y\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">"
operator|+
literal|"<sv:value>rep:User</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\">"
operator|+
literal|"<sv:value>41529076-9594-360e-ae48-5922904f345d</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\">"
operator|+
literal|"<sv:value>pw</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\">"
operator|+
literal|"<sv:value>yPrincipal</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|UserConstants
operator|.
name|REP_PWD
operator|+
literal|"\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">"
operator|+
literal|"<sv:value>"
operator|+
name|UserConstants
operator|.
name|NT_REP_PASSWORD
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\""
operator|+
name|UserConstants
operator|.
name|REP_PASSWORD_LAST_MODIFIED
operator|+
literal|"\" sv:type=\"Long\">"
operator|+
literal|"<sv:value>1404036716000</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"customProp\" sv:type=\"String\">"
operator|+
literal|"<sv:value>abc</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|USERPATH
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|Authorizable
name|authorizable
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
literal|"y"
argument_list|)
decl_stmt|;
name|Node
name|userNode
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|userNode
operator|.
name|hasNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|pwdNode
init|=
name|userNode
operator|.
name|getNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|pwdNode
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_PASSWORD_LAST_MODIFIED
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1404036716000L
argument_list|,
name|pwdNode
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_PASSWORD_LAST_MODIFIED
argument_list|)
operator|.
name|getLong
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pwdNode
operator|.
name|hasProperty
argument_list|(
literal|"customProp"
argument_list|)
argument_list|)
expr_stmt|;
name|Property
name|custom
init|=
name|pwdNode
operator|.
name|getProperty
argument_list|(
literal|"customProp"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|custom
operator|.
name|getDefinition
argument_list|()
operator|.
name|isProtected
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abc"
argument_list|,
name|custom
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * @since Oak 1.1      */
annotation|@
name|Test
specifier|public
name|void
name|testImportExistingUserWithoutExpiryProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|uid
init|=
literal|"existing"
decl_stmt|;
name|User
name|user
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
name|uid
argument_list|)
decl_stmt|;
comment|// change password to force existence of password last modified property
name|user
operator|.
name|changePassword
argument_list|(
name|uid
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|Node
name|userNode
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|user
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|userNode
operator|.
name|hasNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|pwdNode
init|=
name|userNode
operator|.
name|getNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|pwdNode
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_PASSWORD_LAST_MODIFIED
argument_list|)
argument_list|)
expr_stmt|;
comment|// overwrite user via import
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|uid
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">"
operator|+
literal|"<sv:value>rep:User</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\">"
operator|+
literal|"<sv:value>"
operator|+
name|uid
operator|+
literal|"</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\">"
operator|+
literal|"<sv:value>"
operator|+
name|uid
operator|+
literal|"Principal</sv:value>"
operator|+
literal|"</sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|USERPATH
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|Authorizable
name|authorizable
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
name|userNode
operator|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|userNode
operator|.
name|hasNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
argument_list|)
expr_stmt|;
name|pwdNode
operator|=
name|userNode
operator|.
name|getNode
argument_list|(
name|UserConstants
operator|.
name|REP_PWD
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pwdNode
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_PASSWORD_LAST_MODIFIED
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

