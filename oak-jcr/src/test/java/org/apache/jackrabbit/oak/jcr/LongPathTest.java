begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|ConstraintViolationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|NodeStoreFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|LongPathTest
extends|extends
name|AbstractRepositoryTest
block|{
specifier|public
name|LongPathTest
parameter_list|(
name|NodeStoreFixture
name|fixture
parameter_list|)
block|{
name|super
argument_list|(
name|fixture
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLongPath
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|StringBuilder
name|buff
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|buff
operator|.
name|append
argument_list|(
literal|"0123456789"
argument_list|)
expr_stmt|;
block|}
name|String
name|longName
init|=
literal|"n"
operator|+
name|buff
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Node
name|n
init|=
name|s
operator|.
name|getRootNode
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|paths
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|30
condition|;
name|i
operator|++
control|)
block|{
name|n
operator|=
name|n
operator|.
name|addNode
argument_list|(
name|longName
operator|+
literal|"_"
operator|+
name|i
argument_list|)
expr_stmt|;
name|paths
operator|.
name|add
argument_list|(
name|n
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
name|Session
name|s2
init|=
name|createAdminSession
argument_list|()
decl_stmt|;
name|Node
name|n2
init|=
name|s2
operator|.
name|getRootNode
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|30
condition|;
name|i
operator|++
control|)
block|{
name|n2
operator|=
name|n2
operator|.
name|getNode
argument_list|(
name|longName
operator|+
literal|"_"
operator|+
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|paths
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|n2
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|s2
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"OAK-1629"
argument_list|)
specifier|public
name|void
name|testLongName
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Session
name|s
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|StringBuilder
name|buff
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|buff
operator|.
name|append
argument_list|(
literal|"0123456789"
argument_list|)
expr_stmt|;
block|}
name|String
name|longName
init|=
literal|"n"
operator|+
name|buff
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Node
name|n
init|=
name|s
operator|.
name|getRootNode
argument_list|()
operator|.
name|addNode
argument_list|(
name|longName
argument_list|)
decl_stmt|;
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
name|Session
name|s2
init|=
name|createAdminSession
argument_list|()
decl_stmt|;
name|Node
name|n2
init|=
name|s2
operator|.
name|getRootNode
argument_list|()
operator|.
name|getNode
argument_list|(
name|longName
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|n
operator|.
name|getPath
argument_list|()
argument_list|,
name|n2
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|s2
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConstraintViolationException
name|ex
parameter_list|)
block|{
comment|// acceptable
block|}
block|}
block|}
end_class

end_unit

