begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|GuestCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|TokenCredentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * TokenProviderImplTest...  */
end_comment

begin_class
specifier|public
class|class
name|TokenProviderImplTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
name|TokenProviderImpl
name|tokenProvider
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|tokenProvider
operator|=
operator|new
name|TokenProviderImpl
argument_list|(
name|admin
operator|.
name|getLatestRoot
argument_list|()
argument_list|,
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|,
name|securityProvider
operator|.
name|getUserConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDoCreateToken
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
operator|new
name|GuestCredentials
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
operator|new
name|TokenCredentials
argument_list|(
literal|"token"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|SimpleCredentials
name|sc
init|=
operator|new
name|SimpleCredentials
argument_list|(
literal|"uid"
argument_list|,
literal|"pw"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
name|sc
operator|.
name|setAttribute
argument_list|(
literal|"any_attribute"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
name|sc
operator|.
name|setAttribute
argument_list|(
literal|".token_key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
name|sc
operator|.
name|setAttribute
argument_list|(
literal|".token"
argument_list|,
literal|"existing"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
name|sc
operator|.
name|setAttribute
argument_list|(
literal|".token"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tokenProvider
operator|.
name|doCreateToken
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateTokenFromCredentials
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateTokenFromUserId
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetTokenInfo
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoveToken
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
annotation|@
name|Test
specifier|public
name|void
name|testResetTokenExpiration
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
block|}
end_class

end_unit

