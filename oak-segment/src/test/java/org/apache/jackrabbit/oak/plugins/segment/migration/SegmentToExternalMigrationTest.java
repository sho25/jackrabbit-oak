begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|migration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|migration
operator|.
name|AbstractMigratorTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|SegmentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|SegmentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|FileBlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_class
specifier|public
class|class
name|SegmentToExternalMigrationTest
extends|extends
name|AbstractMigratorTest
block|{
specifier|private
name|SegmentStore
name|segmentStore
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|NodeStore
name|createNodeStore
parameter_list|(
name|BlobStore
name|blobStore
parameter_list|,
name|File
name|repository
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|segmentDir
init|=
operator|new
name|File
argument_list|(
name|repository
argument_list|,
literal|"segmentstore"
argument_list|)
decl_stmt|;
name|FileStore
operator|.
name|Builder
name|builder
init|=
name|FileStore
operator|.
name|newFileStore
argument_list|(
name|segmentDir
argument_list|)
decl_stmt|;
if|if
condition|(
name|blobStore
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|withBlobStore
argument_list|(
name|blobStore
argument_list|)
expr_stmt|;
block|}
name|segmentStore
operator|=
name|builder
operator|.
name|create
argument_list|()
expr_stmt|;
return|return
name|SegmentNodeStore
operator|.
name|newSegmentNodeStore
argument_list|(
name|segmentStore
argument_list|)
operator|.
name|create
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|closeNodeStore
parameter_list|()
block|{
name|segmentStore
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|BlobStore
name|createOldBlobStore
parameter_list|(
name|File
name|repository
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|protected
name|BlobStore
name|createNewBlobStore
parameter_list|(
name|File
name|repository
parameter_list|)
block|{
return|return
operator|new
name|FileBlobStore
argument_list|(
name|repository
operator|.
name|getPath
argument_list|()
operator|+
literal|"/new"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

