begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|mongomk
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|MongoClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|MongoClientOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|MongoClientURI
import|;
end_import

begin_comment
comment|/**  * The {@code MongoConnection} abstracts connection to the {@code MongoDB}.  */
end_comment

begin_class
specifier|public
class|class
name|MongoConnection
block|{
specifier|private
specifier|final
name|DB
name|db
decl_stmt|;
specifier|private
specifier|final
name|MongoClient
name|mongo
decl_stmt|;
comment|/**      * Constructs a new connection using the specified MongoDB connection string.      * See also http://docs.mongodb.org/manual/reference/connection-string/      *       * @param uri the MongoDB URI      * @throws UnknownHostException      */
specifier|public
name|MongoConnection
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|UnknownHostException
block|{
name|MongoClientOptions
operator|.
name|Builder
name|builder
init|=
name|MongoConnection
operator|.
name|getDefaultBuilder
argument_list|()
decl_stmt|;
name|MongoClientURI
name|mongoURI
init|=
operator|new
name|MongoClientURI
argument_list|(
name|uri
argument_list|,
name|builder
argument_list|)
decl_stmt|;
name|mongo
operator|=
operator|new
name|MongoClient
argument_list|(
name|mongoURI
argument_list|)
expr_stmt|;
name|db
operator|=
name|mongo
operator|.
name|getDB
argument_list|(
name|mongoURI
operator|.
name|getDatabase
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructs a new {@code MongoConnection}.      *      * @param host The host address.      * @param port The port.      * @param database The database name.      * @throws Exception If an error occurred while trying to connect.      */
specifier|public
name|MongoConnection
parameter_list|(
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|String
name|database
parameter_list|)
throws|throws
name|Exception
block|{
name|this
argument_list|(
literal|"mongodb://"
operator|+
name|host
operator|+
literal|":"
operator|+
name|port
operator|+
literal|"/"
operator|+
name|database
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns the {@link DB}.      *      * @return The {@link DB}.      */
specifier|public
name|DB
name|getDB
parameter_list|()
block|{
return|return
name|db
return|;
block|}
comment|/**      * Closes the underlying Mongo instance      */
specifier|public
name|void
name|close
parameter_list|()
block|{
name|mongo
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|//--------------------------------------< Utility Methods>
comment|/**      * Constructs a builder with default options set. These can be overridden later      *      * @return builder with default options set      */
specifier|public
specifier|static
name|MongoClientOptions
operator|.
name|Builder
name|getDefaultBuilder
parameter_list|()
block|{
return|return
operator|new
name|MongoClientOptions
operator|.
name|Builder
argument_list|()
operator|.
name|description
argument_list|(
literal|"MongoConnection for Oak MongoMK"
argument_list|)
operator|.
name|threadsAllowedToBlockForConnectionMultiplier
argument_list|(
literal|100
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|toString
parameter_list|(
name|MongoClientOptions
name|opts
parameter_list|)
block|{
return|return
name|Objects
operator|.
name|toStringHelper
argument_list|(
name|opts
argument_list|)
operator|.
name|add
argument_list|(
literal|"connectionsPerHost"
argument_list|,
name|opts
operator|.
name|getConnectionsPerHost
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"connectTimeout"
argument_list|,
name|opts
operator|.
name|getConnectTimeout
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"socketTimeout"
argument_list|,
name|opts
operator|.
name|getSocketTimeout
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"socketKeepAlive"
argument_list|,
name|opts
operator|.
name|isSocketKeepAlive
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"autoConnectRetry"
argument_list|,
name|opts
operator|.
name|isAutoConnectRetry
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"maxAutoConnectRetryTime"
argument_list|,
name|opts
operator|.
name|getMaxAutoConnectRetryTime
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"maxWaitTime"
argument_list|,
name|opts
operator|.
name|getMaxWaitTime
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"threadsAllowedToBlockForConnectionMultiplier"
argument_list|,
name|opts
operator|.
name|getThreadsAllowedToBlockForConnectionMultiplier
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"readPreference"
argument_list|,
name|opts
operator|.
name|getReadPreference
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"writeConcern"
argument_list|,
name|opts
operator|.
name|getWriteConcern
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

