begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|exporter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Stopwatch
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
operator|.
name|CommonOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
operator|.
name|NodeStoreFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
operator|.
name|NodeStoreFixtureProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
operator|.
name|Options
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|commons
operator|.
name|Command
import|;
end_import

begin_class
specifier|public
class|class
name|NodeStateExportCommand
implements|implements
name|Command
block|{
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"export"
decl_stmt|;
specifier|private
specifier|final
name|String
name|summary
init|=
literal|"Exports NodeState as json"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
name|String
modifier|...
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Stopwatch
name|w
init|=
name|Stopwatch
operator|.
name|createStarted
argument_list|()
decl_stmt|;
name|OptionParser
name|parser
init|=
operator|new
name|OptionParser
argument_list|()
decl_stmt|;
name|Options
name|opts
init|=
operator|new
name|Options
argument_list|()
decl_stmt|;
name|opts
operator|.
name|setCommandName
argument_list|(
name|NAME
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setSummary
argument_list|(
name|summary
argument_list|)
expr_stmt|;
name|opts
operator|.
name|registerOptionsFactory
argument_list|(
name|ExportOptions
operator|.
name|FACTORY
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setConnectionString
argument_list|(
name|CommonOptions
operator|.
name|DEFAULT_CONNECTION_STRING
argument_list|)
expr_stmt|;
name|opts
operator|.
name|parseAndConfigure
argument_list|(
name|parser
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|ExportOptions
name|eo
init|=
name|opts
operator|.
name|getOptionBean
argument_list|(
name|ExportOptions
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
init|(
name|NodeStoreFixture
name|fixture
init|=
name|NodeStoreFixtureProvider
operator|.
name|create
argument_list|(
name|opts
argument_list|)
init|)
block|{
name|NodeStateSerializer
name|serializer
init|=
operator|new
name|NodeStateSerializer
argument_list|(
name|fixture
operator|.
name|getStore
argument_list|()
operator|.
name|getRoot
argument_list|()
argument_list|)
decl_stmt|;
name|serializer
operator|.
name|setDepth
argument_list|(
name|eo
operator|.
name|getDepth
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setPath
argument_list|(
name|eo
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setFilter
argument_list|(
name|eo
operator|.
name|getFilter
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setFilterFile
argument_list|(
name|eo
operator|.
name|getFilterFile
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setFormat
argument_list|(
name|eo
operator|.
name|getFormat
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setMaxChildNodes
argument_list|(
name|eo
operator|.
name|getMaxChildNodes
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setPrettyPrint
argument_list|(
name|eo
operator|.
name|isPrettyPrint
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setSerializeBlobContent
argument_list|(
name|eo
operator|.
name|includeBlobs
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|dir
init|=
name|eo
operator|.
name|getOutDir
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|serialize
argument_list|(
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|printf
argument_list|(
literal|"Export the nodes under path [%s] to file [%s] in %s%n"
argument_list|,
name|eo
operator|.
name|getPath
argument_list|()
argument_list|,
name|dir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

