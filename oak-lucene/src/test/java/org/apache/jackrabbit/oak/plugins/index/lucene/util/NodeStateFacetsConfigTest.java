begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|FacetsConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|InitialContent
operator|.
name|INITIAL_CONTENT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Tests for {@link NodeStateFacetsConfig}  */
end_comment

begin_class
specifier|public
class|class
name|NodeStateFacetsConfigTest
block|{
specifier|private
name|NodeState
name|root
init|=
name|INITIAL_CONTENT
decl_stmt|;
specifier|private
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testMultivaluedDimConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeStateFacetsConfig
name|nodeStateFacetsConfig
init|=
operator|new
name|NodeStateFacetsConfig
argument_list|(
name|builder
argument_list|)
decl_stmt|;
name|String
name|dimension
init|=
literal|"foo"
decl_stmt|;
name|nodeStateFacetsConfig
operator|.
name|setMultiValued
argument_list|(
name|dimension
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FacetsConfig
operator|.
name|DimConfig
name|dimConfig
init|=
name|nodeStateFacetsConfig
operator|.
name|getDimConfig
argument_list|(
name|dimension
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|dimConfig
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|dimConfig
operator|.
name|multiValued
argument_list|)
expr_stmt|;
name|NodeStateFacetsConfig
name|nodeStateFacetsConfig2
init|=
operator|new
name|NodeStateFacetsConfig
argument_list|(
name|builder
argument_list|)
decl_stmt|;
name|FacetsConfig
operator|.
name|DimConfig
name|dimConfig2
init|=
name|nodeStateFacetsConfig2
operator|.
name|getDimConfig
argument_list|(
name|dimension
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|dimConfig2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|dimConfig2
operator|.
name|multiValued
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultivaluedRelativeDimConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeStateFacetsConfig
name|nodeStateFacetsConfig
init|=
operator|new
name|NodeStateFacetsConfig
argument_list|(
name|builder
argument_list|)
decl_stmt|;
name|String
name|dimension
init|=
literal|"jcr:content/text"
decl_stmt|;
name|nodeStateFacetsConfig
operator|.
name|setMultiValued
argument_list|(
name|dimension
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FacetsConfig
operator|.
name|DimConfig
name|dimConfig
init|=
name|nodeStateFacetsConfig
operator|.
name|getDimConfig
argument_list|(
name|dimension
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|dimConfig
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|dimConfig
operator|.
name|multiValued
argument_list|)
expr_stmt|;
name|NodeStateFacetsConfig
name|nodeStateFacetsConfig2
init|=
operator|new
name|NodeStateFacetsConfig
argument_list|(
name|builder
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|nodeStateFacetsConfig
operator|.
name|getDimConfig
argument_list|(
name|dimension
argument_list|)
operator|.
name|multiValued
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

