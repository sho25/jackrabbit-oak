begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncoding
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|ByteStreams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteValue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_class
class|class
name|RemoteValues
block|{
specifier|private
name|RemoteValues
parameter_list|()
block|{
comment|// Prevent instantiation
block|}
specifier|public
specifier|static
name|void
name|renderJsonOrNull
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|RemoteValue
name|value
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|generator
operator|.
name|writeNull
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|renderJson
argument_list|(
name|generator
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|renderJson
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|RemoteValue
name|value
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|value
operator|.
name|isBinary
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"binary"
argument_list|,
name|value
operator|.
name|asBinary
argument_list|()
argument_list|,
name|getBinaryWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiBinary
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"binaries"
argument_list|,
name|value
operator|.
name|asMultiBinary
argument_list|()
argument_list|,
name|getBinaryWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isBinaryId
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"binaryId"
argument_list|,
name|value
operator|.
name|asBinaryId
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiBinaryId
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"binaryIds"
argument_list|,
name|value
operator|.
name|asMultiBinaryId
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isBoolean
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"boolean"
argument_list|,
name|value
operator|.
name|asBoolean
argument_list|()
argument_list|,
name|getBooleanWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiBoolean
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"booleans"
argument_list|,
name|value
operator|.
name|asMultiBoolean
argument_list|()
argument_list|,
name|getBooleanWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isDate
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"date"
argument_list|,
name|value
operator|.
name|asDate
argument_list|()
argument_list|,
name|getLongWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiDate
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"dates"
argument_list|,
name|value
operator|.
name|asMultiDate
argument_list|()
argument_list|,
name|getLongWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isDecimal
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"decimal"
argument_list|,
name|value
operator|.
name|asDecimal
argument_list|()
argument_list|,
name|getDecimalWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiDecimal
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"decimals"
argument_list|,
name|value
operator|.
name|asMultiDecimal
argument_list|()
argument_list|,
name|getDecimalWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isDouble
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"double"
argument_list|,
name|value
operator|.
name|asDouble
argument_list|()
argument_list|,
name|getDoubleWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiDouble
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"doubles"
argument_list|,
name|value
operator|.
name|asMultiDouble
argument_list|()
argument_list|,
name|getDoubleWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isLong
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"long"
argument_list|,
name|value
operator|.
name|asLong
argument_list|()
argument_list|,
name|getLongWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiLong
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"longs"
argument_list|,
name|value
operator|.
name|asMultiLong
argument_list|()
argument_list|,
name|getLongWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isName
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"name"
argument_list|,
name|value
operator|.
name|asName
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiName
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"names"
argument_list|,
name|value
operator|.
name|asMultiName
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isPath
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"path"
argument_list|,
name|value
operator|.
name|asPath
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiPath
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"paths"
argument_list|,
name|value
operator|.
name|asMultiPath
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isReference
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"reference"
argument_list|,
name|value
operator|.
name|asReference
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiReference
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"references"
argument_list|,
name|value
operator|.
name|asMultiReference
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isText
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"string"
argument_list|,
name|value
operator|.
name|asText
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiText
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"strings"
argument_list|,
name|value
operator|.
name|asMultiText
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isUri
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"uri"
argument_list|,
name|value
operator|.
name|asUri
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiUri
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"uris"
argument_list|,
name|value
operator|.
name|asMultiUri
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isWeakReference
argument_list|()
condition|)
block|{
name|renderValue
argument_list|(
name|generator
argument_list|,
literal|"weakReference"
argument_list|,
name|value
operator|.
name|asWeakReference
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|isMultiWeakReference
argument_list|()
condition|)
block|{
name|renderMultiValue
argument_list|(
name|generator
argument_list|,
literal|"weakReferences"
argument_list|,
name|value
operator|.
name|asMultiWeakReference
argument_list|()
argument_list|,
name|getStringWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|GeneratorWriter
argument_list|<
name|RemoteValue
operator|.
name|Supplier
argument_list|<
name|InputStream
argument_list|>
argument_list|>
name|getBinaryWriter
parameter_list|()
block|{
return|return
operator|new
name|GeneratorWriter
argument_list|<
name|RemoteValue
operator|.
name|Supplier
argument_list|<
name|InputStream
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|RemoteValue
operator|.
name|Supplier
argument_list|<
name|InputStream
argument_list|>
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeString
argument_list|(
name|BaseEncoding
operator|.
name|base64
argument_list|()
operator|.
name|encode
argument_list|(
name|ByteStreams
operator|.
name|toByteArray
argument_list|(
name|value
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
name|GeneratorWriter
argument_list|<
name|String
argument_list|>
name|getStringWriter
parameter_list|()
block|{
return|return
operator|new
name|GeneratorWriter
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeString
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
name|GeneratorWriter
argument_list|<
name|Boolean
argument_list|>
name|getBooleanWriter
parameter_list|()
block|{
return|return
operator|new
name|GeneratorWriter
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|Boolean
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeBoolean
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
name|GeneratorWriter
argument_list|<
name|Long
argument_list|>
name|getLongWriter
parameter_list|()
block|{
return|return
operator|new
name|GeneratorWriter
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|Long
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumber
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
name|GeneratorWriter
argument_list|<
name|BigDecimal
argument_list|>
name|getDecimalWriter
parameter_list|()
block|{
return|return
operator|new
name|GeneratorWriter
argument_list|<
name|BigDecimal
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|BigDecimal
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeString
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
name|GeneratorWriter
argument_list|<
name|Double
argument_list|>
name|getDoubleWriter
parameter_list|()
block|{
return|return
operator|new
name|GeneratorWriter
argument_list|<
name|Double
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|Double
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeNumber
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
parameter_list|<
name|T
parameter_list|>
name|void
name|renderValue
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|String
name|type
parameter_list|,
name|T
name|value
parameter_list|,
name|GeneratorWriter
argument_list|<
name|T
argument_list|>
name|writer
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
name|generator
operator|.
name|writeStringField
argument_list|(
literal|"type"
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeFieldName
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|generator
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
parameter_list|<
name|T
parameter_list|>
name|void
name|renderMultiValue
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|String
name|type
parameter_list|,
name|Iterable
argument_list|<
name|T
argument_list|>
name|values
parameter_list|,
name|GeneratorWriter
argument_list|<
name|T
argument_list|>
name|writer
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
name|generator
operator|.
name|writeStringField
argument_list|(
literal|"type"
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeArrayFieldStart
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
for|for
control|(
name|T
name|value
range|:
name|values
control|)
block|{
name|writer
operator|.
name|write
argument_list|(
name|generator
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
name|generator
operator|.
name|writeEndArray
argument_list|()
expr_stmt|;
name|generator
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
specifier|private
interface|interface
name|GeneratorWriter
parameter_list|<
name|T
parameter_list|>
block|{
name|void
name|write
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|T
name|value
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
block|}
end_class

end_unit

