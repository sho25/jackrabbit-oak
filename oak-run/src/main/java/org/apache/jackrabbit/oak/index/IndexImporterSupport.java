begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|CompositeIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|importer
operator|.
name|AsyncIndexerLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|importer
operator|.
name|ClusterNodeStoreLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|importer
operator|.
name|IndexImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
operator|.
name|LuceneIndexImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|Clusterable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonList
import|;
end_import

begin_class
class|class
name|IndexImporterSupport
block|{
specifier|private
specifier|final
name|IndexHelper
name|indexHelper
decl_stmt|;
specifier|private
specifier|final
name|NodeStore
name|nodeStore
decl_stmt|;
specifier|public
name|IndexImporterSupport
parameter_list|(
name|IndexHelper
name|indexHelper
parameter_list|)
block|{
name|this
operator|.
name|indexHelper
operator|=
name|indexHelper
expr_stmt|;
name|this
operator|.
name|nodeStore
operator|=
name|indexHelper
operator|.
name|getNodeStore
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|importIndex
parameter_list|(
name|File
name|importDir
parameter_list|)
throws|throws
name|IOException
throws|,
name|CommitFailedException
block|{
name|IndexImporter
name|importer
init|=
operator|new
name|IndexImporter
argument_list|(
name|nodeStore
argument_list|,
name|importDir
argument_list|,
name|createIndexEditorProvider
argument_list|()
argument_list|,
name|createLock
argument_list|()
argument_list|)
decl_stmt|;
name|addImportProviders
argument_list|(
name|importer
argument_list|)
expr_stmt|;
name|importer
operator|.
name|importIndex
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|addImportProviders
parameter_list|(
name|IndexImporter
name|importer
parameter_list|)
block|{
name|importer
operator|.
name|addImporterProvider
argument_list|(
operator|new
name|LuceneIndexImporter
argument_list|(
name|indexHelper
operator|.
name|getGCBlobStore
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|AsyncIndexerLock
name|createLock
parameter_list|()
block|{
if|if
condition|(
name|nodeStore
operator|instanceof
name|Clusterable
condition|)
block|{
return|return
operator|new
name|ClusterNodeStoreLock
argument_list|(
name|nodeStore
argument_list|)
return|;
block|}
comment|//For oak-run usage with non Clusterable NodeStore indicates that NodeStore is not
comment|//active. So we can use a noop lock implementation as there is no concurrent run
return|return
name|AsyncIndexerLock
operator|.
name|NOOP_LOCK
return|;
block|}
specifier|private
name|IndexEditorProvider
name|createIndexEditorProvider
parameter_list|()
throws|throws
name|IOException
block|{
name|IndexEditorProvider
name|lucene
init|=
name|createLuceneEditorProvider
argument_list|()
decl_stmt|;
comment|//Later we can add support for property index and other indexes here
return|return
name|CompositeIndexEditorProvider
operator|.
name|compose
argument_list|(
name|singletonList
argument_list|(
name|lucene
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|IndexEditorProvider
name|createLuceneEditorProvider
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|indexHelper
operator|.
name|getLuceneIndexHelper
argument_list|()
operator|.
name|createEditorProvider
argument_list|()
return|;
block|}
block|}
end_class

end_unit

