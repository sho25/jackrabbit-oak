begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|observation
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStateUtils
operator|.
name|isHidden
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStateDiff
import|;
end_import

begin_class
specifier|public
class|class
name|SecureNodeStateDiff
extends|extends
name|SecurableNodeStateDiff
block|{
specifier|private
name|SecureNodeStateDiff
parameter_list|(
name|RecursingNodeStateDiff
name|diff
parameter_list|)
block|{
name|super
argument_list|(
name|diff
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SecureNodeStateDiff
parameter_list|(
name|SecurableNodeStateDiff
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|NodeStateDiff
name|wrap
parameter_list|(
name|RecursingNodeStateDiff
name|diff
parameter_list|)
block|{
return|return
operator|new
name|SecureNodeStateDiff
argument_list|(
name|diff
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|SecurableNodeStateDiff
name|create
parameter_list|(
name|SecurableNodeStateDiff
name|parent
parameter_list|,
name|String
name|name
parameter_list|,
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|)
block|{
return|return
name|isHidden
argument_list|(
name|name
argument_list|)
condition|?
literal|null
else|:
operator|new
name|SecureNodeStateDiff
argument_list|(
name|parent
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|canRead
parameter_list|(
name|PropertyState
name|before
parameter_list|,
name|PropertyState
name|after
parameter_list|)
block|{
comment|// TODO implement canRead
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|canRead
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|)
block|{
comment|// TODO implement canRead
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|protected
name|NodeState
name|secureBefore
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|nodeState
parameter_list|)
block|{
comment|// TODO implement secureBefore
return|return
name|nodeState
return|;
block|}
annotation|@
name|Override
specifier|protected
name|NodeState
name|secureAfter
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|nodeState
parameter_list|)
block|{
comment|// TODO implement secureAfter
return|return
name|nodeState
return|;
block|}
block|}
end_class

end_unit

