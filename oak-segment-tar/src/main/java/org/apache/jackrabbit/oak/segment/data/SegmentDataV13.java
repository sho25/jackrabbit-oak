begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|data
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_class
class|class
name|SegmentDataV13
extends|extends
name|SegmentDataV12
block|{
specifier|private
specifier|static
specifier|final
name|int
name|FULL_GENERATION_OFFSET
init|=
literal|4
decl_stmt|;
name|SegmentDataV13
parameter_list|(
name|ByteBuffer
name|buffer
parameter_list|)
block|{
name|super
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getFullGeneration
parameter_list|()
block|{
return|return
name|buffer
operator|.
name|getInt
argument_list|(
name|FULL_GENERATION_OFFSET
argument_list|)
operator|&
literal|0x7fffffff
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCompacted
parameter_list|()
block|{
return|return
name|buffer
operator|.
name|getInt
argument_list|(
name|FULL_GENERATION_OFFSET
argument_list|)
operator|<
literal|0
return|;
block|}
block|}
end_class

end_unit

