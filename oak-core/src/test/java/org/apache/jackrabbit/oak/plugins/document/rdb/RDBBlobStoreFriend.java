begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|rdb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|PreparedStatement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|StringUtils
import|;
end_import

begin_class
specifier|public
class|class
name|RDBBlobStoreFriend
block|{
specifier|public
specifier|static
name|void
name|storeBlock
parameter_list|(
name|RDBBlobStore
name|ds
parameter_list|,
name|byte
index|[]
name|digest
parameter_list|,
name|int
name|level
parameter_list|,
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|IOException
block|{
name|ds
operator|.
name|storeBlock
argument_list|(
name|digest
argument_list|,
name|level
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|byte
index|[]
name|readBlockFromBackend
parameter_list|(
name|RDBBlobStore
name|ds
parameter_list|,
name|byte
index|[]
name|digest
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|ds
operator|.
name|readBlockFromBackend
argument_list|(
name|digest
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|killMetaEntry
parameter_list|(
name|RDBBlobStore
name|ds
parameter_list|,
name|byte
index|[]
name|digest
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|id
init|=
name|StringUtils
operator|.
name|convertBytesToHex
argument_list|(
name|digest
argument_list|)
decl_stmt|;
name|Connection
name|con
init|=
name|ds
operator|.
name|ch
operator|.
name|getRWConnection
argument_list|()
decl_stmt|;
name|PreparedStatement
name|prepDelMeta
init|=
literal|null
decl_stmt|;
try|try
block|{
name|prepDelMeta
operator|=
name|con
operator|.
name|prepareStatement
argument_list|(
literal|"delete from "
operator|+
name|ds
operator|.
name|tnMeta
operator|+
literal|" where ID = ?"
argument_list|)
expr_stmt|;
name|prepDelMeta
operator|.
name|setString
argument_list|(
literal|1
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|prepDelMeta
operator|.
name|execute
argument_list|()
expr_stmt|;
name|prepDelMeta
operator|.
name|close
argument_list|()
expr_stmt|;
name|prepDelMeta
operator|=
literal|null
expr_stmt|;
block|}
finally|finally
block|{
name|ds
operator|.
name|ch
operator|.
name|closeStatement
argument_list|(
name|prepDelMeta
argument_list|)
expr_stmt|;
name|con
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ds
operator|.
name|ch
operator|.
name|closeConnection
argument_list|(
name|con
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

