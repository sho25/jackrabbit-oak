begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|core
operator|.
name|MicroKernelImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractOakTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CoreValueFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|core
operator|.
name|ContentRepositoryImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|core
operator|.
name|DefaultConflictHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|ValidatorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|IndexManagerTest
extends|extends
name|AbstractOakTest
block|{
specifier|protected
name|ContentSession
name|session
decl_stmt|;
specifier|private
name|CoreValueFactory
name|vf
decl_stmt|;
specifier|private
specifier|final
name|MicroKernel
name|mk
init|=
operator|new
name|MicroKernelImpl
argument_list|()
decl_stmt|;
specifier|private
name|Root
name|root
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|ContentRepository
name|createRepository
parameter_list|()
block|{
return|return
operator|new
name|ContentRepositoryImpl
argument_list|(
name|mk
argument_list|,
literal|null
argument_list|,
operator|(
name|ValidatorProvider
operator|)
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|session
operator|=
name|createAdminSession
argument_list|()
expr_stmt|;
name|vf
operator|=
name|session
operator|.
name|getCoreValueFactory
argument_list|()
expr_stmt|;
name|root
operator|=
name|session
operator|.
name|getCurrentRoot
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoDef
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup index definitions
name|String
name|indexdef
init|=
literal|"indexdefs"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addChild
argument_list|(
name|indexdef
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|DefaultConflictHandler
operator|.
name|OURS
argument_list|)
expr_stmt|;
name|IndexManager
name|im
init|=
operator|new
name|IndexManagerImpl
argument_list|(
literal|"/test/"
operator|+
name|indexdef
argument_list|,
name|session
argument_list|,
name|mk
argument_list|)
decl_stmt|;
comment|// setup index factory
name|im
operator|.
name|registerIndexFactory
argument_list|(
operator|new
name|TestIndexFactory
argument_list|()
argument_list|)
expr_stmt|;
name|im
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|im
operator|.
name|getIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimpleDef
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup index definitions
name|String
name|indexdef
init|=
literal|"indexdefs"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Tree
name|test
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addChild
argument_list|(
name|indexdef
argument_list|)
decl_stmt|;
name|Tree
name|def
init|=
name|test
operator|.
name|addChild
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|def
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
name|vf
operator|.
name|createValue
argument_list|(
literal|"custom"
argument_list|)
argument_list|)
expr_stmt|;
name|def
operator|.
name|setProperty
argument_list|(
literal|"other"
argument_list|,
name|vf
operator|.
name|createValue
argument_list|(
literal|"other-value"
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|DefaultConflictHandler
operator|.
name|OURS
argument_list|)
expr_stmt|;
name|IndexManager
name|im
init|=
operator|new
name|IndexManagerImpl
argument_list|(
literal|"/test/"
operator|+
name|indexdef
argument_list|,
name|session
argument_list|,
name|mk
argument_list|)
decl_stmt|;
comment|// setup index factory
name|im
operator|.
name|registerIndexFactory
argument_list|(
operator|new
name|TestIndexFactory
argument_list|()
argument_list|)
expr_stmt|;
name|im
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|im
operator|.
name|getIndexes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|IndexDefinition
name|id
init|=
name|im
operator|.
name|getIndexes
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|id
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"custom"
argument_list|,
name|id
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|id
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"other-value"
argument_list|,
name|id
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
literal|"other"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIllegalDef
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup index definitions
name|String
name|indexdef
init|=
literal|"indexdefs"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Tree
name|test
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addChild
argument_list|(
name|indexdef
argument_list|)
decl_stmt|;
name|Tree
name|def1
init|=
name|test
operator|.
name|addChild
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|def1
operator|.
name|setProperty
argument_list|(
literal|"type2"
argument_list|,
name|vf
operator|.
name|createValue
argument_list|(
literal|"custom"
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|DefaultConflictHandler
operator|.
name|OURS
argument_list|)
expr_stmt|;
name|IndexManager
name|im
init|=
operator|new
name|IndexManagerImpl
argument_list|(
literal|"/test/"
operator|+
name|indexdef
argument_list|,
name|session
argument_list|,
name|mk
argument_list|)
decl_stmt|;
comment|// setup index factory
name|im
operator|.
name|registerIndexFactory
argument_list|(
operator|new
name|TestIndexFactory
argument_list|()
argument_list|)
expr_stmt|;
name|im
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|im
operator|.
name|getIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUnknownDef
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup index definitions
name|String
name|indexdef
init|=
literal|"indexdefs"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Tree
name|test
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"test"
argument_list|)
operator|.
name|addChild
argument_list|(
name|indexdef
argument_list|)
decl_stmt|;
name|Tree
name|def1
init|=
name|test
operator|.
name|addChild
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|def1
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
name|vf
operator|.
name|createValue
argument_list|(
literal|"custom"
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|DefaultConflictHandler
operator|.
name|OURS
argument_list|)
expr_stmt|;
name|IndexManager
name|im
init|=
operator|new
name|IndexManagerImpl
argument_list|(
literal|"/test/"
operator|+
name|indexdef
argument_list|,
name|session
argument_list|,
name|mk
argument_list|)
decl_stmt|;
name|im
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|im
operator|.
name|getIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test IndexFactory, not supposed to do anything, its purpose is to just      * register a given index type      *       */
specifier|private
specifier|static
class|class
name|TestIndexFactory
implements|implements
name|IndexFactory
block|{
annotation|@
name|Override
specifier|public
name|Index
name|createIndex
parameter_list|(
name|IndexDefinition
name|indexDefinition
parameter_list|)
block|{
return|return
operator|new
name|TestIndex
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getTypes
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
literal|"custom"
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|MicroKernel
name|mk
parameter_list|)
block|{         }
block|}
specifier|private
specifier|static
class|class
name|TestIndex
implements|implements
name|Index
block|{
annotation|@
name|Override
specifier|public
name|NodeState
name|editCommit
parameter_list|(
name|NodeStore
name|store
parameter_list|,
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|IndexDefinition
name|getDefinition
parameter_list|()
block|{
return|return
operator|new
name|IndexDefinitionImpl
argument_list|(
literal|"test"
argument_list|,
literal|"custom"
argument_list|,
literal|"/test"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{         }
block|}
block|}
end_class

end_unit

