begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|OakSolrConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|OakSolrConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|SolrServerProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|EmbeddedSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_comment
comment|/**  * Default implementation of {@link SolrServerProvider} and {@link OakSolrConfigurationProvider}  * which hides an {@link EmbeddedSolrServer} configured as per passed {@link NodeState}  * properties.  */
end_comment

begin_class
specifier|public
class|class
name|DefaultOakSolrProvider
implements|implements
name|SolrServerProvider
implements|,
name|OakSolrConfigurationProvider
block|{
specifier|private
specifier|final
name|OakSolrNodeStateConfiguration
name|oakSolrConfiguration
decl_stmt|;
specifier|public
name|DefaultOakSolrProvider
parameter_list|(
name|NodeState
name|configurationNodeState
parameter_list|)
block|{
name|this
operator|.
name|oakSolrConfiguration
operator|=
operator|new
name|OakSolrNodeStateConfiguration
argument_list|(
name|configurationNodeState
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SolrServer
name|solrServer
decl_stmt|;
specifier|private
name|SolrServer
name|createSolrServer
parameter_list|()
throws|throws
name|Exception
block|{
name|CoreContainer
name|coreContainer
init|=
operator|new
name|CoreContainer
argument_list|(
name|oakSolrConfiguration
operator|.
name|getSolrHomePath
argument_list|()
argument_list|)
decl_stmt|;
name|coreContainer
operator|.
name|load
argument_list|(
name|oakSolrConfiguration
operator|.
name|getSolrHomePath
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
name|oakSolrConfiguration
operator|.
name|getSolrConfigPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|EmbeddedSolrServer
argument_list|(
name|coreContainer
argument_list|,
name|oakSolrConfiguration
operator|.
name|getCoreName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SolrServer
name|getSolrServer
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|solrServer
operator|==
literal|null
condition|)
block|{
name|solrServer
operator|=
name|createSolrServer
argument_list|()
expr_stmt|;
block|}
return|return
name|solrServer
return|;
block|}
annotation|@
name|Override
specifier|public
name|OakSolrConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|oakSolrConfiguration
return|;
block|}
block|}
end_class

end_unit

