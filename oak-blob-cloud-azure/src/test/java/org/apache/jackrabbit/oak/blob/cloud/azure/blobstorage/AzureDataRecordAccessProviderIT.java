begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|blob
operator|.
name|cloud
operator|.
name|azure
operator|.
name|blobstorage
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|HttpsURLConnection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|directaccess
operator|.
name|AbstractDataRecordAccessProviderIT
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|directaccess
operator|.
name|ConfigurableDataRecordAccessProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|blob
operator|.
name|cloud
operator|.
name|azure
operator|.
name|blobstorage
operator|.
name|AzureDataStoreUtils
operator|.
name|getAzureConfig
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|blob
operator|.
name|cloud
operator|.
name|azure
operator|.
name|blobstorage
operator|.
name|AzureDataStoreUtils
operator|.
name|getAzureDataStore
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|blob
operator|.
name|cloud
operator|.
name|azure
operator|.
name|blobstorage
operator|.
name|AzureDataStoreUtils
operator|.
name|isAzureConfigured
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeTrue
import|;
end_import

begin_comment
comment|/**  * As the test is memory intensive requires -Dtest.opts.memory=-Xmx2G  */
end_comment

begin_class
specifier|public
class|class
name|AzureDataRecordAccessProviderIT
extends|extends
name|AbstractDataRecordAccessProviderIT
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
name|TemporaryFolder
name|homeDir
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|AzureDataStore
name|dataStore
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setupDataStore
parameter_list|()
throws|throws
name|Exception
block|{
name|assumeTrue
argument_list|(
name|isAzureConfigured
argument_list|()
operator|&&
operator|!
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.opts.memory"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|dataStore
operator|=
operator|(
name|AzureDataStore
operator|)
name|getAzureDataStore
argument_list|(
name|getAzureConfig
argument_list|()
argument_list|,
name|homeDir
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|dataStore
operator|.
name|setDirectDownloadURIExpirySeconds
argument_list|(
name|expirySeconds
argument_list|)
expr_stmt|;
name|dataStore
operator|.
name|setDirectUploadURIExpirySeconds
argument_list|(
name|expirySeconds
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|ConfigurableDataRecordAccessProvider
name|getDataStore
parameter_list|()
block|{
return|return
name|dataStore
return|;
block|}
annotation|@
name|Override
specifier|protected
name|DataRecord
name|doGetRecord
parameter_list|(
name|DataStore
name|ds
parameter_list|,
name|DataIdentifier
name|identifier
parameter_list|)
throws|throws
name|DataStoreException
block|{
return|return
name|ds
operator|.
name|getRecord
argument_list|(
name|identifier
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|doDeleteRecord
parameter_list|(
name|DataStore
name|ds
parameter_list|,
name|DataIdentifier
name|identifier
parameter_list|)
throws|throws
name|DataStoreException
block|{
operator|(
operator|(
name|AzureDataStore
operator|)
name|ds
operator|)
operator|.
name|deleteRecord
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|long
name|getProviderMaxPartSize
parameter_list|()
block|{
return|return
name|AzureBlobStoreBackend
operator|.
name|MAX_MULTIPART_UPLOAD_PART_SIZE
return|;
block|}
annotation|@
name|Override
specifier|protected
name|HttpsURLConnection
name|getHttpsConnection
parameter_list|(
name|long
name|length
parameter_list|,
name|URI
name|uri
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|AzureDataStoreUtils
operator|.
name|getHttpsConnection
argument_list|(
name|length
argument_list|,
name|uri
argument_list|)
return|;
block|}
block|}
end_class

end_unit

