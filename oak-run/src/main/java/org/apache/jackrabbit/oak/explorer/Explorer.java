begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|explorer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextArea
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
operator|.
name|LookAndFeelInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_comment
comment|/**  * NodeStore explorer  *   * GUI based on Swing, for now it is tailored to the TarMK  *   */
end_comment

begin_class
specifier|public
class|class
name|Explorer
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
operator|new
name|Explorer
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Explorer
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"usage: explore<path>"
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|final
name|String
name|path
init|=
name|args
index|[
literal|0
index|]
decl_stmt|;
specifier|final
name|FileStore
name|store
init|=
operator|new
name|FileStore
argument_list|(
operator|new
name|File
argument_list|(
name|path
argument_list|)
argument_list|,
literal|256
argument_list|)
decl_stmt|;
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|initLF
argument_list|()
expr_stmt|;
name|createAndShowGUI
argument_list|(
name|path
argument_list|,
name|store
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|initLF
parameter_list|()
block|{
try|try
block|{
for|for
control|(
name|LookAndFeelInfo
name|info
range|:
name|UIManager
operator|.
name|getInstalledLookAndFeels
argument_list|()
control|)
block|{
if|if
condition|(
literal|"Nimbus"
operator|.
name|equals
argument_list|(
name|info
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|UIManager
operator|.
name|setLookAndFeel
argument_list|(
name|info
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// If Nimbus is not available, you can set the GUI to another look
comment|// and feel.
block|}
block|}
specifier|private
name|void
name|createAndShowGUI
parameter_list|(
name|String
name|path
parameter_list|,
name|FileStore
name|store
parameter_list|)
block|{
comment|// Create and set up the window.
name|JFrame
name|frame
init|=
operator|new
name|JFrame
argument_list|(
literal|"Explore "
operator|+
name|path
argument_list|)
decl_stmt|;
name|frame
operator|.
name|setDefaultCloseOperation
argument_list|(
name|JFrame
operator|.
name|EXIT_ON_CLOSE
argument_list|)
expr_stmt|;
name|JPanel
name|content
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|GridBagLayout
argument_list|()
argument_list|)
decl_stmt|;
name|JTextArea
name|log
init|=
operator|new
name|JTextArea
argument_list|(
literal|5
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|log
operator|.
name|setMargin
argument_list|(
operator|new
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|log
operator|.
name|setLineWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|log
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|NodeStoreTree
name|treePanel
init|=
operator|new
name|NodeStoreTree
argument_list|(
name|store
argument_list|,
name|log
argument_list|)
decl_stmt|;
name|GridBagConstraints
name|c
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|1
expr_stmt|;
name|content
operator|.
name|add
argument_list|(
operator|new
name|JScrollPane
argument_list|(
name|treePanel
argument_list|)
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|3
expr_stmt|;
name|content
operator|.
name|add
argument_list|(
operator|new
name|JScrollPane
argument_list|(
name|log
argument_list|)
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|frame
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|frame
operator|.
name|pack
argument_list|()
expr_stmt|;
name|frame
operator|.
name|setSize
argument_list|(
literal|800
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setLocationRelativeTo
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

