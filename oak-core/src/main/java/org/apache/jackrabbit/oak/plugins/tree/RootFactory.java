begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|core
operator|.
name|SystemRoot
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
operator|.
name|QueryEngineSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|CompositeQueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|OpenSecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_comment
comment|/**  * Factory to obtain immutable {@code Root} objects.  *  * @deprecated Use {@link org.apache.jackrabbit.oak.plugins.tree.factories.RootFactory} instead.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|RootFactory
block|{
specifier|private
name|RootFactory
parameter_list|()
block|{}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|Root
name|createReadOnlyRoot
parameter_list|(
annotation|@
name|Nonnull
name|NodeState
name|rootState
parameter_list|)
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|factories
operator|.
name|RootFactory
operator|.
name|createReadOnlyRoot
argument_list|(
name|rootState
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|Root
name|createReadOnlyRoot
parameter_list|(
annotation|@
name|Nonnull
name|Root
name|root
parameter_list|)
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|factories
operator|.
name|RootFactory
operator|.
name|createReadOnlyRoot
argument_list|(
name|root
argument_list|)
return|;
block|}
comment|/**      * @deprecated with Oak 1.7.2 due to the usage of deprecated {@link QueryEngineSettings}      */
annotation|@
name|Nonnull
specifier|public
specifier|static
name|Root
name|createSystemRoot
parameter_list|(
annotation|@
name|Nonnull
name|NodeStore
name|store
parameter_list|,
annotation|@
name|Nullable
name|CommitHook
name|hook
parameter_list|,
annotation|@
name|Nullable
name|String
name|workspaceName
parameter_list|,
annotation|@
name|Nullable
name|SecurityProvider
name|securityProvider
parameter_list|,
annotation|@
name|Nullable
name|QueryEngineSettings
name|queryEngineSettings
parameter_list|,
annotation|@
name|Nullable
name|QueryIndexProvider
name|indexProvider
parameter_list|)
block|{
return|return
name|SystemRoot
operator|.
name|create
argument_list|(
name|store
argument_list|,
operator|(
name|hook
operator|==
literal|null
operator|)
condition|?
name|EmptyHook
operator|.
name|INSTANCE
else|:
name|hook
argument_list|,
operator|(
name|workspaceName
operator|==
literal|null
operator|)
condition|?
name|Oak
operator|.
name|DEFAULT_WORKSPACE_NAME
else|:
name|workspaceName
argument_list|,
operator|(
name|securityProvider
operator|==
literal|null
operator|)
condition|?
operator|new
name|OpenSecurityProvider
argument_list|()
else|:
name|securityProvider
argument_list|,
name|queryEngineSettings
argument_list|,
operator|(
name|indexProvider
operator|==
literal|null
operator|)
condition|?
operator|new
name|CompositeQueryIndexProvider
argument_list|()
else|:
name|indexProvider
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|Root
name|createSystemRoot
parameter_list|(
annotation|@
name|Nonnull
name|NodeStore
name|store
parameter_list|,
annotation|@
name|Nullable
name|CommitHook
name|hook
parameter_list|,
annotation|@
name|Nullable
name|String
name|workspaceName
parameter_list|,
annotation|@
name|Nullable
name|SecurityProvider
name|securityProvider
parameter_list|,
annotation|@
name|Nullable
name|QueryIndexProvider
name|indexProvider
parameter_list|)
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|factories
operator|.
name|RootFactory
operator|.
name|createSystemRoot
argument_list|(
name|store
argument_list|,
name|hook
argument_list|,
name|workspaceName
argument_list|,
name|securityProvider
argument_list|,
name|indexProvider
argument_list|)
return|;
block|}
block|}
end_class

end_unit

