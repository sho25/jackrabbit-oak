begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionParser
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionSet
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionSpec
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_class
specifier|public
class|class
name|BlobStoreOptions
implements|implements
name|OptionsBean
block|{
specifier|public
enum|enum
name|Type
block|{
name|FDS
block|,
name|S3
block|,
name|AZURE
block|,
name|NONE
block|}
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|fdsOption
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|s3Option
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|azureOption
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|fdsPathOption
decl_stmt|;
specifier|private
name|OptionSet
name|options
decl_stmt|;
specifier|public
name|BlobStoreOptions
parameter_list|(
name|OptionParser
name|parser
parameter_list|)
block|{
name|fdsOption
operator|=
name|parser
operator|.
name|acceptsAll
argument_list|(
name|asList
argument_list|(
literal|"fds"
argument_list|)
argument_list|,
literal|"FileDataStore config path"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|fdsPathOption
operator|=
name|parser
operator|.
name|acceptsAll
argument_list|(
name|asList
argument_list|(
literal|"fds-path"
argument_list|)
argument_list|,
literal|"FileDataStore path"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|s3Option
operator|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"s3ds"
argument_list|,
literal|"S3DataStore config path"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|azureOption
operator|=
name|parser
operator|.
name|acceptsAll
argument_list|(
name|asList
argument_list|(
literal|"azureblobds"
argument_list|,
literal|"azureds"
argument_list|)
argument_list|,
literal|"AzureBlobStorageDataStore config path"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|OptionSet
name|options
parameter_list|)
block|{
name|this
operator|.
name|options
operator|=
name|options
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|title
parameter_list|()
block|{
return|return
literal|"BlobStore Options"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
literal|"Options related to configuring a BlobStore. All config options here (except --fds-path) refer to "
operator|+
literal|"path of the config file. The file should be '.config' file confirming to OSGi config admin format "
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|order
parameter_list|()
block|{
return|return
literal|10
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|operationNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptySet
argument_list|()
return|;
block|}
specifier|public
name|String
name|getFDSConfigPath
parameter_list|()
block|{
return|return
name|fdsOption
operator|.
name|value
argument_list|(
name|options
argument_list|)
return|;
block|}
specifier|public
name|String
name|getFDSPath
parameter_list|()
block|{
return|return
name|fdsPathOption
operator|.
name|value
argument_list|(
name|options
argument_list|)
return|;
block|}
specifier|public
name|String
name|getS3ConfigPath
parameter_list|()
block|{
return|return
name|s3Option
operator|.
name|value
argument_list|(
name|options
argument_list|)
return|;
block|}
specifier|public
name|String
name|getAzureConfigPath
parameter_list|()
block|{
return|return
name|azureOption
operator|.
name|value
argument_list|(
name|options
argument_list|)
return|;
block|}
specifier|public
name|Type
name|getBlobStoreType
parameter_list|()
block|{
if|if
condition|(
name|options
operator|.
name|has
argument_list|(
name|fdsOption
argument_list|)
operator|||
name|options
operator|.
name|has
argument_list|(
name|fdsPathOption
argument_list|)
condition|)
block|{
return|return
name|Type
operator|.
name|FDS
return|;
block|}
elseif|else
if|if
condition|(
name|options
operator|.
name|has
argument_list|(
name|s3Option
argument_list|)
condition|)
block|{
return|return
name|Type
operator|.
name|S3
return|;
block|}
elseif|else
if|if
condition|(
name|options
operator|.
name|has
argument_list|(
name|azureOption
argument_list|)
condition|)
block|{
return|return
name|Type
operator|.
name|AZURE
return|;
block|}
return|return
name|Type
operator|.
name|NONE
return|;
block|}
block|}
end_class

end_unit

