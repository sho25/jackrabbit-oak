begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonEncoding
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteCommitException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteRevision
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteValue
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletOutputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
operator|.
name|ResponseUtils
operator|.
name|sendBadRequest
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
operator|.
name|ResponseUtils
operator|.
name|sendGone
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
operator|.
name|ResponseUtils
operator|.
name|sendInternalServerError
import|;
end_import

begin_class
specifier|abstract
class|class
name|PatchRevisionHandler
implements|implements
name|Handler
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PatchRevisionHandler
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|abstract
name|RemoteRevision
name|readRevision
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|RemoteSession
name|session
parameter_list|)
function_decl|;
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
block|{
name|RemoteSession
name|session
init|=
operator|(
name|RemoteSession
operator|)
name|request
operator|.
name|getAttribute
argument_list|(
literal|"session"
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
name|sendInternalServerError
argument_list|(
name|response
argument_list|,
literal|"session not found"
argument_list|)
expr_stmt|;
return|return;
block|}
name|RemoteRevision
name|base
init|=
name|readRevision
argument_list|(
name|request
argument_list|,
name|session
argument_list|)
decl_stmt|;
if|if
condition|(
name|base
operator|==
literal|null
condition|)
block|{
name|sendGone
argument_list|(
name|response
argument_list|,
literal|"revision not found"
argument_list|)
expr_stmt|;
return|return;
block|}
name|RemoteOperation
name|operation
decl_stmt|;
try|try
block|{
name|operation
operator|=
name|parseOperations
argument_list|(
name|session
argument_list|,
operator|new
name|ObjectMapper
argument_list|()
operator|.
name|readTree
argument_list|(
name|request
operator|.
name|getInputStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|operation
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|operation
operator|==
literal|null
condition|)
block|{
name|sendBadRequest
argument_list|(
name|response
argument_list|,
literal|"unable to parse the list of operations"
argument_list|)
expr_stmt|;
return|return;
block|}
name|RemoteRevision
name|revision
decl_stmt|;
try|try
block|{
name|revision
operator|=
name|session
operator|.
name|commit
argument_list|(
name|base
argument_list|,
name|operation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RemoteCommitException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"unable to perform the commit"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|sendBadRequest
argument_list|(
name|response
argument_list|,
literal|"commit failed"
argument_list|)
expr_stmt|;
return|return;
block|}
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_CREATED
argument_list|)
expr_stmt|;
name|response
operator|.
name|setContentType
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|ServletOutputStream
name|stream
init|=
name|response
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|JsonGenerator
name|generator
init|=
operator|new
name|JsonFactory
argument_list|()
operator|.
name|createJsonGenerator
argument_list|(
name|stream
argument_list|,
name|JsonEncoding
operator|.
name|UTF8
argument_list|)
decl_stmt|;
name|renderResponse
argument_list|(
name|generator
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|generator
operator|.
name|flush
argument_list|()
expr_stmt|;
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|renderResponse
parameter_list|(
name|JsonGenerator
name|generator
parameter_list|,
name|RemoteRevision
name|revision
parameter_list|)
throws|throws
name|IOException
block|{
name|generator
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
name|generator
operator|.
name|writeStringField
argument_list|(
literal|"revision"
argument_list|,
name|revision
operator|.
name|asString
argument_list|()
argument_list|)
expr_stmt|;
name|generator
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
specifier|private
name|RemoteOperation
name|parseOperations
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|json
parameter_list|)
block|{
name|List
argument_list|<
name|RemoteOperation
argument_list|>
name|operations
init|=
operator|new
name|ArrayList
argument_list|<
name|RemoteOperation
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JsonNode
name|child
range|:
name|json
control|)
block|{
name|operations
operator|.
name|add
argument_list|(
name|parseOperation
argument_list|(
name|session
argument_list|,
name|child
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|session
operator|.
name|createAggregateOperation
argument_list|(
name|operations
argument_list|)
return|;
block|}
specifier|private
name|RemoteOperation
name|parseOperation
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|json
parameter_list|)
block|{
name|String
name|type
init|=
name|parseStringField
argument_list|(
name|json
argument_list|,
literal|"op"
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"add"
argument_list|)
condition|)
block|{
return|return
name|parseAddOperation
argument_list|(
name|session
argument_list|,
name|json
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"remove"
argument_list|)
condition|)
block|{
return|return
name|parseRemoveOperation
argument_list|(
name|session
argument_list|,
name|json
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"set"
argument_list|)
condition|)
block|{
return|return
name|parseSetOperation
argument_list|(
name|session
argument_list|,
name|json
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"unset"
argument_list|)
condition|)
block|{
return|return
name|parseUnsetOperation
argument_list|(
name|session
argument_list|,
name|json
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"copy"
argument_list|)
condition|)
block|{
return|return
name|parseCopyOperation
argument_list|(
name|session
argument_list|,
name|json
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"move"
argument_list|)
condition|)
block|{
return|return
name|parseMoveOperation
argument_list|(
name|session
argument_list|,
name|json
argument_list|)
return|;
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"invalid operation type"
argument_list|)
throw|;
block|}
specifier|private
name|RemoteOperation
name|parseMoveOperation
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|session
operator|.
name|createMoveOperation
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"from"
argument_list|)
argument_list|,
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"to"
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|RemoteOperation
name|parseCopyOperation
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|session
operator|.
name|createCopyOperation
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"from"
argument_list|)
argument_list|,
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"to"
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|RemoteOperation
name|parseUnsetOperation
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|session
operator|.
name|createUnsetOperation
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"path"
argument_list|)
argument_list|,
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"name"
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|RemoteOperation
name|parseSetOperation
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|session
operator|.
name|createSetOperation
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"path"
argument_list|)
argument_list|,
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"name"
argument_list|)
argument_list|,
name|parseValue
argument_list|(
name|node
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|RemoteOperation
name|parseRemoveOperation
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|session
operator|.
name|createRemoveOperation
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"path"
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|RemoteOperation
name|parseAddOperation
parameter_list|(
name|RemoteSession
name|session
parameter_list|,
name|JsonNode
name|json
parameter_list|)
block|{
return|return
name|session
operator|.
name|createAddOperation
argument_list|(
name|parseStringField
argument_list|(
name|json
argument_list|,
literal|"path"
argument_list|)
argument_list|,
name|parsePropertiesField
argument_list|(
name|json
argument_list|,
literal|"properties"
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
name|parsePropertiesField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
name|parseProperties
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
name|parseProperties
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
name|values
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|JsonNode
argument_list|>
argument_list|>
name|iterator
init|=
name|node
operator|.
name|fields
argument_list|()
decl_stmt|;
while|while
condition|(
name|iterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|JsonNode
argument_list|>
name|entry
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|values
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|parseValue
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
specifier|private
name|RemoteValue
name|parseValue
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|String
name|type
init|=
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"type"
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"string"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toText
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"strings"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiText
argument_list|(
name|parseStringArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"binary"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toBinary
argument_list|(
name|parseBinaryField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"binaries"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiBinary
argument_list|(
name|parseBinaryArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"binaryId"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toBinaryId
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"binaryIds"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiBinaryId
argument_list|(
name|parseStringArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"long"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toLong
argument_list|(
name|parseLongField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"longs"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiLong
argument_list|(
name|parseLongArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"double"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toDouble
argument_list|(
name|parseDoubleField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"doubles"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiDouble
argument_list|(
name|parseDoubleArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"date"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toDate
argument_list|(
name|parseLongField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"dates"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiDate
argument_list|(
name|parseLongArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"boolean"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toBoolean
argument_list|(
name|parseBooleanField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"booleans"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiBoolean
argument_list|(
name|parseBooleanArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"name"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toName
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"names"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiName
argument_list|(
name|parseStringArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"path"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toPath
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"paths"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiPath
argument_list|(
name|parseStringArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"reference"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toReference
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"references"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiReference
argument_list|(
name|parseStringArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"weakReference"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toWeakReference
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"weakReferences"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiWeakReference
argument_list|(
name|parseStringArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"uri"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toUri
argument_list|(
name|parseStringField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"uris"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiUri
argument_list|(
name|parseStringArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"decimal"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toDecimal
argument_list|(
name|parseDecimalField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"decimals"
argument_list|)
condition|)
block|{
return|return
name|RemoteValue
operator|.
name|toMultiDecimal
argument_list|(
name|parseDecimalArrayField
argument_list|(
name|node
argument_list|,
literal|"value"
argument_list|)
argument_list|)
return|;
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"invalid value type"
argument_list|)
throw|;
block|}
specifier|private
name|BigDecimal
name|parseDecimalField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseDecimal
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|BigDecimal
name|parseDecimal
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
return|return
operator|new
name|BigDecimal
argument_list|(
name|node
operator|.
name|asText
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|BigDecimal
argument_list|>
name|parseDecimalArrayField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseDecimalArray
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|BigDecimal
argument_list|>
name|parseDecimalArray
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|List
argument_list|<
name|BigDecimal
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|BigDecimal
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JsonNode
name|element
range|:
name|node
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|parseDecimal
argument_list|(
name|element
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|boolean
name|parseBooleanField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseBoolean
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|parseBoolean
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|node
operator|.
name|asBoolean
argument_list|()
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Boolean
argument_list|>
name|parseBooleanArrayField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseBooleanArray
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Boolean
argument_list|>
name|parseBooleanArray
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|List
argument_list|<
name|Boolean
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|Boolean
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JsonNode
name|element
range|:
name|node
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|parseBoolean
argument_list|(
name|element
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|double
name|parseDoubleField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseDouble
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|double
name|parseDouble
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|node
operator|.
name|asDouble
argument_list|()
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Double
argument_list|>
name|parseDoubleArrayField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseDoubleArray
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Double
argument_list|>
name|parseDoubleArray
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|List
argument_list|<
name|Double
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|Double
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JsonNode
name|element
range|:
name|node
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|parseDouble
argument_list|(
name|element
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|long
name|parseLongField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseLong
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|long
name|parseLong
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|node
operator|.
name|asLong
argument_list|()
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Long
argument_list|>
name|parseLongArrayField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseLongArray
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Long
argument_list|>
name|parseLongArray
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|List
argument_list|<
name|Long
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JsonNode
name|element
range|:
name|node
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|parseLong
argument_list|(
name|element
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|Supplier
argument_list|<
name|InputStream
argument_list|>
name|parseBinaryField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseBinary
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Supplier
argument_list|<
name|InputStream
argument_list|>
name|parseBinary
parameter_list|(
specifier|final
name|JsonNode
name|node
parameter_list|)
block|{
return|return
operator|new
name|Supplier
argument_list|<
name|InputStream
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|InputStream
name|get
parameter_list|()
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|Base64
operator|.
name|decode
argument_list|(
name|node
operator|.
name|asText
argument_list|()
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Supplier
argument_list|<
name|InputStream
argument_list|>
argument_list|>
name|parseBinaryArrayField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseBinaryArray
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|Supplier
argument_list|<
name|InputStream
argument_list|>
argument_list|>
name|parseBinaryArray
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|List
argument_list|<
name|Supplier
argument_list|<
name|InputStream
argument_list|>
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|Supplier
argument_list|<
name|InputStream
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JsonNode
name|element
range|:
name|node
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|parseBinary
argument_list|(
name|element
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|String
argument_list|>
name|parseStringArrayField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseStringArray
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|String
name|parseStringField
parameter_list|(
name|JsonNode
name|node
parameter_list|,
name|String
name|field
parameter_list|)
block|{
return|return
name|parseString
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|field
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Iterable
argument_list|<
name|String
argument_list|>
name|parseStringArray
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JsonNode
name|element
range|:
name|node
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|parseString
argument_list|(
name|element
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|String
name|parseString
parameter_list|(
name|JsonNode
name|node
parameter_list|)
block|{
return|return
name|node
operator|.
name|asText
argument_list|()
return|;
block|}
block|}
end_class

end_unit

