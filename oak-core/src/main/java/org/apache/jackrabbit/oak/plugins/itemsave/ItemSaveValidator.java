begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|itemsave
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
operator|.
name|elements
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|FailingValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|SubtreeExcludingValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Validator
import|;
end_import

begin_comment
comment|/**  * This validator checks that all changes are contained within the subtree  * rooted at a given path.  */
end_comment

begin_class
class|class
name|ItemSaveValidator
extends|extends
name|SubtreeExcludingValidator
block|{
comment|/**      * Name of the property whose {@link #propertyChanged(org.apache.jackrabbit.oak.api.PropertyState, org.apache.jackrabbit.oak.api.PropertyState)} to      * ignore or {@code null} if no property should be ignored.      */
specifier|private
specifier|final
name|String
name|ignorePropertyChange
decl_stmt|;
comment|/**      * Create a new validator that only throws a {@link CommitFailedException} whenever      * there are changes not contained in the subtree rooted at {@code path}.      * @param path      */
specifier|public
name|ItemSaveValidator
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|FailingValidator
argument_list|(
name|CommitFailedException
operator|.
name|UNSUPPORTED
argument_list|,
literal|0
argument_list|,
literal|"Failed to save subtree at "
operator|+
name|path
operator|+
literal|". There are "
operator|+
literal|"transient modifications outside that subtree."
argument_list|)
argument_list|,
name|newArrayList
argument_list|(
name|elements
argument_list|(
name|path
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ItemSaveValidator
parameter_list|(
name|Validator
name|validator
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|validator
argument_list|,
name|path
argument_list|)
expr_stmt|;
comment|// Ignore property changes if this is the head of the path.
comment|// This allows for calling save on a changed property.
name|ignorePropertyChange
operator|=
name|path
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|?
name|path
operator|.
name|get
argument_list|(
literal|0
argument_list|)
else|:
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|propertyChanged
parameter_list|(
name|PropertyState
name|before
parameter_list|,
name|PropertyState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
if|if
condition|(
operator|!
name|before
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|ignorePropertyChange
argument_list|)
condition|)
block|{
name|super
operator|.
name|propertyChanged
argument_list|(
name|before
argument_list|,
name|after
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|SubtreeExcludingValidator
name|createValidator
parameter_list|(
name|Validator
name|validator
parameter_list|,
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|path
parameter_list|)
block|{
return|return
operator|new
name|ItemSaveValidator
argument_list|(
name|validator
argument_list|,
name|path
argument_list|)
return|;
block|}
block|}
end_class

end_unit

