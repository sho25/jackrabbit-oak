begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|perf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|util
operator|.
name|MongoUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:pmarx@adobe.com>Philipp Marx</a>  */
end_comment

begin_class
specifier|public
class|class
name|PrepareEnvironment
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|PrepareEnvironment
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|Config
name|config
decl_stmt|;
specifier|private
name|MongoConnection
name|mongoConnection
decl_stmt|;
specifier|public
name|PrepareEnvironment
parameter_list|(
name|Config
name|config
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
name|this
operator|.
name|initMongo
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|start
parameter_list|()
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Preparing environment"
argument_list|)
expr_stmt|;
name|MongoUtil
operator|.
name|initDatabase
argument_list|(
name|this
operator|.
name|mongoConnection
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initMongo
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|mongoConnection
operator|=
operator|new
name|MongoConnection
argument_list|(
name|this
operator|.
name|config
operator|.
name|getMongoHost
argument_list|()
argument_list|,
name|this
operator|.
name|config
operator|.
name|getMongoPort
argument_list|()
argument_list|,
name|this
operator|.
name|config
operator|.
name|getMongoDatabase
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

