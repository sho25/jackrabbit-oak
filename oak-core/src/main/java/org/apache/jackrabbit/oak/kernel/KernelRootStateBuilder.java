begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|kernel
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeStateBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_class
class|class
name|KernelRootStateBuilder
extends|extends
name|MemoryNodeStateBuilder
block|{
comment|/**      * Number of content updates that need to happen before the updates      * are automatically committed to a branch in the MicroKernel.      */
specifier|private
specifier|static
specifier|final
name|int
name|UPDATE_LIMIT
init|=
literal|10000
decl_stmt|;
specifier|private
specifier|final
name|MicroKernel
name|kernel
decl_stmt|;
specifier|private
name|String
name|baseRevision
decl_stmt|;
specifier|private
name|String
name|branchRevision
decl_stmt|;
specifier|private
name|int
name|updates
init|=
literal|0
decl_stmt|;
specifier|public
name|KernelRootStateBuilder
parameter_list|(
name|MicroKernel
name|kernel
parameter_list|,
name|String
name|revision
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|KernelNodeState
argument_list|(
name|kernel
argument_list|,
literal|"/"
argument_list|,
name|revision
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|kernel
operator|=
name|kernel
expr_stmt|;
name|this
operator|.
name|baseRevision
operator|=
name|revision
expr_stmt|;
name|this
operator|.
name|branchRevision
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|MemoryNodeStateBuilder
name|createChildBuilder
parameter_list|(
name|String
name|name
parameter_list|,
name|NodeState
name|child
parameter_list|)
block|{
return|return
operator|new
name|KernelNodeStateBuilder
argument_list|(
name|this
argument_list|,
name|name
argument_list|,
name|child
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|updated
parameter_list|()
block|{
if|if
condition|(
name|updates
operator|++
operator|>
name|UPDATE_LIMIT
condition|)
block|{
if|if
condition|(
name|branchRevision
operator|==
literal|null
condition|)
block|{
name|branchRevision
operator|=
name|kernel
operator|.
name|branch
argument_list|(
name|baseRevision
argument_list|)
expr_stmt|;
block|}
name|updates
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

