begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|scalability
operator|.
name|benchmarks
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|scalability
operator|.
name|suites
operator|.
name|ScalabilityAbstractSuite
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Writes random paths concurrently with multiple readers/writers configured with {#WRITERS} and {#READERS}.  */
end_comment

begin_class
specifier|public
class|class
name|ConcurrentWriter
extends|extends
name|ConcurrentReader
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
name|Repository
name|repository
parameter_list|,
name|Credentials
name|credentials
parameter_list|,
name|ScalabilityAbstractSuite
operator|.
name|ExecutionContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|Writer
name|writer
init|=
operator|new
name|Writer
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
argument_list|,
literal|100
argument_list|,
name|repository
operator|.
name|login
argument_list|(
name|credentials
argument_list|)
argument_list|,
name|context
argument_list|)
decl_stmt|;
name|writer
operator|.
name|process
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

