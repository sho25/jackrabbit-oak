begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|persistentCache
operator|.
name|broadcast
operator|.
name|DynamicBroadcastConfig
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentBroadcastConfig
implements|implements
name|DynamicBroadcastConfig
block|{
specifier|private
specifier|final
name|DocumentNodeStore
name|documentNodeStore
decl_stmt|;
specifier|public
name|DocumentBroadcastConfig
parameter_list|(
name|DocumentNodeStore
name|documentNodeStore
parameter_list|)
block|{
name|this
operator|.
name|documentNodeStore
operator|=
name|documentNodeStore
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getConfig
parameter_list|()
block|{
comment|// currently not implemented
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getClientInfo
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ClusterNodeInfoDocument
name|doc
range|:
name|ClusterNodeInfoDocument
operator|.
name|all
argument_list|(
name|documentNodeStore
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
control|)
block|{
if|if
condition|(
operator|!
name|doc
operator|.
name|isActive
argument_list|()
condition|)
block|{
continue|continue;
block|}
name|Object
name|broadcastId
init|=
name|doc
operator|.
name|get
argument_list|(
name|DynamicBroadcastConfig
operator|.
name|ID
argument_list|)
decl_stmt|;
name|Object
name|listener
init|=
name|doc
operator|.
name|get
argument_list|(
name|DynamicBroadcastConfig
operator|.
name|LISTENER
argument_list|)
decl_stmt|;
if|if
condition|(
name|broadcastId
operator|==
literal|null
operator|||
name|listener
operator|==
literal|null
condition|)
block|{
comment|// no id or no listener
continue|continue;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|DynamicBroadcastConfig
operator|.
name|ID
argument_list|,
name|broadcastId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|DynamicBroadcastConfig
operator|.
name|LISTENER
argument_list|,
name|listener
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|connect
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|clientInfo
parameter_list|)
block|{
name|ClusterNodeInfo
name|info
init|=
name|documentNodeStore
operator|.
name|getClusterInfo
argument_list|()
decl_stmt|;
name|info
operator|.
name|setInfo
argument_list|(
name|clientInfo
argument_list|)
expr_stmt|;
return|return
literal|""
operator|+
name|info
operator|.
name|getId
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|disconnect
parameter_list|(
name|String
name|id
parameter_list|)
block|{
comment|// ignore
block|}
block|}
end_class

end_unit

