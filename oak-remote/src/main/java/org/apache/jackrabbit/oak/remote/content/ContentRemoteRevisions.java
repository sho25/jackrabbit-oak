begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|content
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|AuthInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_class
class|class
name|ContentRemoteRevisions
block|{
specifier|private
class|class
name|Key
block|{
specifier|private
specifier|final
name|String
name|revisionId
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|Principal
argument_list|>
name|principals
decl_stmt|;
specifier|private
specifier|final
name|String
name|user
decl_stmt|;
specifier|private
name|Key
parameter_list|(
name|AuthInfo
name|authInfo
parameter_list|,
name|String
name|revisionId
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|authInfo
operator|.
name|getUserID
argument_list|()
expr_stmt|;
name|this
operator|.
name|principals
operator|=
name|authInfo
operator|.
name|getPrincipals
argument_list|()
expr_stmt|;
name|this
operator|.
name|revisionId
operator|=
name|revisionId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|object
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|getClass
argument_list|()
operator|!=
name|object
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Key
name|other
init|=
operator|(
name|Key
operator|)
name|object
decl_stmt|;
if|if
condition|(
operator|!
name|Objects
operator|.
name|equal
argument_list|(
name|revisionId
argument_list|,
name|other
operator|.
name|revisionId
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|Objects
operator|.
name|equal
argument_list|(
name|user
argument_list|,
name|other
operator|.
name|user
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|Objects
operator|.
name|equal
argument_list|(
name|principals
argument_list|,
name|other
operator|.
name|principals
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hashCode
argument_list|(
name|revisionId
argument_list|,
name|user
argument_list|,
name|principals
argument_list|)
return|;
block|}
block|}
specifier|private
name|Map
argument_list|<
name|Key
argument_list|,
name|Root
argument_list|>
name|roots
decl_stmt|;
specifier|public
name|ContentRemoteRevisions
parameter_list|()
block|{
name|this
operator|.
name|roots
operator|=
name|Maps
operator|.
name|newHashMap
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Key
name|key
parameter_list|(
name|AuthInfo
name|authInfo
parameter_list|,
name|String
name|revisionId
parameter_list|)
block|{
return|return
operator|new
name|Key
argument_list|(
name|authInfo
argument_list|,
name|revisionId
argument_list|)
return|;
block|}
specifier|public
name|Root
name|get
parameter_list|(
name|AuthInfo
name|authInfo
parameter_list|,
name|String
name|revisionId
parameter_list|)
block|{
return|return
name|roots
operator|.
name|get
argument_list|(
name|key
argument_list|(
name|authInfo
argument_list|,
name|revisionId
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|String
name|put
parameter_list|(
name|AuthInfo
name|authInfo
parameter_list|,
name|Root
name|root
parameter_list|)
block|{
name|String
name|revisionId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|roots
operator|.
name|put
argument_list|(
name|key
argument_list|(
name|authInfo
argument_list|,
name|revisionId
argument_list|)
argument_list|,
name|root
argument_list|)
expr_stmt|;
return|return
name|revisionId
return|;
block|}
block|}
end_class

end_unit

