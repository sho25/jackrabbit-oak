begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|proc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|EmptyNodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_class
specifier|public
class|class
name|Proc
block|{
specifier|public
interface|interface
name|Backend
block|{
interface|interface
name|Segment
block|{
name|int
name|getGeneration
parameter_list|()
function_decl|;
name|int
name|getFullGeneration
parameter_list|()
function_decl|;
name|boolean
name|isCompacted
parameter_list|()
function_decl|;
name|int
name|getLength
parameter_list|()
function_decl|;
name|int
name|getVersion
parameter_list|()
function_decl|;
name|boolean
name|isDataSegment
parameter_list|()
function_decl|;
name|Optional
argument_list|<
name|String
argument_list|>
name|getInfo
parameter_list|()
function_decl|;
block|}
interface|interface
name|Commit
block|{
name|long
name|getTimestamp
parameter_list|()
function_decl|;
name|String
name|getRevision
parameter_list|()
function_decl|;
name|Optional
argument_list|<
name|NodeState
argument_list|>
name|getRoot
parameter_list|()
function_decl|;
block|}
interface|interface
name|Record
block|{
name|int
name|getNumber
parameter_list|()
function_decl|;
name|String
name|getSegmentId
parameter_list|()
function_decl|;
name|int
name|getOffset
parameter_list|()
function_decl|;
name|int
name|getAddress
parameter_list|()
function_decl|;
name|String
name|getType
parameter_list|()
function_decl|;
name|Optional
argument_list|<
name|NodeState
argument_list|>
name|getRoot
parameter_list|()
function_decl|;
block|}
name|boolean
name|tarExists
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
name|Optional
argument_list|<
name|Long
argument_list|>
name|getTarSize
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
name|Iterable
argument_list|<
name|String
argument_list|>
name|getTarNames
parameter_list|()
function_decl|;
name|boolean
name|segmentExists
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|segmentId
parameter_list|)
function_decl|;
name|Iterable
argument_list|<
name|String
argument_list|>
name|getSegmentIds
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
name|Optional
argument_list|<
name|Segment
argument_list|>
name|getSegment
parameter_list|(
name|String
name|segmentId
parameter_list|)
function_decl|;
name|Optional
argument_list|<
name|InputStream
argument_list|>
name|getSegmentData
parameter_list|(
name|String
name|segmentId
parameter_list|)
function_decl|;
name|Optional
argument_list|<
name|Iterable
argument_list|<
name|String
argument_list|>
argument_list|>
name|getSegmentReferences
parameter_list|(
name|String
name|segmentId
parameter_list|)
function_decl|;
name|Optional
argument_list|<
name|Iterable
argument_list|<
name|Record
argument_list|>
argument_list|>
name|getSegmentRecords
parameter_list|(
name|String
name|segmentId
parameter_list|)
function_decl|;
name|boolean
name|commitExists
parameter_list|(
name|String
name|handle
parameter_list|)
function_decl|;
name|Iterable
argument_list|<
name|String
argument_list|>
name|getCommitHandles
parameter_list|()
function_decl|;
name|Optional
argument_list|<
name|Commit
argument_list|>
name|getCommit
parameter_list|(
name|String
name|handle
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
name|NodeState
name|of
parameter_list|(
name|Backend
name|backend
parameter_list|)
block|{
name|NodeBuilder
name|builder
init|=
name|EmptyNodeState
operator|.
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setChildNode
argument_list|(
literal|"store"
argument_list|,
operator|new
name|StoreNode
argument_list|(
name|backend
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setChildNode
argument_list|(
literal|"journal"
argument_list|,
operator|new
name|JournalNode
argument_list|(
name|backend
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|getNodeState
argument_list|()
return|;
block|}
specifier|private
name|Proc
parameter_list|()
block|{
comment|// Prevent external instantiation.
block|}
block|}
end_class

end_unit

