begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|LogRecord
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|AbstractMongoConnectionTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMK
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|NodeDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|Clock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|QueryHintTest
extends|extends
name|AbstractMongoConnectionTest
block|{
specifier|final
name|Logger
name|TRACE_LOGGER
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
literal|"com.mongodb.TRACE"
argument_list|)
decl_stmt|;
specifier|final
name|TestHandler
name|testHandler
init|=
operator|new
name|TestHandler
argument_list|()
decl_stmt|;
specifier|private
name|MongoDocumentStore
name|mongoDS
decl_stmt|;
specifier|private
name|Clock
name|clock
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|prepareStores
parameter_list|()
throws|throws
name|Exception
block|{
name|clock
operator|=
operator|new
name|Clock
operator|.
name|Virtual
argument_list|()
expr_stmt|;
comment|//TODO Temp mode to change the default setting so as to test it
comment|//If we retain this feature then need to have better config support for it
name|System
operator|.
name|setProperty
argument_list|(
literal|"oak.mongo.maxDeltaForModTimeIdxSecs"
argument_list|,
literal|"120"
argument_list|)
expr_stmt|;
name|mongoDS
operator|=
operator|new
name|MongoDocumentStore
argument_list|(
name|mongoConnection
operator|.
name|getDB
argument_list|()
argument_list|,
operator|new
name|DocumentMK
operator|.
name|Builder
argument_list|()
argument_list|)
expr_stmt|;
name|mongoDS
operator|.
name|setClock
argument_list|(
name|clock
argument_list|)
expr_stmt|;
name|TRACE_LOGGER
operator|.
name|addHandler
argument_list|(
name|testHandler
argument_list|)
expr_stmt|;
name|TRACE_LOGGER
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|FINEST
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHints
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|mongoDS
operator|.
name|getDisableIndexHint
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|delta
init|=
name|mongoDS
operator|.
name|getMaxDeltaForModTimeIdxSecs
argument_list|()
decl_stmt|;
name|clock
operator|.
name|waitUntil
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toMillis
argument_list|(
name|delta
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mongoDS
operator|.
name|canUseModifiedTimeIdx
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|//For recently modified should be true
name|assertTrue
argument_list|(
name|mongoDS
operator|.
name|canUseModifiedTimeIdx
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|mongoDS
operator|.
name|query
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
name|Utils
operator|.
name|getKeyLowerLimit
argument_list|(
literal|"/"
argument_list|)
argument_list|,
name|Utils
operator|.
name|getKeyUpperLimit
argument_list|(
literal|"/"
argument_list|)
argument_list|,
name|NodeDocument
operator|.
name|MODIFIED_IN_SECS
argument_list|,
literal|50
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|//TODO Use log message for better assert on
comment|//what hint is used
comment|//System.out.println(testHandler.records);
block|}
annotation|@
name|After
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
name|TRACE_LOGGER
operator|.
name|removeHandler
argument_list|(
name|testHandler
argument_list|)
expr_stmt|;
name|testHandler
operator|.
name|close
argument_list|()
expr_stmt|;
name|TRACE_LOGGER
operator|.
name|setLevel
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|TestHandler
extends|extends
name|Handler
block|{
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|records
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|publish
parameter_list|(
name|LogRecord
name|record
parameter_list|)
block|{
name|String
name|msg
init|=
name|record
operator|.
name|getMessage
argument_list|()
decl_stmt|;
if|if
condition|(
name|msg
operator|!=
literal|null
operator|&&
name|msg
operator|.
name|startsWith
argument_list|(
literal|"find:"
argument_list|)
condition|)
block|{
name|String
name|json
init|=
name|msg
operator|.
name|substring
argument_list|(
name|msg
operator|.
name|indexOf
argument_list|(
literal|'{'
argument_list|)
argument_list|)
decl_stmt|;
name|records
operator|.
name|add
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|flush
parameter_list|()
block|{         }
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|SecurityException
block|{
name|records
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

