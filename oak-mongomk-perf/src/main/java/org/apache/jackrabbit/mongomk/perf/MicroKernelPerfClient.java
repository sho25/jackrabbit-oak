begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|perf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|blobs
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|MongoMicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|MongoNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|json
operator|.
name|DefaultJsopHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|json
operator|.
name|JsopParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|perf
operator|.
name|RandomJsopGenerator
operator|.
name|RandomJsop
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jamonapi
operator|.
name|Monitor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jamonapi
operator|.
name|MonitorFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|BasicDBObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DBCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|WriteConcern
import|;
end_import

begin_class
specifier|public
class|class
name|MicroKernelPerfClient
block|{
specifier|private
specifier|static
class|class
name|Stats
extends|extends
name|BasicDBObject
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|8819985408570757782L
decl_stmt|;
specifier|private
name|Stats
parameter_list|(
name|String
name|id
parameter_list|,
name|double
name|duration
parameter_list|,
name|long
name|numOfCommits
parameter_list|,
name|long
name|numOfNodes
parameter_list|,
name|long
name|numOfObjects
parameter_list|)
block|{
name|put
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|put
argument_list|(
literal|"duration"
argument_list|,
name|duration
argument_list|)
expr_stmt|;
name|put
argument_list|(
literal|"numOfCommits"
argument_list|,
name|numOfCommits
argument_list|)
expr_stmt|;
name|put
argument_list|(
literal|"numOfNodes"
argument_list|,
name|numOfNodes
argument_list|)
expr_stmt|;
name|put
argument_list|(
literal|"numOfObjects"
argument_list|,
name|numOfObjects
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|VerificationHandler
extends|extends
name|DefaultJsopHandler
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|addedNodes
init|=
operator|new
name|LinkedList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|addedProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|nodeAdded
parameter_list|(
name|String
name|parentPath
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|addedNodes
operator|.
name|add
argument_list|(
name|PathUtils
operator|.
name|concat
argument_list|(
name|parentPath
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|propertySet
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|String
name|rawValue
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|properties
init|=
name|addedProperties
operator|.
name|get
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
name|properties
operator|=
operator|new
name|LinkedList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|addedProperties
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
name|properties
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|MicroKernelPerfClient
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|PERF
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
literal|"PERFORMANCE"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|void
name|assertNodeExists
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|node
parameter_list|,
name|JSONObject
name|result
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
name|path
operator|.
name|equals
argument_list|(
name|node
argument_list|)
condition|)
block|{
name|JSONObject
name|temp
init|=
name|result
decl_stmt|;
for|for
control|(
name|String
name|segment
range|:
name|PathUtils
operator|.
name|elements
argument_list|(
name|node
argument_list|)
control|)
block|{
name|temp
operator|=
name|temp
operator|.
name|getJSONObject
argument_list|(
name|segment
argument_list|)
expr_stmt|;
if|if
condition|(
name|temp
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"The node %s could not be found!"
argument_list|,
name|node
argument_list|)
argument_list|)
throw|;
block|}
block|}
block|}
block|}
specifier|private
specifier|static
name|void
name|assertPropertyExists
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|property
parameter_list|,
name|JSONObject
name|result
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONObject
name|temp
init|=
name|result
decl_stmt|;
for|for
control|(
name|String
name|segment
range|:
name|PathUtils
operator|.
name|elements
argument_list|(
name|path
argument_list|)
control|)
block|{
name|temp
operator|=
name|temp
operator|.
name|optJSONObject
argument_list|(
name|segment
argument_list|)
expr_stmt|;
if|if
condition|(
name|temp
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"The node %s could not be found!"
argument_list|,
name|path
argument_list|)
argument_list|)
throw|;
block|}
block|}
name|Object
name|value
init|=
name|temp
operator|.
name|opt
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"The node %s did not containt the property %s!"
argument_list|,
name|path
argument_list|,
name|property
argument_list|)
argument_list|)
throw|;
block|}
block|}
specifier|private
name|Monitor
name|commitMonitor
decl_stmt|;
specifier|private
specifier|final
name|Config
name|config
decl_stmt|;
specifier|private
name|Monitor
name|getNodesMonitor
decl_stmt|;
specifier|private
name|MongoMicroKernel
name|microKernel
decl_stmt|;
specifier|private
name|MongoConnection
name|mongoConnection
decl_stmt|;
specifier|private
name|RandomJsopGenerator
name|randomJsopGenerator
decl_stmt|;
specifier|public
name|MicroKernelPerfClient
parameter_list|(
name|Config
name|config
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
name|initMongo
argument_list|()
expr_stmt|;
name|initMicroKernel
argument_list|()
expr_stmt|;
name|initRandomJsopGenerator
argument_list|()
expr_stmt|;
name|initMonitoring
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting client..."
argument_list|)
expr_stmt|;
name|startCommitting
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|createStats
parameter_list|(
name|VerificationHandler
name|handler
parameter_list|,
name|JSONObject
name|result
parameter_list|)
block|{
name|long
name|numOfNodes
init|=
operator|(
operator|(
name|MongoNodeStore
operator|)
name|microKernel
operator|.
name|getNodeStore
argument_list|()
operator|)
operator|.
name|getNodeCollection
argument_list|()
operator|.
name|count
argument_list|()
decl_stmt|;
name|long
name|numOfCommits
init|=
operator|(
operator|(
name|MongoNodeStore
operator|)
name|microKernel
operator|.
name|getNodeStore
argument_list|()
operator|)
operator|.
name|getCommitCollection
argument_list|()
operator|.
name|count
argument_list|()
decl_stmt|;
name|Stats
name|commitStats
init|=
operator|new
name|Stats
argument_list|(
literal|"commit"
argument_list|,
name|commitMonitor
operator|.
name|getLastValue
argument_list|()
argument_list|,
name|numOfCommits
argument_list|,
name|numOfNodes
argument_list|,
name|handler
operator|.
name|addedNodes
operator|.
name|size
argument_list|()
operator|+
name|handler
operator|.
name|addedProperties
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|Stats
name|getNodesStats
init|=
operator|new
name|Stats
argument_list|(
literal|"getNodes"
argument_list|,
name|getNodesMonitor
operator|.
name|getLastValue
argument_list|()
argument_list|,
name|numOfCommits
argument_list|,
name|numOfNodes
argument_list|,
name|numOfNodes
operator|-
name|handler
operator|.
name|addedNodes
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|DBCollection
name|statsCollection
init|=
name|mongoConnection
operator|.
name|getDB
argument_list|()
operator|.
name|getCollection
argument_list|(
literal|"statistics"
argument_list|)
decl_stmt|;
name|statsCollection
operator|.
name|insert
argument_list|(
operator|new
name|Stats
index|[]
block|{
name|commitStats
block|,
name|getNodesStats
block|}
argument_list|,
name|WriteConcern
operator|.
name|NONE
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initMicroKernel
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeStore
name|nodeStore
init|=
operator|new
name|MongoNodeStore
argument_list|(
name|mongoConnection
operator|.
name|getDB
argument_list|()
argument_list|)
decl_stmt|;
name|BlobStore
name|blobStore
init|=
operator|new
name|BlobStoreFS
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
decl_stmt|;
name|microKernel
operator|=
operator|new
name|MongoMicroKernel
argument_list|(
name|mongoConnection
argument_list|,
name|nodeStore
argument_list|,
name|blobStore
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initMongo
parameter_list|()
throws|throws
name|Exception
block|{
name|mongoConnection
operator|=
operator|new
name|MongoConnection
argument_list|(
name|config
operator|.
name|getMongoHost
argument_list|()
argument_list|,
name|config
operator|.
name|getMongoPort
argument_list|()
argument_list|,
name|config
operator|.
name|getMongoDatabase
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initMonitoring
parameter_list|()
block|{
name|commitMonitor
operator|=
name|MonitorFactory
operator|.
name|getTimeMonitor
argument_list|(
literal|"commit"
argument_list|)
expr_stmt|;
name|getNodesMonitor
operator|=
name|MonitorFactory
operator|.
name|getTimeMonitor
argument_list|(
literal|"getNodes"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initRandomJsopGenerator
parameter_list|()
throws|throws
name|Exception
block|{
name|randomJsopGenerator
operator|=
operator|new
name|RandomJsopGenerator
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|startCommitting
parameter_list|()
throws|throws
name|Exception
block|{
while|while
condition|(
literal|true
condition|)
block|{
name|RandomJsop
name|randomJsop
init|=
name|randomJsopGenerator
operator|.
name|nextRandom
argument_list|()
decl_stmt|;
name|String
name|commitPath
init|=
name|randomJsop
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|String
name|jsonDiff
init|=
name|randomJsop
operator|.
name|getJsop
argument_list|()
decl_stmt|;
name|String
name|revisionId
init|=
literal|null
decl_stmt|;
name|String
name|message
init|=
name|randomJsop
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|commitMonitor
operator|.
name|start
argument_list|()
expr_stmt|;
name|String
name|newRevisionId
init|=
name|microKernel
operator|.
name|commit
argument_list|(
name|commitPath
argument_list|,
name|jsonDiff
argument_list|,
name|revisionId
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|commitMonitor
operator|.
name|stop
argument_list|()
expr_stmt|;
name|PERF
operator|.
name|info
argument_list|(
name|commitMonitor
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Committed (%s): %s, %s\n%s"
argument_list|,
name|newRevisionId
argument_list|,
name|commitPath
argument_list|,
name|message
argument_list|,
name|jsonDiff
argument_list|)
argument_list|)
expr_stmt|;
name|getNodesMonitor
operator|.
name|start
argument_list|()
expr_stmt|;
name|String
name|getPath
init|=
literal|""
operator|.
name|equals
argument_list|(
name|commitPath
argument_list|)
condition|?
literal|"/"
else|:
name|commitPath
decl_stmt|;
name|String
name|json
init|=
name|microKernel
operator|.
name|getNodes
argument_list|(
name|getPath
argument_list|,
name|newRevisionId
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|getNodesMonitor
operator|.
name|stop
argument_list|()
expr_stmt|;
name|PERF
operator|.
name|info
argument_list|(
name|getNodesMonitor
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"GetNodes (%s: %s"
argument_list|,
name|newRevisionId
argument_list|,
name|json
argument_list|)
argument_list|)
expr_stmt|;
name|VerificationHandler
name|handler
init|=
operator|new
name|VerificationHandler
argument_list|()
decl_stmt|;
name|JsopParser
name|jsopParser
init|=
operator|new
name|JsopParser
argument_list|(
name|commitPath
argument_list|,
name|jsonDiff
argument_list|,
name|handler
argument_list|)
decl_stmt|;
name|jsopParser
operator|.
name|parse
argument_list|()
expr_stmt|;
name|JSONObject
name|result
init|=
operator|new
name|JSONObject
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|handler
argument_list|,
name|result
argument_list|,
name|getPath
argument_list|)
expr_stmt|;
name|createStats
argument_list|(
name|handler
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|randomJsopGenerator
operator|.
name|setSeed
argument_list|(
name|getPath
argument_list|,
name|json
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|verify
parameter_list|(
name|VerificationHandler
name|handler
parameter_list|,
name|JSONObject
name|result
parameter_list|,
name|String
name|getPath
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|String
name|node
range|:
name|handler
operator|.
name|addedNodes
control|)
block|{
name|assertNodeExists
argument_list|(
name|getPath
argument_list|,
name|node
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|entry
range|:
name|handler
operator|.
name|addedProperties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|path
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|properties
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|property
range|:
name|properties
control|)
block|{
name|assertPropertyExists
argument_list|(
name|path
argument_list|,
name|property
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

