begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_interface
specifier|public
interface|interface
name|DocumentStoreStatsCollector
block|{
comment|/**      * Called when a document with given key is found from the cache      *      * @param collection the collection      * @param key collection key which is found      */
name|void
name|doneFindCached
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|String
name|key
parameter_list|)
function_decl|;
comment|/**      * Called when a document with given key is read from remote store      * @param timeTakenNanos time taken      * @param collection the collection      * @param key collection key      * @param docFound true if document is found      * @param isSlaveOk true if find was performed against a secondary instance      */
name|void
name|doneFindUncached
parameter_list|(
name|long
name|timeTakenNanos
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|String
name|key
parameter_list|,
name|boolean
name|docFound
parameter_list|,
name|boolean
name|isSlaveOk
parameter_list|)
function_decl|;
comment|/**      * Called when query with given parameters is performed      * @param timeTakenNanos time taken      * @param collection the collection      * @param fromKey the start value (excluding)      * @param toKey the end value (excluding)      * @param indexedProperty true if indexedProperty was specified      * @param resultSize number of documents found for given query      * @param lockTime time in millis to acquire any lock ({@code -1} if no lock was required)      * @param isSlaveOk true if find was performed against a secondary instance      */
name|void
name|doneQuery
parameter_list|(
name|long
name|timeTakenNanos
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|String
name|fromKey
parameter_list|,
name|String
name|toKey
parameter_list|,
name|boolean
name|indexedProperty
parameter_list|,
name|int
name|resultSize
parameter_list|,
name|long
name|lockTime
parameter_list|,
name|boolean
name|isSlaveOk
parameter_list|)
function_decl|;
comment|/**      * Called when a document is created in the given collection      * @param timeTakenNanos time taken      * @param collection the collection      * @param ids list of ids request to be created      * @param insertSuccess true if the insert was successful      */
name|void
name|doneCreate
parameter_list|(
name|long
name|timeTakenNanos
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|ids
parameter_list|,
name|boolean
name|insertSuccess
parameter_list|)
function_decl|;
comment|/**      * Called when multiple document are either created or updated.      *      * @param timeTakenNanos time taken      * @param collection the collection      * @param ids list of ids request to be created or updated      */
name|void
name|doneCreateOrUpdate
parameter_list|(
name|long
name|timeTakenNanos
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|ids
parameter_list|)
function_decl|;
comment|/**      * Called when a given updated has modified multiple documents      * @param timeTakenNanos time taken      * @param collection the collection      * @param updateCount number of updates performed      */
name|void
name|doneUpdate
parameter_list|(
name|long
name|timeTakenNanos
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|int
name|updateCount
parameter_list|)
function_decl|;
comment|/**      * Called when a update operation was completed which affected single      * document.      * @param timeTakenNanos time taken      * @param collection the collection      * @param key collection which got updated or inserted      * @param newEntry true if the document was newly created due to given operation      * @param success true if the update was success      * @param retryCount number of retries done to get the update      */
name|void
name|doneFindAndModify
parameter_list|(
name|long
name|timeTakenNanos
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|String
name|key
parameter_list|,
name|boolean
name|newEntry
parameter_list|,
name|boolean
name|success
parameter_list|,
name|int
name|retryCount
parameter_list|)
function_decl|;
comment|/**      * Called when a remove operation for documents was completed.      * @param timeTakenNanos time taken      * @param collection the collection      * @param removeCount the number of removed documents      */
name|void
name|doneRemove
parameter_list|(
name|long
name|timeTakenNanos
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Document
argument_list|>
name|collection
parameter_list|,
name|int
name|removeCount
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

