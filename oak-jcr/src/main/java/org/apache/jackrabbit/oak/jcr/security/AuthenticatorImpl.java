begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|security
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|GuestCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|text
operator|.
name|MessageFormat
operator|.
name|format
import|;
end_import

begin_class
specifier|public
class|class
name|AuthenticatorImpl
implements|implements
name|Authenticator
block|{
specifier|public
specifier|static
specifier|final
name|Authenticator
name|INSTANCE
init|=
operator|new
name|AuthenticatorImpl
argument_list|()
decl_stmt|;
specifier|private
name|AuthenticatorImpl
parameter_list|()
block|{}
annotation|@
name|Override
specifier|public
name|CredentialsInfo
name|authenticate
parameter_list|(
name|Credentials
name|credentials
parameter_list|)
throws|throws
name|LoginException
block|{
comment|// todo implement authentication, split into aggregate of SimpleAuthenticator, GuestAuthenticator, etc
if|if
condition|(
name|credentials
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|CredentialsInfo
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
literal|"null"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getAttributeNames
parameter_list|()
block|{
return|return
operator|new
name|String
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
return|;
block|}
elseif|else
if|if
condition|(
name|credentials
operator|instanceof
name|SimpleCredentials
condition|)
block|{
specifier|final
name|SimpleCredentials
name|c
init|=
operator|(
name|SimpleCredentials
operator|)
name|credentials
decl_stmt|;
name|Arrays
operator|.
name|fill
argument_list|(
name|c
operator|.
name|getPassword
argument_list|()
argument_list|,
literal|'\0'
argument_list|)
expr_stmt|;
return|return
operator|new
name|CredentialsInfo
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
name|c
operator|.
name|getUserID
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getAttributeNames
parameter_list|()
block|{
return|return
name|c
operator|.
name|getAttributeNames
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|c
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|)
return|;
block|}
block|}
return|;
block|}
elseif|else
if|if
condition|(
name|credentials
operator|instanceof
name|GuestCredentials
condition|)
block|{
return|return
operator|new
name|CredentialsInfo
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
literal|"anonymous"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getAttributeNames
parameter_list|()
block|{
return|return
operator|new
name|String
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|LoginException
argument_list|(
name|format
argument_list|(
literal|"Login failed for {0}"
argument_list|,
name|credentials
argument_list|)
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

