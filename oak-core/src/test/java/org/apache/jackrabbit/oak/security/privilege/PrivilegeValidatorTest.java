begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|privilege
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|EmptyNodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|PropertyStates
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeBits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeBitsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStateUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|nodetype
operator|.
name|NodeTypeConstants
operator|.
name|NT_OAK_UNSTRUCTURED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|PrivilegeValidatorTest
extends|extends
name|AbstractSecurityTest
implements|implements
name|PrivilegeConstants
block|{
specifier|private
name|PrivilegeBitsProvider
name|bitsProvider
decl_stmt|;
specifier|private
name|Tree
name|privilegesTree
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|bitsProvider
operator|=
operator|new
name|PrivilegeBitsProvider
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|privilegesTree
operator|=
name|checkNotNull
argument_list|(
name|bitsProvider
operator|.
name|getPrivilegesTree
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|NotNull
specifier|private
name|Tree
name|createPrivilegeTree
parameter_list|(
annotation|@
name|NotNull
name|String
name|privName
parameter_list|,
annotation|@
name|NotNull
name|String
modifier|...
name|aggr
parameter_list|)
block|{
name|Tree
name|privTree
init|=
name|privilegesTree
operator|.
name|addChild
argument_list|(
name|privName
argument_list|)
decl_stmt|;
name|privTree
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|privTree
operator|.
name|setProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableSet
operator|.
name|copyOf
argument_list|(
name|aggr
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
expr_stmt|;
return|return
name|privTree
return|;
block|}
specifier|private
name|void
name|register
parameter_list|(
annotation|@
name|NotNull
name|String
name|privName
parameter_list|,
annotation|@
name|NotNull
name|String
modifier|...
name|aggr
parameter_list|)
throws|throws
name|Exception
block|{
name|getPrivilegeManager
argument_list|(
name|root
argument_list|)
operator|.
name|registerPrivilege
argument_list|(
name|privName
argument_list|,
literal|false
argument_list|,
name|aggr
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|setPrivilegeBits
parameter_list|(
annotation|@
name|NotNull
name|Tree
name|tree
parameter_list|,
annotation|@
name|NotNull
name|String
name|name
parameter_list|,
name|long
name|value
parameter_list|)
block|{
name|tree
operator|.
name|setProperty
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|name
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
name|value
argument_list|)
argument_list|,
name|Type
operator|.
name|LONGS
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|NotNull
specifier|private
name|PrivilegeValidator
name|createPrivilegeValidator
parameter_list|()
block|{
name|Root
name|immutable
init|=
name|getRootProvider
argument_list|()
operator|.
name|createReadOnlyRoot
argument_list|(
name|root
argument_list|)
decl_stmt|;
return|return
operator|new
name|PrivilegeValidator
argument_list|(
name|immutable
argument_list|,
name|immutable
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|CommitFailedException
name|assertCommitFailed
parameter_list|(
annotation|@
name|NotNull
name|CommitFailedException
name|e
parameter_list|,
name|int
name|code
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|code
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|e
return|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingPrivilegeBits
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createPrivilegeTree
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|21
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testBitsConflict
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Tree
name|privTree
init|=
name|createPrivilegeTree
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|bitsProvider
operator|.
name|getBits
argument_list|(
name|JCR_READ
argument_list|)
operator|.
name|writeTo
argument_list|(
name|privTree
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|49
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testBitsConflictWithAggregation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Tree
name|privTree
init|=
name|createPrivilegeTree
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|privTree
operator|.
name|setProperty
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|JCR_READ
argument_list|,
name|JCR_MODIFY_PROPERTIES
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
argument_list|)
expr_stmt|;
name|setPrivilegeBits
argument_list|(
name|privTree
argument_list|,
name|REP_BITS
argument_list|,
literal|340
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|53
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNextNotUpdated
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Tree
name|privTree
init|=
name|createPrivilegeTree
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|PrivilegeBits
operator|.
name|getInstance
argument_list|(
name|privilegesTree
argument_list|)
operator|.
name|writeTo
argument_list|(
name|privTree
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|43
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testChangeNext
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|setPrivilegeBits
argument_list|(
name|bitsProvider
operator|.
name|getPrivilegesTree
argument_list|()
argument_list|,
name|REP_NEXT
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|43
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testSingularAggregation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Tree
name|privTree
init|=
name|createPrivilegeTree
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|privTree
operator|.
name|setProperty
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|JCR_READ
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
argument_list|)
expr_stmt|;
name|PrivilegeBits
operator|.
name|getInstance
argument_list|(
name|bitsProvider
operator|.
name|getBits
argument_list|(
name|JCR_READ
argument_list|)
argument_list|)
operator|.
name|writeTo
argument_list|(
name|privTree
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Aggregation of a single privilege is invalid."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|50
argument_list|)
throw|;
block|}
block|}
comment|/**      * @see<a href="https://issues.apache.org/jira/browse/OAK-2413">OAK-2413</a>      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testChildNodeChangedWithChanges
parameter_list|()
throws|throws
name|CommitFailedException
block|{
name|NodeBuilder
name|nb
init|=
name|EmptyNodeState
operator|.
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
decl_stmt|;
name|nb
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|NodeState
name|privilegeDefinition
init|=
name|nb
operator|.
name|getNodeState
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|NT_REP_PRIVILEGE
operator|.
name|equals
argument_list|(
name|NodeStateUtils
operator|.
name|getPrimaryTypeName
argument_list|(
name|privilegeDefinition
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|PrivilegeValidator
name|pv
init|=
operator|new
name|PrivilegeValidator
argument_list|(
name|root
argument_list|,
name|root
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|pv
operator|.
name|childNodeChanged
argument_list|(
literal|"test"
argument_list|,
name|privilegeDefinition
argument_list|,
name|EmptyNodeState
operator|.
name|EMPTY_NODE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|41
argument_list|)
throw|;
block|}
block|}
comment|/**      * @see<a href="https://issues.apache.org/jira/browse/OAK-2413">OAK-2413</a>      */
annotation|@
name|Test
specifier|public
name|void
name|testChildNodeChangedWithoutChanges
parameter_list|()
throws|throws
name|CommitFailedException
block|{
name|NodeBuilder
name|nb
init|=
name|EmptyNodeState
operator|.
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
decl_stmt|;
name|nb
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|NodeState
name|privilegeDefinition
init|=
name|nb
operator|.
name|getNodeState
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|NT_REP_PRIVILEGE
argument_list|,
name|NodeStateUtils
operator|.
name|getPrimaryTypeName
argument_list|(
name|privilegeDefinition
argument_list|)
argument_list|)
expr_stmt|;
name|PrivilegeValidator
name|pv
init|=
operator|new
name|PrivilegeValidator
argument_list|(
name|root
argument_list|,
name|root
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|pv
operator|.
name|childNodeChanged
argument_list|(
literal|"test"
argument_list|,
name|privilegeDefinition
argument_list|,
name|privilegeDefinition
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAggregatesIncludesJcrAll
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Tree
name|privTree
init|=
name|createPrivilegeTree
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|privTree
operator|.
name|setProperty
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|JCR_ALL
argument_list|,
name|JCR_READ
argument_list|,
name|JCR_WRITE
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
argument_list|)
expr_stmt|;
name|PrivilegeBits
operator|.
name|getInstance
argument_list|(
name|bitsProvider
operator|.
name|getBits
argument_list|(
name|JCR_ALL
argument_list|,
name|JCR_READ
argument_list|,
name|JCR_WRITE
argument_list|)
argument_list|)
operator|.
name|writeTo
argument_list|(
name|privTree
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|53
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAggregatesMatchesExisting
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Tree
name|privTree
init|=
name|createPrivilegeTree
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|privTree
operator|.
name|setProperty
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|REP_READ_NODES
argument_list|,
name|REP_READ_PROPERTIES
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
argument_list|)
expr_stmt|;
name|PrivilegeBits
operator|.
name|getInstance
argument_list|(
name|bitsProvider
operator|.
name|getBits
argument_list|(
name|REP_READ_NODES
argument_list|,
name|REP_READ_PROPERTIES
argument_list|)
argument_list|)
operator|.
name|writeTo
argument_list|(
name|privTree
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|53
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testPropertyChanged
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|PropertyState
name|before
init|=
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|REP_READ_NODES
argument_list|,
name|REP_READ_PROPERTIES
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
decl_stmt|;
name|PropertyState
name|after
init|=
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|REP_READ_NODES
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
operator|new
name|PrivilegeValidator
argument_list|(
name|root
argument_list|,
name|root
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
decl_stmt|;
name|validator
operator|.
name|propertyChanged
argument_list|(
name|before
argument_list|,
name|after
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|45
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testPropertyDeleted
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|PropertyState
name|before
init|=
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|REP_READ_NODES
argument_list|,
name|REP_READ_PROPERTIES
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
operator|new
name|PrivilegeValidator
argument_list|(
name|root
argument_list|,
name|root
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
decl_stmt|;
name|validator
operator|.
name|propertyDeleted
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|46
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testChildNodeDeleted
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|root
operator|.
name|getTree
argument_list|(
name|PRIVILEGES_PATH
argument_list|)
operator|.
name|getChild
argument_list|(
name|JCR_READ
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|42
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testPrivBitsMissing
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|NodeState
name|newDef
init|=
operator|new
name|MemoryNodeBuilder
argument_list|(
name|EmptyNodeState
operator|.
name|EMPTY_NODE
argument_list|)
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|)
operator|.
name|getNodeState
argument_list|()
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|childNodeAdded
argument_list|(
literal|"test"
argument_list|,
name|newDef
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|48
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testUnknownAggregate
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|NodeState
name|newDef
init|=
operator|new
name|MemoryNodeBuilder
argument_list|(
name|EmptyNodeState
operator|.
name|EMPTY_NODE
argument_list|)
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|)
operator|.
name|setProperty
argument_list|(
name|REP_BITS
argument_list|,
literal|8
argument_list|)
operator|.
name|setProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"unknown"
argument_list|,
name|JCR_READ
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
operator|.
name|getNodeState
argument_list|()
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|childNodeAdded
argument_list|(
literal|"test"
argument_list|,
name|newDef
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|51
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCircularAggregate
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|register
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|NodeState
name|newDef
init|=
operator|new
name|MemoryNodeBuilder
argument_list|(
name|EmptyNodeState
operator|.
name|EMPTY_NODE
argument_list|)
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|)
operator|.
name|setProperty
argument_list|(
name|REP_BITS
argument_list|,
literal|8
argument_list|)
operator|.
name|setProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"test"
argument_list|,
name|JCR_READ
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
operator|.
name|getNodeState
argument_list|()
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|childNodeAdded
argument_list|(
literal|"test"
argument_list|,
name|newDef
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|52
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCircularAggregate2
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|register
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|register
argument_list|(
literal|"test2"
argument_list|,
literal|"test"
argument_list|,
name|PrivilegeConstants
operator|.
name|JCR_READ
argument_list|)
expr_stmt|;
name|NodeState
name|newDef
init|=
operator|new
name|MemoryNodeBuilder
argument_list|(
name|EmptyNodeState
operator|.
name|EMPTY_NODE
argument_list|)
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|)
operator|.
name|setProperty
argument_list|(
name|REP_BITS
argument_list|,
literal|8
argument_list|)
operator|.
name|setProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"test2"
argument_list|,
name|JCR_READ
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
operator|.
name|getNodeState
argument_list|()
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|childNodeAdded
argument_list|(
literal|"test"
argument_list|,
name|newDef
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|52
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testInvalidAggregation
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|before
init|=
name|adminSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|defsBefore
init|=
name|before
operator|.
name|getTree
argument_list|(
name|PRIVILEGES_PATH
argument_list|)
decl_stmt|;
name|defsBefore
operator|.
name|getChild
argument_list|(
name|REP_READ_NODES
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|Tree
name|privDefs
init|=
name|root
operator|.
name|getTree
argument_list|(
name|PRIVILEGES_PATH
argument_list|)
decl_stmt|;
name|Tree
name|newPriv
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|privDefs
argument_list|,
literal|"newPriv"
argument_list|,
name|NT_REP_PRIVILEGE
argument_list|)
decl_stmt|;
name|PrivilegeBits
operator|.
name|getInstance
argument_list|(
name|PrivilegeBits
operator|.
name|BUILT_IN
operator|.
name|get
argument_list|(
name|JCR_READ
argument_list|)
argument_list|,
name|PrivilegeBits
operator|.
name|BUILT_IN
operator|.
name|get
argument_list|(
name|JCR_ADD_CHILD_NODES
argument_list|)
argument_list|)
operator|.
name|writeTo
argument_list|(
name|newPriv
argument_list|)
expr_stmt|;
name|newPriv
operator|.
name|setProperty
argument_list|(
name|REP_AGGREGATES
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|JCR_READ
argument_list|,
name|JCR_ADD_CHILD_NODES
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
expr_stmt|;
name|TreeProvider
name|tp
init|=
name|mock
argument_list|(
name|TreeProvider
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|tp
operator|.
name|createReadOnlyTree
argument_list|(
name|any
argument_list|(
name|Tree
operator|.
name|class
argument_list|)
argument_list|,
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|NodeState
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newPriv
argument_list|)
expr_stmt|;
try|try
block|{
name|PrivilegeValidator
name|validator
init|=
operator|new
name|PrivilegeValidator
argument_list|(
name|before
argument_list|,
name|root
argument_list|,
name|tp
argument_list|)
decl_stmt|;
name|validator
operator|.
name|childNodeAdded
argument_list|(
literal|"newPriv"
argument_list|,
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|newPriv
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|47
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOtherNodeAdded
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeState
name|ns
init|=
name|mock
argument_list|(
name|NodeState
operator|.
name|class
argument_list|)
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|validator
operator|.
name|childNodeAdded
argument_list|(
literal|"test"
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ns
operator|.
name|getProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_OAK_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|validator
operator|.
name|childNodeAdded
argument_list|(
literal|"test"
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOtherNodeChanged
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeState
name|ns
init|=
name|mock
argument_list|(
name|NodeState
operator|.
name|class
argument_list|)
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|validator
operator|.
name|childNodeChanged
argument_list|(
literal|"test"
argument_list|,
name|ns
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ns
operator|.
name|getProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_OAK_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|validator
operator|.
name|childNodeChanged
argument_list|(
literal|"test"
argument_list|,
name|ns
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOtherNodeDeleted
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeState
name|ns
init|=
name|mock
argument_list|(
name|NodeState
operator|.
name|class
argument_list|)
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|validator
operator|.
name|childNodeDeleted
argument_list|(
literal|"test"
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ns
operator|.
name|getProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_OAK_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|validator
operator|.
name|childNodeDeleted
argument_list|(
literal|"test"
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNonExistingPrivilegeRoot
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|t
init|=
name|when
argument_list|(
name|mock
argument_list|(
name|Tree
operator|.
name|class
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|Root
name|r
init|=
name|when
argument_list|(
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
operator|.
name|getTree
argument_list|(
name|PRIVILEGES_PATH
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|t
argument_list|)
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|PrivilegeValidator
name|validator
init|=
operator|new
name|PrivilegeValidator
argument_list|(
name|r
argument_list|,
name|r
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|PropertyState
name|ps
init|=
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|REP_NEXT
argument_list|,
literal|"any"
argument_list|)
decl_stmt|;
name|validator
operator|.
name|propertyChanged
argument_list|(
name|ps
argument_list|,
name|ps
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|assertCommitFailed
argument_list|(
name|e
argument_list|,
literal|44
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropertyAdded
parameter_list|()
block|{
name|PrivilegeValidator
name|validator
init|=
name|createPrivilegeValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|propertyAdded
argument_list|(
name|mock
argument_list|(
name|PropertyState
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

