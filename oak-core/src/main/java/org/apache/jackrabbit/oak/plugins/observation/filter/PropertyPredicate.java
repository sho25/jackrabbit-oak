begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|observation
operator|.
name|filter
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|core
operator|.
name|GuavaDeprecation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_comment
comment|/**  * Predicate on property values. This property holds if and only if  * the node has a property of the given {@code name} and the given  * {@code propertyPredicate} holds on that property.  */
end_comment

begin_class
specifier|public
class|class
name|PropertyPredicate
implements|implements
name|Predicate
argument_list|<
name|NodeState
argument_list|>
implements|,
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Predicate
argument_list|<
name|NodeState
argument_list|>
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|Predicate
argument_list|<
name|PropertyState
argument_list|>
name|propertyPredicate
decl_stmt|;
comment|/**      * @param name               name of the property      * @param propertyPredicate  predicate on the named property      */
specifier|public
name|PropertyPredicate
parameter_list|(
annotation|@
name|NotNull
name|String
name|name
parameter_list|,
annotation|@
name|NotNull
name|Predicate
argument_list|<
name|PropertyState
argument_list|>
name|propertyPredicate
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|checkNotNull
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|propertyPredicate
operator|=
name|checkNotNull
argument_list|(
name|propertyPredicate
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|test
parameter_list|(
name|NodeState
name|node
parameter_list|)
block|{
name|PropertyState
name|property
init|=
name|node
operator|.
name|getProperty
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|property
operator|!=
literal|null
operator|&&
name|propertyPredicate
operator|.
name|test
argument_list|(
name|property
argument_list|)
return|;
block|}
comment|/**      * @deprecated use {@link #test(NodeState)} instead  (see<a href="https://issues.apache.org/jira/browse/OAK-8874">OAK-8874</a>)      */
annotation|@
name|Deprecated
annotation|@
name|Override
specifier|public
name|boolean
name|apply
parameter_list|(
name|NodeState
name|node
parameter_list|)
block|{
name|GuavaDeprecation
operator|.
name|handleCall
argument_list|(
literal|"OAK-8874"
argument_list|)
expr_stmt|;
return|return
name|test
argument_list|(
name|node
argument_list|)
return|;
block|}
block|}
end_class

end_unit

