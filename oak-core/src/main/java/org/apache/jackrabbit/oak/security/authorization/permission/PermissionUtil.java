begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|CheckForNull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_comment
comment|/**  * PermissionUtil... TODO  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|PermissionUtil
block|{
specifier|private
name|PermissionUtil
parameter_list|()
block|{}
annotation|@
name|CheckForNull
specifier|public
specifier|static
name|String
name|getParentPathOrNull
parameter_list|(
annotation|@
name|Nonnull
name|String
name|path
parameter_list|)
block|{
return|return
operator|(
name|PathUtils
operator|.
name|denotesRoot
argument_list|(
name|path
argument_list|)
operator|||
name|path
operator|.
name|isEmpty
argument_list|()
operator|)
condition|?
literal|null
else|:
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|path
argument_list|,
literal|1
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|String
name|getEntryName
parameter_list|(
annotation|@
name|Nullable
name|String
name|accessControlledPath
parameter_list|)
block|{
name|String
name|path
init|=
name|Strings
operator|.
name|nullToEmpty
argument_list|(
name|accessControlledPath
argument_list|)
decl_stmt|;
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|path
operator|.
name|hashCode
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

