begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|InitialContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|AsyncIndexUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|TrackingCorruptIndexHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|counter
operator|.
name|NodeCounterEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|IndexDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|nodetype
operator|.
name|NodeTypeIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|property
operator|.
name|PropertyIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|MemoryBlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Observer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|OpenSecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|CompositeIndexEditorProvider
operator|.
name|compose
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Tests marking index as corrupt if blob is missing.  */
end_comment

begin_class
specifier|public
class|class
name|AsyncIndexUpdateCorruptMarkingTest
block|{
specifier|private
specifier|final
name|long
name|INDEX_CORRUPT_INTERVAL_IN_MILLIS
init|=
literal|100
decl_stmt|;
specifier|private
name|MemoryBlobStore
name|blobStore
decl_stmt|;
specifier|protected
name|Root
name|root
decl_stmt|;
specifier|private
name|AsyncIndexUpdate
name|asyncIndexUpdate
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|ContentSession
name|session
init|=
name|createRepository
argument_list|()
operator|.
name|login
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|root
operator|=
name|session
operator|.
name|getLatestRoot
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|ContentRepository
name|createRepository
parameter_list|()
block|{
name|NodeStore
name|nodeStore
init|=
operator|new
name|MemoryNodeStore
argument_list|()
decl_stmt|;
name|blobStore
operator|=
operator|new
name|MemoryBlobStore
argument_list|()
expr_stmt|;
name|blobStore
operator|.
name|setBlockSizeMin
argument_list|(
literal|48
argument_list|)
expr_stmt|;
comment|//make it as small as possible
name|LuceneIndexEditorProvider
name|luceneIndexEditorProvider
init|=
operator|new
name|LuceneIndexEditorProvider
argument_list|()
decl_stmt|;
name|LuceneIndexProvider
name|provider
init|=
operator|new
name|LuceneIndexProvider
argument_list|()
decl_stmt|;
name|luceneIndexEditorProvider
operator|.
name|setBlobStore
argument_list|(
name|blobStore
argument_list|)
expr_stmt|;
name|asyncIndexUpdate
operator|=
operator|new
name|AsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|,
name|nodeStore
argument_list|,
name|compose
argument_list|(
name|newArrayList
argument_list|(
name|luceneIndexEditorProvider
argument_list|,
operator|new
name|NodeCounterEditorProvider
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|TrackingCorruptIndexHandler
name|trackingCorruptIndexHandler
init|=
operator|new
name|TrackingCorruptIndexHandler
argument_list|()
decl_stmt|;
name|trackingCorruptIndexHandler
operator|.
name|setCorruptInterval
argument_list|(
name|INDEX_CORRUPT_INTERVAL_IN_MILLIS
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|setCorruptIndexHandler
argument_list|(
name|trackingCorruptIndexHandler
argument_list|)
expr_stmt|;
return|return
operator|new
name|Oak
argument_list|(
name|nodeStore
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|InitialContent
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|OpenSecurityProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|(
name|QueryIndexProvider
operator|)
name|provider
argument_list|)
operator|.
name|with
argument_list|(
operator|(
name|Observer
operator|)
name|provider
argument_list|)
operator|.
name|with
argument_list|(
name|luceneIndexEditorProvider
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|PropertyIndexEditorProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|NodeTypeIndexProvider
argument_list|()
argument_list|)
operator|.
name|createContentRepository
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLuceneIndexSegmentStats
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexDefinitionBuilder
name|idxb
init|=
operator|new
name|IndexDefinitionBuilder
argument_list|()
decl_stmt|;
name|idxb
operator|.
name|indexRule
argument_list|(
literal|"nt:base"
argument_list|)
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|analyzed
argument_list|()
operator|.
name|nodeScopeIndex
argument_list|()
operator|.
name|ordered
argument_list|()
operator|.
name|useInExcerpt
argument_list|()
operator|.
name|propertyIndex
argument_list|()
expr_stmt|;
name|idxb
operator|.
name|build
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
literal|"/oak:index"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"lucenePropertyIndex"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add content and index it successfully
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c1"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Indexing must succeed without us intervening"
argument_list|,
name|asyncIndexUpdate
operator|.
name|isFailing
argument_list|()
argument_list|)
expr_stmt|;
comment|// create some content and delete blobs such that the indexing run fails
name|deleteBlobs
argument_list|()
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c2"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
comment|// As blobs are deleted at this point index will be marked as bad.
name|assertTrue
argument_list|(
literal|"Indexing must fail after blob deletion"
argument_list|,
name|asyncIndexUpdate
operator|.
name|isFailing
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
literal|"Corrupt flag must not be set immediately after failure"
argument_list|,
name|root
operator|.
name|getTree
argument_list|(
literal|"/oak:index/lucenePropertyIndex"
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"corrupt"
argument_list|)
argument_list|)
expr_stmt|;
comment|// sleep to cross over corrupt interval and run indexing to maek corrupt
name|Thread
operator|.
name|sleep
argument_list|(
name|INDEX_CORRUPT_INTERVAL_IN_MILLIS
operator|+
literal|10
argument_list|)
expr_stmt|;
comment|// 10ms buffer to definitely be ahead of corrupt interval
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
comment|// after corrupt interval index will be marked as corrupt.
name|assertTrue
argument_list|(
literal|"Indexing must continue to fail after blob deletion"
argument_list|,
name|asyncIndexUpdate
operator|.
name|isFailing
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Corrupt flag must get set"
argument_list|,
name|root
operator|.
name|getTree
argument_list|(
literal|"/oak:index/lucenePropertyIndex"
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"corrupt"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|deleteBlobs
parameter_list|()
throws|throws
name|IOException
block|{
name|blobStore
operator|.
name|clearInUse
argument_list|()
expr_stmt|;
name|blobStore
operator|.
name|startMark
argument_list|()
expr_stmt|;
name|blobStore
operator|.
name|sweep
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

