begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_enum
specifier|public
enum|enum
name|MimeType
block|{
name|APPLICATION_DVI
argument_list|(
literal|"application/x-dvi"
argument_list|)
block|,
name|APPLICATION_FLASH
argument_list|(
literal|"application/x-shockwave-flash"
argument_list|)
block|,
name|APPLICATION_INDESIGN
argument_list|(
literal|"application/x-indesign"
argument_list|)
block|,
name|APPLICATION_JAVAARCHIVE
argument_list|(
literal|"application/java-archive"
argument_list|)
block|,
name|APPLICATION_MSEXCEL
argument_list|(
literal|"application/vnd.ms-excel"
argument_list|)
block|,
name|APPLICATION_MSPOWERPOINT
argument_list|(
literal|"application/vnd.ms-powerpoint"
argument_list|)
block|,
name|APPLICATION_MSWORD
argument_list|(
literal|"application/msword"
argument_list|)
block|,
name|APPLICATION_OD_GRAPHICS
argument_list|(
literal|"application/vnd.oasis.opendocument.graphics"
argument_list|)
block|,
name|APPLICATION_OD_PRESENTATION
argument_list|(
literal|"application/vnd.oasis.opendocument.presentation"
argument_list|)
block|,
name|APPLICATION_OD_SPREADSHEET
argument_list|(
literal|"application/vnd.oasis.opendocument.spreadsheet"
argument_list|)
block|,
name|APPLICATION_OD_TEXT
argument_list|(
literal|"application/vnd.oasis.opendocument.text"
argument_list|)
block|,
name|APPLICATION_OXML_DOCUMENT
argument_list|(
literal|"application/vnd.openxmlformats-officedocument.wordprocessingml.document"
argument_list|)
block|,
name|APPLICATION_OXML_PRESENTATION
argument_list|(
literal|"application/vnd.openxmlformats-officedocument.presentationml.presentation"
argument_list|)
block|,
name|APPLICATION_OX_SPREADSHEET
argument_list|(
literal|"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
argument_list|)
block|,
name|APPLICATION_PACKAGE
argument_list|(
literal|"application/vnd.adobe.air-application-installer-package+zip"
argument_list|)
block|,
name|APPLICATION_PDF
argument_list|(
literal|"application/pdf"
argument_list|)
block|,
name|APPLICATION_POSTSCRIPT
argument_list|(
literal|"application/postscript"
argument_list|)
block|,
name|APPLICATION_QUARKXPRESS
argument_list|(
literal|"application.vnd.quark.quarkxpress"
argument_list|)
block|,
name|APPLICATION_RAR
argument_list|(
literal|"application/x-rar-compressed"
argument_list|)
block|,
name|APPLICATION_TAR
argument_list|(
literal|"application/x-tar"
argument_list|)
block|,
name|APPLICATION_TARGZ
argument_list|(
literal|"application/x-tar-gz"
argument_list|)
block|,
name|APPLICATION_ZIP
argument_list|(
literal|"application/zip"
argument_list|)
block|,
name|AUDIO_3GPP
argument_list|(
literal|"audio/3gpp"
argument_list|)
block|,
name|AUDIO_AAC
argument_list|(
literal|"audio/x-aac"
argument_list|)
block|,
name|AUDIO_MIDI
argument_list|(
literal|"audio/midi"
argument_list|)
block|,
name|AUDIO_MP3
argument_list|(
literal|"audio/mp3"
argument_list|)
block|,
name|AUDIO_MP4
argument_list|(
literal|"audio/mp4"
argument_list|)
block|,
name|AUDIO_MPEG
argument_list|(
literal|"audio/mpeg"
argument_list|)
block|,
name|AUDIO_OGG
argument_list|(
literal|"audio/ogg"
argument_list|)
block|,
name|AUDIO_REALAUDIO
argument_list|(
literal|"audio/vnd.rn-realaudio"
argument_list|)
block|,
name|AUDIO_VORBIS
argument_list|(
literal|"audio/vorbis"
argument_list|)
block|,
name|AUDIO_WAV
argument_list|(
literal|"audio/x-wav"
argument_list|)
block|,
name|AUDIO_WMA
argument_list|(
literal|"audio/x-ms-wma"
argument_list|)
block|,
name|IMAGE_BMP
argument_list|(
literal|"image/x-bmp"
argument_list|)
block|,
name|IMAGE_BPM
argument_list|(
literal|"image/pbm"
argument_list|)
block|,
name|IMAGE_DCRAW
argument_list|(
literal|"image/x-dcraw"
argument_list|)
block|,
name|IMAGE_DNG
argument_list|(
literal|"image/x-adobe-dng"
argument_list|)
block|,
name|IMAGE_GIF
argument_list|(
literal|"image/gif"
argument_list|)
block|,
name|IMAGE_ICON
argument_list|(
literal|"image/vnd.microsoft.icon"
argument_list|)
block|,
name|IMAGE_JPEG
argument_list|(
literal|"image/jpeg"
argument_list|)
block|,
name|IMAGE_PHOTOSHOP
argument_list|(
literal|"image/vnd.adobe.photoshop"
argument_list|)
block|,
name|IMAGE_PJPEG
argument_list|(
literal|"image/pjpeg"
argument_list|)
block|,
name|IMAGE_PNG
argument_list|(
literal|"image/png"
argument_list|)
block|,
name|IMAGE_PPM
argument_list|(
literal|"image/x-ppm"
argument_list|)
block|,
name|IMAGE_RAW_NIKON
argument_list|(
literal|"image/x-raw-nikon"
argument_list|)
block|,
name|IMAGE_SVG
argument_list|(
literal|"image/svg+xml"
argument_list|)
block|,
name|IMAGE_TIFF
argument_list|(
literal|"image/tiff"
argument_list|)
block|,
name|IMAGE_XCF
argument_list|(
literal|"image/x-xcf"
argument_list|)
block|,
name|IMAGE_XPBM
argument_list|(
literal|"image/x-pbm"
argument_list|)
block|,
name|TEXT_HTML
argument_list|(
literal|"text/html"
argument_list|)
block|,
name|TEXT_PLAIN
argument_list|(
literal|"text/plain"
argument_list|)
block|,
name|TEXT_RTF
argument_list|(
literal|"text/rtf"
argument_list|)
block|,
name|VIDEO_MP4
argument_list|(
literal|"video/mp4"
argument_list|)
block|,
name|VIDEO_MPEG
argument_list|(
literal|"video/mpeg"
argument_list|)
block|,
name|VIDEO_OGG
argument_list|(
literal|"video/ogg"
argument_list|)
block|,
name|VIDEO_QUICKTIME
argument_list|(
literal|"video/quicktime"
argument_list|)
block|,
name|VIDEO_WMV
argument_list|(
literal|"video/x-ms-wmv"
argument_list|)
block|,
name|VIDEO_XFLV
argument_list|(
literal|"video/x-flv"
argument_list|)
block|;
specifier|private
specifier|final
name|String
name|value
decl_stmt|;
name|MimeType
parameter_list|(
annotation|@
name|NotNull
specifier|final
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * retrieve the string representation of the current Mime-Type      * @return      */
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|MimeType
argument_list|>
name|VALUES
init|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|values
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|SIZE
init|=
name|VALUES
operator|.
name|size
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Random
name|RND
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
comment|/**      * retrieve a random Mime-Type from the available collection      * @return      */
specifier|public
specifier|static
name|MimeType
name|randomMimeType
parameter_list|()
block|{
return|return
name|VALUES
operator|.
name|get
argument_list|(
name|RND
operator|.
name|nextInt
argument_list|(
name|SIZE
argument_list|)
argument_list|)
return|;
block|}
block|}
end_enum

end_unit

