begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|aws
operator|.
name|ext
operator|.
name|ds
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|Backend
import|;
end_import

begin_comment
comment|/**  * This class intialize {@link S3DataStore} with the give bucket. The other  * configuration are taken from configuration file. This class is implemented so  * that each test case run in its own bucket. It was required as deletions in  * bucket are not immediately reflected in the next test case.  */
end_comment

begin_class
specifier|public
class|class
name|S3TestDataStore
extends|extends
name|S3DataStore
block|{
name|Properties
name|props
decl_stmt|;
specifier|public
name|S3TestDataStore
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|S3TestDataStore
parameter_list|(
name|Properties
name|props
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|props
operator|=
name|props
expr_stmt|;
block|}
specifier|protected
name|Backend
name|createBackend
parameter_list|()
block|{
name|Backend
name|backend
init|=
operator|new
name|S3Backend
argument_list|()
decl_stmt|;
operator|(
operator|(
name|S3Backend
operator|)
name|backend
operator|)
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
return|return
name|backend
return|;
block|}
block|}
end_class

end_unit

