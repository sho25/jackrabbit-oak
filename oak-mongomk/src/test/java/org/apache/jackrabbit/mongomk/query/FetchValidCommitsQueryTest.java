begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|query
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|BaseMongoTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|CommitMongo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|query
operator|.
name|FetchValidCommitsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|scenario
operator|.
name|SimpleNodeScenario
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|FetchValidCommitsQueryTest
extends|extends
name|BaseMongoTest
block|{
specifier|private
specifier|static
specifier|final
name|int
name|MIN_COMMITS
init|=
literal|1
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|SIMPLE_SCENARIO_COMMITS
init|=
name|MIN_COMMITS
operator|+
literal|1
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|simple
parameter_list|()
throws|throws
name|Exception
block|{
name|FetchValidCommitsQuery
name|query
init|=
operator|new
name|FetchValidCommitsQuery
argument_list|(
name|mongoConnection
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
comment|/*maxRevisionId*/
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|CommitMongo
argument_list|>
name|commits
init|=
name|query
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|MIN_COMMITS
argument_list|,
name|commits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleNodeScenario
name|scenario
init|=
operator|new
name|SimpleNodeScenario
argument_list|(
name|mongoConnection
argument_list|)
decl_stmt|;
name|scenario
operator|.
name|create
argument_list|()
expr_stmt|;
name|commits
operator|=
name|query
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|SIMPLE_SCENARIO_COMMITS
argument_list|,
name|commits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|numberOfChildren
init|=
literal|3
decl_stmt|;
name|scenario
operator|.
name|addChildrenToA
argument_list|(
name|numberOfChildren
argument_list|)
expr_stmt|;
name|commits
operator|=
name|query
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|SIMPLE_SCENARIO_COMMITS
operator|+
name|numberOfChildren
argument_list|,
name|commits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|revisionId
parameter_list|()
throws|throws
name|Exception
block|{
name|FetchValidCommitsQuery
name|query
init|=
operator|new
name|FetchValidCommitsQuery
argument_list|(
name|mongoConnection
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
comment|/*maxRevisionId*/
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|CommitMongo
argument_list|>
name|commits
init|=
name|query
operator|.
name|execute
argument_list|()
decl_stmt|;
name|CommitMongo
name|commit0
init|=
name|commits
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SimpleNodeScenario
name|scenario
init|=
operator|new
name|SimpleNodeScenario
argument_list|(
name|mongoConnection
argument_list|)
decl_stmt|;
name|scenario
operator|.
name|create
argument_list|()
expr_stmt|;
name|commits
operator|=
name|query
operator|.
name|execute
argument_list|()
expr_stmt|;
name|CommitMongo
name|commit1
init|=
name|commits
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|commit0
operator|.
name|getRevisionId
argument_list|()
operator|<
name|commit1
operator|.
name|getRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|numberOfChildren
init|=
literal|3
decl_stmt|;
name|scenario
operator|.
name|addChildrenToA
argument_list|(
name|numberOfChildren
argument_list|)
expr_stmt|;
name|commits
operator|=
name|query
operator|.
name|execute
argument_list|()
expr_stmt|;
name|CommitMongo
name|commit2
init|=
name|commits
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|commit1
operator|.
name|getRevisionId
argument_list|()
operator|<
name|commit2
operator|.
name|getRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|time
parameter_list|()
throws|throws
name|Exception
block|{
name|FetchValidCommitsQuery
name|query
init|=
operator|new
name|FetchValidCommitsQuery
argument_list|(
name|mongoConnection
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
comment|/*maxRevisionId*/
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|CommitMongo
argument_list|>
name|commits
init|=
name|query
operator|.
name|execute
argument_list|()
decl_stmt|;
name|CommitMongo
name|commit0
init|=
name|commits
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|SimpleNodeScenario
name|scenario
init|=
operator|new
name|SimpleNodeScenario
argument_list|(
name|mongoConnection
argument_list|)
decl_stmt|;
name|scenario
operator|.
name|create
argument_list|()
expr_stmt|;
name|commits
operator|=
name|query
operator|.
name|execute
argument_list|()
expr_stmt|;
name|CommitMongo
name|commit1
init|=
name|commits
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|commit0
operator|.
name|getTimestamp
argument_list|()
operator|<
name|commit1
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|int
name|numberOfChildren
init|=
literal|3
decl_stmt|;
name|scenario
operator|.
name|addChildrenToA
argument_list|(
name|numberOfChildren
argument_list|)
expr_stmt|;
name|commits
operator|=
name|query
operator|.
name|execute
argument_list|()
expr_stmt|;
name|CommitMongo
name|commit2
init|=
name|commits
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|commit1
operator|.
name|getTimestamp
argument_list|()
operator|<
name|commit2
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|maxEntriesDefaultLimitless
parameter_list|()
throws|throws
name|Exception
block|{
name|SimpleNodeScenario
name|scenario
init|=
operator|new
name|SimpleNodeScenario
argument_list|(
name|mongoConnection
argument_list|)
decl_stmt|;
name|scenario
operator|.
name|create
argument_list|()
expr_stmt|;
name|int
name|numberOfChildren
init|=
literal|2
decl_stmt|;
name|scenario
operator|.
name|addChildrenToA
argument_list|(
name|numberOfChildren
argument_list|)
expr_stmt|;
name|int
name|maxEntries
init|=
literal|0
decl_stmt|;
name|FetchValidCommitsQuery
name|query
init|=
operator|new
name|FetchValidCommitsQuery
argument_list|(
name|mongoConnection
argument_list|,
name|maxEntries
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|CommitMongo
argument_list|>
name|commits
init|=
name|query
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|SIMPLE_SCENARIO_COMMITS
operator|+
name|numberOfChildren
argument_list|,
name|commits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|maxEntries
parameter_list|()
throws|throws
name|Exception
block|{
name|SimpleNodeScenario
name|scenario
init|=
operator|new
name|SimpleNodeScenario
argument_list|(
name|mongoConnection
argument_list|)
decl_stmt|;
name|scenario
operator|.
name|create
argument_list|()
expr_stmt|;
name|int
name|numberOfChildren
init|=
literal|2
decl_stmt|;
name|scenario
operator|.
name|addChildrenToA
argument_list|(
name|numberOfChildren
argument_list|)
expr_stmt|;
name|int
name|maxEntries
init|=
literal|2
decl_stmt|;
name|FetchValidCommitsQuery
name|query
init|=
operator|new
name|FetchValidCommitsQuery
argument_list|(
name|mongoConnection
argument_list|,
name|maxEntries
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|CommitMongo
argument_list|>
name|commits
init|=
name|query
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|maxEntries
argument_list|,
name|commits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

