begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|Mount
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|MountInfoProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|never
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|AuthorizationInitializerTest
block|{
specifier|private
name|AuthorizationInitializer
name|initializer
decl_stmt|;
specifier|private
name|NodeBuilder
name|builder
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
block|{
name|Mount
name|m
init|=
name|when
argument_list|(
name|mock
argument_list|(
name|Mount
operator|.
name|class
argument_list|)
operator|.
name|getPathFragmentName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"mount"
argument_list|)
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|MountInfoProvider
name|mip
init|=
name|when
argument_list|(
name|mock
argument_list|(
name|MountInfoProvider
operator|.
name|class
argument_list|)
operator|.
name|getNonDefaultMounts
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|m
argument_list|)
argument_list|)
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|initializer
operator|=
operator|new
name|AuthorizationInitializer
argument_list|(
name|mip
argument_list|)
expr_stmt|;
name|builder
operator|=
name|mock
argument_list|(
name|NodeBuilder
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|builder
operator|.
name|child
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|builder
operator|.
name|setProperty
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Type
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|builder
operator|.
name|setProperty
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|builder
operator|.
name|setProperty
argument_list|(
name|any
argument_list|(
name|PropertyState
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFirstInit
parameter_list|()
block|{
name|when
argument_list|(
name|builder
operator|.
name|hasChildNode
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|builder
operator|.
name|hasProperty
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|initializer
operator|.
name|initialize
argument_list|(
name|builder
argument_list|,
literal|"wspName"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|hasChildNode
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|6
argument_list|)
argument_list|)
operator|.
name|child
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|hasProperty
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|setProperty
argument_list|(
name|any
argument_list|(
name|PropertyState
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|setProperty
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|5
argument_list|)
argument_list|)
operator|.
name|setProperty
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Type
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSecondInit
parameter_list|()
block|{
name|when
argument_list|(
name|builder
operator|.
name|hasChildNode
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|builder
operator|.
name|hasProperty
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|initializer
operator|.
name|initialize
argument_list|(
name|builder
argument_list|,
literal|"wspName"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|hasChildNode
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|child
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|hasProperty
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|setProperty
argument_list|(
name|any
argument_list|(
name|PropertyState
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|setProperty
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|builder
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|setProperty
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Type
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

