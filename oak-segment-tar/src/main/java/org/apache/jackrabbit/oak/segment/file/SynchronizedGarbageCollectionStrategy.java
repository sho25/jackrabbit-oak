begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
class|class
name|SynchronizedGarbageCollectionStrategy
implements|implements
name|GarbageCollectionStrategy
block|{
specifier|private
specifier|final
name|Object
name|lock
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|GarbageCollectionStrategy
name|strategy
decl_stmt|;
name|SynchronizedGarbageCollectionStrategy
parameter_list|(
name|GarbageCollectionStrategy
name|strategy
parameter_list|)
block|{
name|this
operator|.
name|strategy
operator|=
name|strategy
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|collectGarbage
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|strategy
operator|.
name|collectGarbage
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|collectFullGarbage
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|strategy
operator|.
name|collectFullGarbage
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|collectTailGarbage
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|strategy
operator|.
name|collectTailGarbage
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|CompactionResult
name|compactFull
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|strategy
operator|.
name|compactFull
argument_list|(
name|context
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|CompactionResult
name|compactTail
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|strategy
operator|.
name|compactTail
argument_list|(
name|context
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|cleanup
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|strategy
operator|.
name|cleanup
argument_list|(
name|context
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

