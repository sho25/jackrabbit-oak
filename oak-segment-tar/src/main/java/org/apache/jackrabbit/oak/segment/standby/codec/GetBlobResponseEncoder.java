begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|standby
operator|.
name|codec
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
operator|.
name|Hasher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
operator|.
name|Hashing
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|buffer
operator|.
name|ByteBuf
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|MessageToByteEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|GetBlobResponseEncoder
extends|extends
name|MessageToByteEncoder
argument_list|<
name|GetBlobResponse
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|GetBlobResponseEncoder
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|encode
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|GetBlobResponse
name|msg
parameter_list|,
name|ByteBuf
name|out
parameter_list|)
throws|throws
name|Exception
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Sending blob {} to client {}"
argument_list|,
name|msg
operator|.
name|getBlobId
argument_list|()
argument_list|,
name|msg
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|encode
argument_list|(
name|msg
operator|.
name|getBlobId
argument_list|()
argument_list|,
name|msg
operator|.
name|getBlobData
argument_list|()
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|encode
parameter_list|(
name|String
name|blobId
parameter_list|,
name|byte
index|[]
name|data
parameter_list|,
name|ByteBuf
name|out
parameter_list|)
block|{
name|byte
index|[]
name|blobIdBytes
init|=
name|blobId
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|Hasher
name|hasher
init|=
name|Hashing
operator|.
name|murmur3_32
argument_list|()
operator|.
name|newHasher
argument_list|()
decl_stmt|;
name|long
name|hash
init|=
name|hasher
operator|.
name|putBytes
argument_list|(
name|data
argument_list|)
operator|.
name|hash
argument_list|()
operator|.
name|padToLong
argument_list|()
decl_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|1
operator|+
literal|4
operator|+
name|blobIdBytes
operator|.
name|length
operator|+
literal|8
operator|+
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeByte
argument_list|(
name|Messages
operator|.
name|HEADER_BLOB
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|blobIdBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBytes
argument_list|(
name|blobIdBytes
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|hash
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

