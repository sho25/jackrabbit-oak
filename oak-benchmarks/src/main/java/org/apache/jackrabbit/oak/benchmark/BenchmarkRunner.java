begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledThreadPoolExecutor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|ConsoleReporter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Counting
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricFilter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|MoreExecutors
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionParser
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionSet
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalLoginTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authentication
operator|.
name|external
operator|.
name|ListIdentitiesTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authentication
operator|.
name|external
operator|.
name|PrincipalNameResolutionTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncAllExternalUsersTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncExternalUsersTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authorization
operator|.
name|AceCreationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|wikipedia
operator|.
name|WikipediaImport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|JackrabbitRepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakRepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|RepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|metric
operator|.
name|MetricStatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ImportBehavior
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_class
specifier|public
class|class
name|BenchmarkRunner
block|{
specifier|private
specifier|static
specifier|final
name|int
name|MB
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|OptionParser
name|parser
init|=
operator|new
name|OptionParser
argument_list|()
decl_stmt|;
name|OptionSpec
argument_list|<
name|File
argument_list|>
name|base
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"base"
argument_list|,
literal|"Base directory"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|File
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|host
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"host"
argument_list|,
literal|"MongoDB host"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|defaultsTo
argument_list|(
literal|"localhost"
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|port
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"port"
argument_list|,
literal|"MongoDB port"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|27017
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|dbName
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"db"
argument_list|,
literal|"MongoDB database"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|mongouri
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"mongouri"
argument_list|,
literal|"MongoDB URI"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|dropDBAfterTest
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"dropDBAfterTest"
argument_list|,
literal|"Whether to drop the MongoDB database after the test"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|rdbjdbcuri
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"rdbjdbcuri"
argument_list|,
literal|"RDB JDBC URI"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|defaultsTo
argument_list|(
literal|"jdbc:h2:target/benchmark"
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|rdbjdbcuser
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"rdbjdbcuser"
argument_list|,
literal|"RDB JDBC user"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|defaultsTo
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|rdbjdbcpasswd
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"rdbjdbcpasswd"
argument_list|,
literal|"RDB JDBC password"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|defaultsTo
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|rdbjdbctableprefix
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"rdbjdbctableprefix"
argument_list|,
literal|"RDB JDBC table prefix"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|defaultsTo
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|mmap
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"mmap"
argument_list|,
literal|"TarMK memory mapping"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|"64"
operator|.
name|equals
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"sun.arch.data.model"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|cache
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"cache"
argument_list|,
literal|"cache size (MB)"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|fdsCache
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"blobCache"
argument_list|,
literal|"cache size (MB)"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|32
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|File
argument_list|>
name|wikipedia
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"wikipedia"
argument_list|,
literal|"Wikipedia dump"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|File
operator|.
name|class
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|luceneIndexOnFS
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"luceneIndexOnFS"
argument_list|,
literal|"Store Lucene index on file system"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|metrics
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"metrics"
argument_list|,
literal|"Enable Metrics collection"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|withStorage
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"storage"
argument_list|,
literal|"Index storage enabled"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|withServer
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"server"
argument_list|,
literal|"Solr server host"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|runAsAdmin
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"runAsAdmin"
argument_list|,
literal|"Run test using admin session"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|runAsUser
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"runAsUser"
argument_list|,
literal|"Run test using admin, anonymous or a test user"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|"admin"
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|runWithToken
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"runWithToken"
argument_list|,
literal|"Run test using a login token vs. simplecredentials"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|noIterations
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"noIterations"
argument_list|,
literal|"Change default 'passwordHashIterations' parameter."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|AbstractLoginTest
operator|.
name|DEFAULT_ITERATIONS
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Long
argument_list|>
name|expiration
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"expiration"
argument_list|,
literal|"Expiration time (e.g. principal cache."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Long
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|AbstractLoginTest
operator|.
name|NO_CACHE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|numberOfGroups
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"numberOfGroups"
argument_list|,
literal|"Number of groups to create."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|LoginWithMembershipTest
operator|.
name|NUMBER_OF_GROUPS_DEFAULT
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|numberOfInitialAce
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"numberOfInitialAce"
argument_list|,
literal|"Number of ACE to create before running the test."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|AceCreationTest
operator|.
name|NUMBER_OF_INITIAL_ACE_DEFAULT
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|nestedGroups
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"nestedGroups"
argument_list|,
literal|"Use nested groups."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|batchSize
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"batchSize"
argument_list|,
literal|"Batch size before persisting operations."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|AddMembersTest
operator|.
name|DEFAULT_BATCH_SIZE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|importBehavior
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"importBehavior"
argument_list|,
literal|"Protected Item Import Behavior"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|ImportBehavior
operator|.
name|NAME_BESTEFFORT
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|itemsToRead
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"itemsToRead"
argument_list|,
literal|"Number of items to read"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|concurrency
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"concurrency"
argument_list|,
literal|"Number of test threads."
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|withValuesSeparatedBy
argument_list|(
literal|','
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|report
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"report"
argument_list|,
literal|"Whether to output intermediate results"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|randomUser
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"randomUser"
argument_list|,
literal|"Whether to use a random user to read."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|File
argument_list|>
name|csvFile
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"csvFile"
argument_list|,
literal|"File to write a CSV version of the benchmark data."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|File
operator|.
name|class
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|flatStructure
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"flatStructure"
argument_list|,
literal|"Whether the test should use a flat structure or not."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|numberOfUsers
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"numberOfUsers"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|setScope
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"setScope"
argument_list|,
literal|"Whether to use include setScope in the user query."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|reverseOrder
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"reverseOrder"
argument_list|,
literal|"Invert order of configurations in composite setup."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|supportedPaths
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"supportedPaths"
argument_list|,
literal|"Supported paths in composite setup."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|withValuesSeparatedBy
argument_list|(
literal|','
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|dynamicMembership
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"dynamicMembership"
argument_list|,
literal|"Enable dynamic membership handling during synchronisation of external users."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|autoMembership
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"autoMembership"
argument_list|,
literal|"Ids of those groups a given external identity automatically become member of."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|withValuesSeparatedBy
argument_list|(
literal|','
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|roundtripDelay
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"roundtripDelay"
argument_list|,
literal|"Use simplified principal name lookup from ExtIdRef by specifying roundtrip delay of value< 0."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|transientWrites
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"transient"
argument_list|,
literal|"Do not save data."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|mounts
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"mounts"
argument_list|,
literal|"Number of mounts for the composite node store."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|pathsPerMount
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"pathsPerMount"
argument_list|,
literal|"Number of paths per one mount."
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|vgcMaxAge
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"vgcMaxAge"
argument_list|,
literal|"Continuous DocumentNodeStore VersionGC max age in sec (RDB only)"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Integer
argument_list|>
name|coldSyncInterval
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"coldSyncInterval"
argument_list|,
literal|"interval between sync cycles in sec (Segment-Tar-Cold only)"
argument_list|)
operator|.
name|withRequiredArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|coldUseDataStore
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"useDataStore"
argument_list|,
literal|"Whether to use a datastore in the cold standby topology (Segment-Tar-Cold only)"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|Boolean
argument_list|>
name|coldShareDataStore
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"shareDataStore"
argument_list|,
literal|"Whether to share the datastore for primary and standby in the cold standby topology (Segment-Tar-Cold only)"
argument_list|)
operator|.
name|withOptionalArg
argument_list|()
operator|.
name|ofType
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|defaultsTo
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|?
argument_list|>
name|verbose
init|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"verbose"
argument_list|,
literal|"Enable verbose output"
argument_list|)
decl_stmt|;
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|nonOption
init|=
name|parser
operator|.
name|nonOptions
argument_list|()
decl_stmt|;
name|OptionSpec
name|help
init|=
name|parser
operator|.
name|acceptsAll
argument_list|(
name|asList
argument_list|(
literal|"h"
argument_list|,
literal|"?"
argument_list|,
literal|"help"
argument_list|)
argument_list|,
literal|"show help"
argument_list|)
operator|.
name|forHelp
argument_list|()
decl_stmt|;
name|OptionSet
name|options
init|=
name|parser
operator|.
name|parse
argument_list|(
name|args
argument_list|)
decl_stmt|;
if|if
condition|(
name|options
operator|.
name|has
argument_list|(
name|help
argument_list|)
condition|)
block|{
name|parser
operator|.
name|printHelpOn
argument_list|(
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|String
name|uri
init|=
name|mongouri
operator|.
name|value
argument_list|(
name|options
argument_list|)
decl_stmt|;
if|if
condition|(
name|uri
operator|==
literal|null
condition|)
block|{
name|String
name|db
init|=
name|dbName
operator|.
name|value
argument_list|(
name|options
argument_list|)
decl_stmt|;
if|if
condition|(
name|db
operator|==
literal|null
condition|)
block|{
name|db
operator|=
name|OakFixture
operator|.
name|getUniqueDatabaseName
argument_list|(
name|OakFixture
operator|.
name|OAK_MONGO
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
literal|"mongodb://"
operator|+
name|host
operator|.
name|value
argument_list|(
name|options
argument_list|)
operator|+
literal|":"
operator|+
name|port
operator|.
name|value
argument_list|(
name|options
argument_list|)
operator|+
literal|"/"
operator|+
name|db
expr_stmt|;
block|}
name|StatisticsProvider
name|statsProvider
init|=
name|options
operator|.
name|has
argument_list|(
name|metrics
argument_list|)
condition|?
name|getStatsProvider
argument_list|()
else|:
name|StatisticsProvider
operator|.
name|NOOP
decl_stmt|;
name|int
name|cacheSize
init|=
name|cache
operator|.
name|value
argument_list|(
name|options
argument_list|)
decl_stmt|;
name|RepositoryFixture
index|[]
name|allFixtures
init|=
operator|new
name|RepositoryFixture
index|[]
block|{
operator|new
name|JackrabbitRepositoryFixture
argument_list|(
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|cacheSize
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getMemoryNS
argument_list|(
name|cacheSize
operator|*
name|MB
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getMongo
argument_list|(
name|uri
argument_list|,
name|dropDBAfterTest
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|cacheSize
operator|*
name|MB
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getMongoWithDS
argument_list|(
name|uri
argument_list|,
name|dropDBAfterTest
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|cacheSize
operator|*
name|MB
argument_list|,
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|fdsCache
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getMongoNS
argument_list|(
name|uri
argument_list|,
name|dropDBAfterTest
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|cacheSize
operator|*
name|MB
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getSegmentTar
argument_list|(
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
literal|256
argument_list|,
name|cacheSize
argument_list|,
name|mmap
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getSegmentTarWithDataStore
argument_list|(
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
literal|256
argument_list|,
name|cacheSize
argument_list|,
name|mmap
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|fdsCache
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getSegmentTarWithColdStandby
argument_list|(
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
literal|256
argument_list|,
name|cacheSize
argument_list|,
name|mmap
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|coldUseDataStore
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|fdsCache
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|coldSyncInterval
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|coldShareDataStore
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getRDB
argument_list|(
name|rdbjdbcuri
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|rdbjdbcuser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|rdbjdbcpasswd
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|rdbjdbctableprefix
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|dropDBAfterTest
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|cacheSize
operator|*
name|MB
argument_list|,
name|vgcMaxAge
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getRDBWithDS
argument_list|(
name|rdbjdbcuri
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|rdbjdbcuser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|rdbjdbcpasswd
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|rdbjdbctableprefix
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|dropDBAfterTest
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|cacheSize
operator|*
name|MB
argument_list|,
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|fdsCache
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|vgcMaxAge
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getCompositeStore
argument_list|(
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
literal|256
argument_list|,
name|cacheSize
argument_list|,
name|mmap
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|mounts
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|pathsPerMount
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|OakRepositoryFixture
operator|.
name|getCompositeMemoryStore
argument_list|(
name|mounts
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|pathsPerMount
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|}
decl_stmt|;
name|Benchmark
index|[]
name|allBenchmarks
init|=
operator|new
name|Benchmark
index|[]
block|{
operator|new
name|OrderedIndexQueryOrderedIndexTest
argument_list|()
block|,
operator|new
name|OrderedIndexQueryStandardIndexTest
argument_list|()
block|,
operator|new
name|OrderedIndexQueryNoIndexTest
argument_list|()
block|,
operator|new
name|OrderedIndexInsertOrderedPropertyTest
argument_list|()
block|,
operator|new
name|OrderedIndexInsertStandardPropertyTest
argument_list|()
block|,
operator|new
name|OrderedIndexInsertNoIndexTest
argument_list|()
block|,
operator|new
name|LoginTest
argument_list|(
name|runAsUser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|runWithToken
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|noIterations
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|LoginLogoutTest
argument_list|(
name|runAsUser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|runWithToken
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|noIterations
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|LoginGetRootLogoutTest
argument_list|(
name|runAsUser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|runWithToken
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|noIterations
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|LoginWithTokensTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|LoginSystemTest
argument_list|()
block|,
operator|new
name|LoginImpersonateTest
argument_list|()
block|,
operator|new
name|LoginWithMembershipTest
argument_list|(
name|runWithToken
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|noIterations
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|expiration
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|LoginWithMembersTest
argument_list|(
name|runWithToken
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|noIterations
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|expiration
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|NamespaceTest
argument_list|()
block|,
operator|new
name|NamespaceRegistryTest
argument_list|()
block|,
operator|new
name|ReadPropertyTest
argument_list|()
block|,
name|GetNodeTest
operator|.
name|withAdmin
argument_list|()
block|,
name|GetNodeTest
operator|.
name|withAnonymous
argument_list|()
block|,
operator|new
name|GetDeepNodeTest
argument_list|()
block|,
operator|new
name|SetPropertyTest
argument_list|()
block|,
operator|new
name|SetMultiPropertyTest
argument_list|()
block|,
operator|new
name|SmallFileReadTest
argument_list|()
block|,
operator|new
name|SmallFileWriteTest
argument_list|()
block|,
operator|new
name|ConcurrentReadTest
argument_list|()
block|,
operator|new
name|ConcurrentReadWriteTest
argument_list|()
block|,
operator|new
name|ConcurrentWriteReadTest
argument_list|()
block|,
operator|new
name|ConcurrentWriteTest
argument_list|()
block|,
operator|new
name|SimpleSearchTest
argument_list|()
block|,
operator|new
name|UUIDLookupTest
argument_list|()
block|,
operator|new
name|SQL2SearchTest
argument_list|()
block|,
operator|new
name|DescendantSearchTest
argument_list|()
block|,
operator|new
name|SQL2DescendantSearchTest
argument_list|()
block|,
operator|new
name|FlatTreeUpdateTest
argument_list|()
block|,
operator|new
name|CreateManyChildNodesTest
argument_list|()
block|,
operator|new
name|CreateManyNodesTest
argument_list|()
block|,
operator|new
name|UpdateManyChildNodesTest
argument_list|()
block|,
operator|new
name|TransientManyChildNodesTest
argument_list|()
block|,
operator|new
name|WikipediaImport
argument_list|(
name|wikipedia
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|CreateNodesBenchmark
argument_list|()
block|,
operator|new
name|ManyNodes
argument_list|(
name|options
operator|.
name|has
argument_list|(
name|verbose
argument_list|)
argument_list|)
block|,
operator|new
name|ObservationTest
argument_list|()
block|,
operator|new
name|RevisionGCTest
argument_list|()
block|,
operator|new
name|ContinuousRevisionGCTest
argument_list|()
block|,
operator|new
name|XmlImportTest
argument_list|()
block|,
operator|new
name|FlatTreeWithAceForSamePrincipalTest
argument_list|()
block|,
operator|new
name|ReadDeepTreeTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|CompositeAuthorizationTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
comment|// NOTE: this is currently the no of configurations
operator|new
name|CugTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|randomUser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|supportedPaths
operator|.
name|values
argument_list|(
name|options
argument_list|)
argument_list|,
name|reverseOrder
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|CugOakTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|randomUser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|supportedPaths
operator|.
name|values
argument_list|(
name|options
argument_list|)
argument_list|,
name|reverseOrder
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentReadDeepTreeTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentReadSinglePolicyTreeTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentReadAccessControlledTreeTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentReadAccessControlledTreeTest2
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentReadRandomNodeAndItsPropertiesTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentHasPermissionTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentHasPermissionTest2
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ManyUserReadTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|randomUser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentTraversalTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|randomUser
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentWriteACLTest
argument_list|(
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ConcurrentEveryoneACLTest
argument_list|(
name|runAsAdmin
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|itemsToRead
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|AceCreationTest
argument_list|(
name|batchSize
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfInitialAce
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|transientWrites
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
name|ReadManyTest
operator|.
name|linear
argument_list|(
literal|"LinearReadEmpty"
argument_list|,
literal|1
argument_list|,
name|ReadManyTest
operator|.
name|EMPTY
argument_list|)
block|,
name|ReadManyTest
operator|.
name|linear
argument_list|(
literal|"LinearReadFiles"
argument_list|,
literal|1
argument_list|,
name|ReadManyTest
operator|.
name|FILES
argument_list|)
block|,
name|ReadManyTest
operator|.
name|linear
argument_list|(
literal|"LinearReadNodes"
argument_list|,
literal|1
argument_list|,
name|ReadManyTest
operator|.
name|NODES
argument_list|)
block|,
name|ReadManyTest
operator|.
name|uniform
argument_list|(
literal|"UniformReadEmpty"
argument_list|,
literal|1
argument_list|,
name|ReadManyTest
operator|.
name|EMPTY
argument_list|)
block|,
name|ReadManyTest
operator|.
name|uniform
argument_list|(
literal|"UniformReadFiles"
argument_list|,
literal|1
argument_list|,
name|ReadManyTest
operator|.
name|FILES
argument_list|)
block|,
name|ReadManyTest
operator|.
name|uniform
argument_list|(
literal|"UniformReadNodes"
argument_list|,
literal|1
argument_list|,
name|ReadManyTest
operator|.
name|NODES
argument_list|)
block|,
operator|new
name|ConcurrentCreateNodesTest
argument_list|()
block|,
operator|new
name|SequentialCreateNodesTest
argument_list|()
block|,
operator|new
name|CreateManyIndexedNodesTest
argument_list|()
block|,
operator|new
name|GetPoliciesTest
argument_list|()
block|,
operator|new
name|ConcurrentFileWriteTest
argument_list|()
block|,
operator|new
name|GetAuthorizableByIdTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|GetAuthorizableByPrincipalTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|GetPrincipalTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|GetGroupPrincipalsTest
argument_list|(
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
comment|// benchmarks adding multiple or single members
operator|new
name|AddMembersTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|batchSize
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|importBehavior
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|AddMemberTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|batchSize
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|AddUniqueMembersTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|batchSize
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
comment|// benchmarks removing multiple or single members
operator|new
name|RemoveMembersTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|batchSize
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|RemoveMemberTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|batchSize
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
comment|// benchmark testing isMember/isDeclared member; each user only being member of 1 group
operator|new
name|IsMemberTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|IsDeclaredMemberTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
comment|// 4 benchmarks with the same setup test various membership operations.
operator|new
name|MemberDeclaredMemberOf
argument_list|(
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|MemberMemberOf
argument_list|(
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|MemberIsDeclaredMember
argument_list|(
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|MemberIsMember
argument_list|(
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|nestedGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|FullTextSearchTest
argument_list|(
name|wikipedia
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|withStorage
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|FullTextSolrSearchTest
argument_list|(
name|wikipedia
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|withStorage
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|withServer
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|FindAuthorizableWithScopeTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|setScope
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|LucenePropertyFullTextTest
argument_list|(
name|wikipedia
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|withStorage
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|LucenePropertyFTSeparated
argument_list|(
name|wikipedia
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|flatStructure
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|report
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|withStorage
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ReplicaCrashResilienceTest
argument_list|()
block|,
comment|// benchmarks for oak-auth-external
operator|new
name|ExternalLoginTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|expiration
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|dynamicMembership
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|autoMembership
operator|.
name|values
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|SyncAllExternalUsersTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|expiration
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|dynamicMembership
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|autoMembership
operator|.
name|values
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|SyncExternalUsersTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|expiration
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|dynamicMembership
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|autoMembership
operator|.
name|values
argument_list|(
name|options
argument_list|)
argument_list|,
name|batchSize
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|PrincipalNameResolutionTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|numberOfGroups
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|expiration
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|roundtripDelay
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|ListIdentitiesTest
argument_list|(
name|numberOfUsers
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|)
block|,
operator|new
name|HybridIndexTest
argument_list|(
name|base
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
name|statsProvider
argument_list|)
block|,
operator|new
name|BundlingNodeTest
argument_list|()
block|,
operator|new
name|PersistentCacheTest
argument_list|(
name|statsProvider
argument_list|)
block|,
operator|new
name|BasicWriteTest
argument_list|()
block|}
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|argset
init|=
name|Sets
operator|.
name|newHashSet
argument_list|(
name|nonOption
operator|.
name|values
argument_list|(
name|options
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RepositoryFixture
argument_list|>
name|fixtures
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|RepositoryFixture
name|fixture
range|:
name|allFixtures
control|)
block|{
if|if
condition|(
name|argset
operator|.
name|remove
argument_list|(
name|fixture
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|fixtures
operator|.
name|add
argument_list|(
name|fixture
argument_list|)
expr_stmt|;
name|configure
argument_list|(
name|fixture
argument_list|,
name|statsProvider
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|fixtures
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Warning: no repository fixtures specified, supported fixtures are: "
operator|+
name|asSortedString
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|allFixtures
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Benchmark
argument_list|>
name|benchmarks
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|Benchmark
name|benchmark
range|:
name|allBenchmarks
control|)
block|{
if|if
condition|(
name|argset
operator|.
name|remove
argument_list|(
name|benchmark
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|benchmarks
operator|.
name|add
argument_list|(
name|benchmark
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|benchmarks
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Warning: no benchmarks specified, supported benchmarks are: "
operator|+
name|asSortedString
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|allBenchmarks
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|argset
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|PrintStream
name|out
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|options
operator|.
name|has
argument_list|(
name|csvFile
argument_list|)
condition|)
block|{
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|FileUtils
operator|.
name|openOutputStream
argument_list|(
name|csvFile
operator|.
name|value
argument_list|(
name|options
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Benchmark
name|benchmark
range|:
name|benchmarks
control|)
block|{
if|if
condition|(
name|benchmark
operator|instanceof
name|CSVResultGenerator
condition|)
block|{
operator|(
operator|(
name|CSVResultGenerator
operator|)
name|benchmark
operator|)
operator|.
name|setPrintStream
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
name|benchmark
operator|.
name|run
argument_list|(
name|fixtures
argument_list|,
name|options
operator|.
name|valuesOf
argument_list|(
name|concurrency
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|out
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|reportMetrics
argument_list|(
name|statsProvider
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unknown arguments: "
operator|+
name|argset
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|reportMetrics
parameter_list|(
name|StatisticsProvider
name|statsProvider
parameter_list|)
block|{
if|if
condition|(
name|statsProvider
operator|instanceof
name|MetricStatisticsProvider
condition|)
block|{
name|MetricRegistry
name|metricRegistry
init|=
operator|(
operator|(
name|MetricStatisticsProvider
operator|)
name|statsProvider
operator|)
operator|.
name|getRegistry
argument_list|()
decl_stmt|;
name|ConsoleReporter
operator|.
name|forRegistry
argument_list|(
name|metricRegistry
argument_list|)
operator|.
name|outputTo
argument_list|(
name|System
operator|.
name|out
argument_list|)
operator|.
name|filter
argument_list|(
operator|new
name|MetricFilter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|String
name|name
parameter_list|,
name|Metric
name|metric
parameter_list|)
block|{
if|if
condition|(
name|metric
operator|instanceof
name|Counting
condition|)
block|{
comment|//Only report non zero metrics
return|return
operator|(
operator|(
name|Counting
operator|)
name|metric
operator|)
operator|.
name|getCount
argument_list|()
operator|>
literal|0
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|report
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|configure
parameter_list|(
name|RepositoryFixture
name|fixture
parameter_list|,
name|StatisticsProvider
name|statsProvider
parameter_list|)
block|{
if|if
condition|(
name|fixture
operator|instanceof
name|OakRepositoryFixture
condition|)
block|{
operator|(
operator|(
name|OakRepositoryFixture
operator|)
name|fixture
operator|)
operator|.
name|setStatisticsProvider
argument_list|(
name|statsProvider
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|String
name|asSortedString
parameter_list|(
name|List
argument_list|<
name|?
argument_list|>
name|in
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|tmp
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|in
control|)
block|{
name|tmp
operator|.
name|add
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Collections
operator|.
name|sort
argument_list|(
name|tmp
argument_list|)
expr_stmt|;
return|return
name|tmp
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|MetricStatisticsProvider
name|getStatsProvider
parameter_list|()
block|{
name|ScheduledExecutorService
name|executorService
init|=
name|MoreExecutors
operator|.
name|getExitingScheduledExecutorService
argument_list|(
operator|(
name|ScheduledThreadPoolExecutor
operator|)
name|Executors
operator|.
name|newScheduledThreadPool
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|new
name|MetricStatisticsProvider
argument_list|(
literal|null
argument_list|,
name|executorService
argument_list|)
return|;
block|}
block|}
end_class

end_unit

