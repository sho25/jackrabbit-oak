begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|score
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|ReferenceCardinality
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|ReferencePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|score
operator|.
name|ScorerProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|score
operator|.
name|ScorerProviderFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|metatype
operator|=
literal|false
argument_list|,
name|immediate
operator|=
literal|true
argument_list|)
annotation|@
name|Service
argument_list|(
name|value
operator|=
name|ScorerProviderFactory
operator|.
name|class
argument_list|)
annotation|@
name|Reference
argument_list|(
name|name
operator|=
literal|"ScorerProvider"
argument_list|,
name|policy
operator|=
name|ReferencePolicy
operator|.
name|DYNAMIC
argument_list|,
name|cardinality
operator|=
name|ReferenceCardinality
operator|.
name|OPTIONAL_MULTIPLE
argument_list|,
name|referenceInterface
operator|=
name|ScorerProvider
operator|.
name|class
argument_list|,
name|bind
operator|=
literal|"bindScorerProvider"
argument_list|,
name|unbind
operator|=
literal|"unbindScorerProvider"
argument_list|)
specifier|public
class|class
name|ScorerProviderFactoryImpl
implements|implements
name|ScorerProviderFactory
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|ScorerProvider
argument_list|>
name|scorerProviderMap
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|ScorerProvider
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Activate
specifier|private
name|void
name|activate
parameter_list|()
block|{
name|scorerProviderMap
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Deactivate
specifier|private
name|void
name|deactivate
parameter_list|()
block|{
name|scorerProviderMap
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ScorerProvider
name|getScorerProvider
parameter_list|(
name|String
name|scorerName
parameter_list|)
block|{
return|return
name|scorerProviderMap
operator|.
name|get
argument_list|(
name|scorerName
argument_list|)
return|;
block|}
specifier|private
name|void
name|bindScorerProvider
parameter_list|(
name|ScorerProvider
name|provider
parameter_list|)
block|{
name|scorerProviderMap
operator|.
name|put
argument_list|(
name|provider
operator|.
name|getName
argument_list|()
argument_list|,
name|provider
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|unbindScorerProvider
parameter_list|(
name|ScorerProvider
name|provider
parameter_list|)
block|{
name|scorerProviderMap
operator|.
name|remove
argument_list|(
name|provider
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

