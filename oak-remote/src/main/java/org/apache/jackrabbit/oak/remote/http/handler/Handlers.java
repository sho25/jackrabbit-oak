begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
package|;
end_package

begin_comment
comment|/**  * A collection of handlers used to respond to some requests handled by the  * remote servlet.  */
end_comment

begin_class
specifier|public
class|class
name|Handlers
block|{
specifier|private
name|Handlers
parameter_list|()
block|{     }
comment|/**      * Create an handler that will return the last revision available to the      * server.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createGetLastRevisionHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|GetLastRevisionHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create an handler that will return a repository sub-tree at a specific      * revision.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createGetRevisionTreeHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|GetRevisionTreeHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create an handler that will return a repository sub-tree at the latest      * known state.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createGetLastTreeHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|GetLastTreeHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create an handler that will return a 404 response to the client.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createNotFoundHandler
parameter_list|()
block|{
return|return
operator|new
name|NotFoundHandler
argument_list|()
return|;
block|}
comment|/**      * Create a handler that will read a binary object from the repository.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createGetBinaryHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|GetBinaryHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that will check if a binary exists      *      * @return An instance of {@code Handler}      */
specifier|public
specifier|static
name|Handler
name|createHeadBinaryHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|HeadBinaryHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that will perform the creation of new binary object.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createPostBinaryHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|PostBinaryHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that will patch the content at a specific revision.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createPatchSpecificRevisionHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|PatchSpecificRevisionHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that will patch the content at the last revision.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createPatchLastRevisionHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|PatchLastRevisionHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that checks if a tree exists at the last revision.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createHeadLastTreeHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|HeadLastTreeHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that checks if a tree exists at a given revision.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createHeadRevisionTreeHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|HeadRevisionTreeHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that searches for content at the last revision.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createSearchLastRevisionHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|SearchLastRevisionHandler
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create a handler that searches for content at the provided revision.      *      * @return An instance of {@code Handler}.      */
specifier|public
specifier|static
name|Handler
name|createSearchSpecificRevisionHandler
parameter_list|()
block|{
return|return
name|withAuthentication
argument_list|(
operator|new
name|SearchSpecificRevisionHandler
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Handler
name|withAuthentication
parameter_list|(
name|Handler
name|authenticated
parameter_list|)
block|{
return|return
operator|new
name|AuthenticationWrapperHandler
argument_list|(
name|authenticated
argument_list|,
name|createForbiddenHandler
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Handler
name|createForbiddenHandler
parameter_list|()
block|{
return|return
operator|new
name|UnauthorizedHandler
argument_list|()
return|;
block|}
block|}
end_class

end_unit

