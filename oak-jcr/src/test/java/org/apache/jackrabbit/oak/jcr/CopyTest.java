begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|VersionException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|VersionHistory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|VersionIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|NodeStoreFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|version
operator|.
name|VersionConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CopyTest
extends|extends
name|AbstractRepositoryTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEST_NODE
init|=
literal|"test_node"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_PATH
init|=
literal|'/'
operator|+
name|TEST_NODE
decl_stmt|;
specifier|private
name|Node
name|testNode
decl_stmt|;
specifier|public
name|CopyTest
parameter_list|(
name|NodeStoreFixture
name|fixture
parameter_list|)
block|{
name|super
argument_list|(
name|fixture
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|root
init|=
name|session
operator|.
name|getRootNode
argument_list|()
decl_stmt|;
name|testNode
operator|=
name|root
operator|.
name|addNode
argument_list|(
name|TEST_NODE
argument_list|)
expr_stmt|;
name|testNode
operator|.
name|addNode
argument_list|(
literal|"source"
argument_list|)
operator|.
name|addNode
argument_list|(
literal|"node"
argument_list|)
expr_stmt|;
name|testNode
operator|.
name|addNode
argument_list|(
literal|"target"
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|Session
name|s
init|=
name|testNode
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|s
operator|.
name|removeItem
argument_list|(
name|TEST_PATH
argument_list|)
expr_stmt|;
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyNode
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|copy
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|,
name|TEST_PATH
operator|+
literal|"/target/copied"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"source/node"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"target/copied"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyReferenceableNode
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|toCopy
init|=
name|session
operator|.
name|getNode
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|)
decl_stmt|;
name|toCopy
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_REFERENCEABLE
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|copy
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|,
name|TEST_PATH
operator|+
literal|"/target/copied"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"source/node"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"target/copied"
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|copy
init|=
name|testNode
operator|.
name|getNode
argument_list|(
literal|"target/copied"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|copy
operator|.
name|isNodeType
argument_list|(
name|JcrConstants
operator|.
name|MIX_REFERENCEABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|copy
operator|.
name|getUUID
argument_list|()
operator|.
name|equals
argument_list|(
name|testNode
operator|.
name|getNode
argument_list|(
literal|"source/node"
argument_list|)
operator|.
name|getUUID
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyReferenceableChildNode
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|session
operator|.
name|getNode
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|)
operator|.
name|addNode
argument_list|(
literal|"child"
argument_list|)
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_REFERENCEABLE
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|copy
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|,
name|TEST_PATH
operator|+
literal|"/target/copied"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"source/node"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"target/copied"
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|childCopy
init|=
name|testNode
operator|.
name|getNode
argument_list|(
literal|"target/copied/child"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|childCopy
operator|.
name|isNodeType
argument_list|(
name|JcrConstants
operator|.
name|MIX_REFERENCEABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|childCopy
operator|.
name|getUUID
argument_list|()
operator|.
name|equals
argument_list|(
name|testNode
operator|.
name|getNode
argument_list|(
literal|"source/node/child"
argument_list|)
operator|.
name|getUUID
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyVersionableNode
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|toCopy
init|=
name|session
operator|.
name|getNode
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|)
decl_stmt|;
name|toCopy
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_VERSIONABLE
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|copy
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|,
name|TEST_PATH
operator|+
literal|"/target/copied"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"source/node"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"target/copied"
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|copy
init|=
name|testNode
operator|.
name|getNode
argument_list|(
literal|"target/copied"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|copy
operator|.
name|isNodeType
argument_list|(
name|JcrConstants
operator|.
name|MIX_VERSIONABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|copy
operator|.
name|getVersionHistory
argument_list|()
operator|.
name|isSame
argument_list|(
name|toCopy
operator|.
name|getVersionHistory
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyVersionableNodeClearsVersions
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|toCopy
init|=
name|session
operator|.
name|getNode
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|)
decl_stmt|;
name|toCopy
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_VERSIONABLE
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|Version
name|v1
init|=
name|toCopy
operator|.
name|checkin
argument_list|()
decl_stmt|;
name|toCopy
operator|.
name|checkout
argument_list|()
expr_stmt|;
name|Version
name|v2
init|=
name|toCopy
operator|.
name|checkin
argument_list|()
decl_stmt|;
name|toCopy
operator|.
name|checkout
argument_list|()
expr_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|copy
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|,
name|TEST_PATH
operator|+
literal|"/target/copied"
argument_list|)
expr_stmt|;
name|Node
name|copy
init|=
name|testNode
operator|.
name|getNode
argument_list|(
literal|"target/copied"
argument_list|)
decl_stmt|;
name|VersionHistory
name|vh
init|=
name|copy
operator|.
name|getVersionHistory
argument_list|()
decl_stmt|;
name|Version
name|rootV
init|=
name|vh
operator|.
name|getRootVersion
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rootV
operator|.
name|getSuccessors
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|VersionIterator
name|vItr
init|=
name|vh
operator|.
name|getAllVersions
argument_list|()
decl_stmt|;
while|while
condition|(
name|vItr
operator|.
name|hasNext
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|rootV
operator|.
name|isSame
argument_list|(
name|vItr
operator|.
name|nextVersion
argument_list|()
argument_list|)
condition|)
block|{
name|fail
argument_list|(
literal|"Unexpected version in version history of copied node."
argument_list|)
expr_stmt|;
block|}
block|}
try|try
block|{
name|vh
operator|.
name|getVersion
argument_list|(
name|v1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Unexpected version in version history of copied node."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|VersionException
name|e
parameter_list|)
block|{
comment|// success
block|}
try|try
block|{
name|vh
operator|.
name|getVersion
argument_list|(
name|v2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Unexpected version in version history of copied node."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|VersionException
name|e
parameter_list|)
block|{
comment|// success
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyVersionableNodeCreatesJcrCopiedFrom
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|toCopy
init|=
name|session
operator|.
name|getNode
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|)
decl_stmt|;
name|toCopy
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_VERSIONABLE
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|Version
name|baseV
init|=
name|toCopy
operator|.
name|getBaseVersion
argument_list|()
decl_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|copy
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|,
name|TEST_PATH
operator|+
literal|"/target/copied"
argument_list|)
expr_stmt|;
name|Node
name|copy
init|=
name|testNode
operator|.
name|getNode
argument_list|(
literal|"target/copied"
argument_list|)
decl_stmt|;
name|VersionHistory
name|copiedVh
init|=
name|copy
operator|.
name|getVersionHistory
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|copiedVh
operator|.
name|hasProperty
argument_list|(
name|VersionConstants
operator|.
name|JCR_COPIED_FROM
argument_list|)
argument_list|)
expr_stmt|;
name|Property
name|prop
init|=
name|copiedVh
operator|.
name|getProperty
argument_list|(
name|VersionConstants
operator|.
name|JCR_COPIED_FROM
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PropertyType
operator|.
name|WEAKREFERENCE
argument_list|,
name|prop
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|copiedFrom
init|=
name|prop
operator|.
name|getNode
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|baseV
operator|.
name|isSame
argument_list|(
name|copiedFrom
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyLockedNode
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|session
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|toCopy
init|=
name|session
operator|.
name|getNode
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|)
decl_stmt|;
name|toCopy
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_LOCKABLE
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getLockManager
argument_list|()
operator|.
name|lock
argument_list|(
name|toCopy
operator|.
name|getPath
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
literal|"my"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|toCopy
operator|.
name|isLocked
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|toCopy
operator|.
name|hasProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_LOCKISDEEP
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|toCopy
operator|.
name|hasProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_LOCKOWNER
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|copy
argument_list|(
name|TEST_PATH
operator|+
literal|"/source/node"
argument_list|,
name|TEST_PATH
operator|+
literal|"/target/copied"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"source/node"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testNode
operator|.
name|hasNode
argument_list|(
literal|"target/copied"
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|copy
init|=
name|testNode
operator|.
name|getNode
argument_list|(
literal|"target/copied"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|copy
operator|.
name|isNodeType
argument_list|(
name|JcrConstants
operator|.
name|MIX_LOCKABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|copy
operator|.
name|isLocked
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|copy
operator|.
name|hasProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_LOCKISDEEP
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|copy
operator|.
name|hasProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_LOCKOWNER
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

