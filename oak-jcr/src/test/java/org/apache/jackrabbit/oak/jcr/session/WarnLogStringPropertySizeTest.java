begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|session
package|;
end_package

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|LoggerContext
import|;
end_import

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|spi
operator|.
name|ILoggingEvent
import|;
end_import

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|core
operator|.
name|read
operator|.
name|ListAppender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|junit
operator|.
name|TemporarySystemProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|NodeStoreFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|AbstractRepositoryTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * {@code WarnLogStringPropertySizeTest} checks if Warn log is bein added on adding  * large string properties  */
end_comment

begin_class
specifier|public
class|class
name|WarnLogStringPropertySizeTest
extends|extends
name|AbstractRepositoryTest
block|{
annotation|@
name|Rule
specifier|public
name|TemporarySystemProperty
name|temporarySystemProperty
init|=
operator|new
name|TemporarySystemProperty
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|testStringPropertyKey
init|=
literal|"testStringPropertyKey"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|testLargeStringPropertyValue
init|=
literal|"abcdefghijklmnopqrstuvwxyz"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|testSmallStringPropertyValue
init|=
literal|"abcd"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|nodeImplLogger
init|=
name|NodeImpl
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|warnMessage
init|=
literal|"String length: {} for property: {} at Node: {} is greater than configured value {}"
decl_stmt|;
specifier|private
specifier|static
name|ListAppender
argument_list|<
name|ILoggingEvent
argument_list|>
name|listAppender
init|=
literal|null
decl_stmt|;
specifier|public
name|WarnLogStringPropertySizeTest
parameter_list|(
name|NodeStoreFixture
name|fixture
parameter_list|)
block|{
name|super
argument_list|(
name|fixture
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|loggingAppenderStart
parameter_list|()
block|{
name|LoggerContext
name|context
init|=
operator|(
name|LoggerContext
operator|)
name|LoggerFactory
operator|.
name|getILoggerFactory
argument_list|()
decl_stmt|;
name|listAppender
operator|=
operator|new
name|ListAppender
argument_list|<>
argument_list|()
expr_stmt|;
name|listAppender
operator|.
name|start
argument_list|()
expr_stmt|;
name|context
operator|.
name|getLogger
argument_list|(
name|nodeImplLogger
argument_list|)
operator|.
name|addAppender
argument_list|(
name|listAppender
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|loggingAppenderStop
parameter_list|()
block|{
name|listAppender
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noWarnLogOnAddingSmallStringProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|test
init|=
name|s
operator|.
name|getRootNode
argument_list|()
operator|.
name|addNode
argument_list|(
literal|"testSmall"
argument_list|)
decl_stmt|;
name|test
operator|.
name|setProperty
argument_list|(
name|testStringPropertyKey
argument_list|,
name|testSmallStringPropertyValue
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|isWarnMessagePresent
argument_list|(
name|listAppender
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|warnLogOnAddingLargeStringPropertiesWithCustomThreshold
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|OakJcrConstants
operator|.
name|WARN_LOG_STRING_SIZE_THRESHOLD_KEY
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|Session
name|s
init|=
name|getAdminSession
argument_list|()
decl_stmt|;
name|Node
name|test
init|=
name|s
operator|.
name|getRootNode
argument_list|()
operator|.
name|addNode
argument_list|(
literal|"testLarge"
argument_list|)
decl_stmt|;
name|test
operator|.
name|setProperty
argument_list|(
name|testStringPropertyKey
argument_list|,
name|testLargeStringPropertyValue
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isWarnMessagePresent
argument_list|(
name|listAppender
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|isWarnMessagePresent
parameter_list|(
name|ListAppender
argument_list|<
name|ILoggingEvent
argument_list|>
name|listAppender
parameter_list|)
block|{
for|for
control|(
name|ILoggingEvent
name|loggingEvent
range|:
name|listAppender
operator|.
name|list
control|)
block|{
if|if
condition|(
name|loggingEvent
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|warnMessage
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

