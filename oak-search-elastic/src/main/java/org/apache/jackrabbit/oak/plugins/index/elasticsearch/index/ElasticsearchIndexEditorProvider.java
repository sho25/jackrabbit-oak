begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|ContextAwareCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexUpdateCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexingContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIndexCoordinateFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIndexDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
operator|.
name|ExtractedTextCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Editor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkArgument
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|ElasticsearchIndexConstants
operator|.
name|TYPE_ELASTICSEARCH
import|;
end_import

begin_class
specifier|public
class|class
name|ElasticsearchIndexEditorProvider
implements|implements
name|IndexEditorProvider
block|{
specifier|private
specifier|final
name|ElasticsearchIndexCoordinateFactory
name|esIndexCoordFactory
decl_stmt|;
specifier|private
specifier|final
name|ExtractedTextCache
name|extractedTextCache
decl_stmt|;
specifier|public
name|ElasticsearchIndexEditorProvider
parameter_list|(
annotation|@
name|NotNull
name|ElasticsearchIndexCoordinateFactory
name|esIndexCoordFactory
parameter_list|,
name|ExtractedTextCache
name|extractedTextCache
parameter_list|)
block|{
name|this
operator|.
name|esIndexCoordFactory
operator|=
name|esIndexCoordFactory
expr_stmt|;
name|this
operator|.
name|extractedTextCache
operator|=
name|extractedTextCache
operator|!=
literal|null
condition|?
name|extractedTextCache
else|:
operator|new
name|ExtractedTextCache
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
annotation|@
name|Nullable
name|Editor
name|getIndexEditor
parameter_list|(
annotation|@
name|NotNull
name|String
name|type
parameter_list|,
annotation|@
name|NotNull
name|NodeBuilder
name|definition
parameter_list|,
annotation|@
name|NotNull
name|NodeState
name|root
parameter_list|,
annotation|@
name|NotNull
name|IndexUpdateCallback
name|callback
parameter_list|)
throws|throws
name|CommitFailedException
block|{
if|if
condition|(
name|TYPE_ELASTICSEARCH
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|checkArgument
argument_list|(
name|callback
operator|instanceof
name|ContextAwareCallback
argument_list|,
literal|"callback instance not of type "
operator|+
literal|"ContextAwareCallback [%s]"
argument_list|,
name|callback
argument_list|)
expr_stmt|;
name|IndexingContext
name|indexingContext
init|=
operator|(
operator|(
name|ContextAwareCallback
operator|)
name|callback
operator|)
operator|.
name|getIndexingContext
argument_list|()
decl_stmt|;
name|String
name|indexPath
init|=
name|indexingContext
operator|.
name|getIndexPath
argument_list|()
decl_stmt|;
name|ElasticsearchIndexDefinition
name|indexDefinition
init|=
operator|new
name|ElasticsearchIndexDefinition
argument_list|(
name|root
argument_list|,
name|definition
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|indexPath
argument_list|)
decl_stmt|;
name|ElasticsearchIndexWriterFactory
name|writerFactory
init|=
operator|new
name|ElasticsearchIndexWriterFactory
argument_list|(
name|esIndexCoordFactory
argument_list|)
decl_stmt|;
name|ElasticsearchIndexEditorContext
name|context
init|=
operator|new
name|ElasticsearchIndexEditorContext
argument_list|(
name|root
argument_list|,
name|definition
argument_list|,
name|indexDefinition
argument_list|,
name|callback
argument_list|,
name|writerFactory
argument_list|,
name|extractedTextCache
argument_list|,
name|indexingContext
argument_list|,
literal|true
argument_list|)
decl_stmt|;
return|return
operator|new
name|ElasticsearchIndexEditor
argument_list|(
name|context
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|ExtractedTextCache
name|getExtractedTextCache
parameter_list|()
block|{
return|return
name|extractedTextCache
return|;
block|}
block|}
end_class

end_unit

