begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|junit
operator|.
name|OsgiContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentNodeStoreServiceConfigurationTest
block|{
annotation|@
name|Rule
specifier|public
specifier|final
name|OsgiContext
name|context
init|=
operator|new
name|OsgiContext
argument_list|()
decl_stmt|;
specifier|private
name|ConfigurationAdmin
name|configAdmin
init|=
name|context
operator|.
name|getService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|TestConfig
name|configuration
init|=
operator|new
name|TestConfig
argument_list|(
name|Configuration
operator|.
name|PID
argument_list|)
decl_stmt|;
specifier|private
name|TestConfig
name|preset
init|=
operator|new
name|TestConfig
argument_list|(
name|Configuration
operator|.
name|PRESET_PID
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|defaultValues
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|config
init|=
name|createConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_URI
argument_list|,
name|config
operator|.
name|mongouri
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_DB
argument_list|,
name|config
operator|.
name|db
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_SO_KEEP_ALIVE
argument_list|,
name|config
operator|.
name|socketKeepAlive
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_CACHE
argument_list|,
name|config
operator|.
name|cache
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_NODE_CACHE_PERCENTAGE
argument_list|,
name|config
operator|.
name|nodeCachePercentage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_PREV_DOC_CACHE_PERCENTAGE
argument_list|,
name|config
operator|.
name|prevDocCachePercentage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_CHILDREN_CACHE_PERCENTAGE
argument_list|,
name|config
operator|.
name|childrenCachePercentage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_DIFF_CACHE_PERCENTAGE
argument_list|,
name|config
operator|.
name|diffCachePercentage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_CACHE_SEGMENT_COUNT
argument_list|,
name|config
operator|.
name|cacheSegmentCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_CACHE_STACK_MOVE_DISTANCE
argument_list|,
name|config
operator|.
name|cacheStackMoveDistance
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_BLOB_CACHE_SIZE
argument_list|,
name|config
operator|.
name|blobCacheSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_PERSISTENT_CACHE
argument_list|,
name|config
operator|.
name|persistentCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_JOURNAL_CACHE
argument_list|,
name|config
operator|.
name|journalCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_CUSTOM_BLOB_STORE
argument_list|,
name|config
operator|.
name|customBlobStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_JOURNAL_GC_INTERVAL_MILLIS
argument_list|,
name|config
operator|.
name|journalGCInterval
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_JOURNAL_GC_MAX_AGE_MILLIS
argument_list|,
name|config
operator|.
name|journalGCMaxAge
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_PREFETCH_EXTERNAL_CHANGES
argument_list|,
name|config
operator|.
name|prefetchExternalChanges
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|config
operator|.
name|role
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_VER_GC_MAX_AGE
argument_list|,
name|config
operator|.
name|versionGcMaxAgeInSecs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_VER_GC_EXPRESSION
argument_list|,
name|config
operator|.
name|versionGCExpression
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_RGC_TIME_LIMIT_SECS
argument_list|,
name|config
operator|.
name|versionGCTimeLimitInSecs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_BLOB_GC_MAX_AGE
argument_list|,
name|config
operator|.
name|blobGcMaxAgeInSecs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_BLOB_SNAPSHOT_INTERVAL
argument_list|,
name|config
operator|.
name|blobTrackSnapshotIntervalInSecs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|config
operator|.
name|repository_home
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_MAX_REPLICATION_LAG
argument_list|,
name|config
operator|.
name|maxReplicationLagInSecs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MONGO"
argument_list|,
name|config
operator|.
name|documentStoreType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_BUNDLING_DISABLED
argument_list|,
name|config
operator|.
name|bundlingDisabled
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_UPDATE_LIMIT
argument_list|,
name|config
operator|.
name|updateLimit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"/"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|config
operator|.
name|persistentCacheIncludes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"STRICT"
argument_list|,
name|config
operator|.
name|leaseCheckMode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|presetMongoURI
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|uri
init|=
literal|"mongodb://localhost:27017/test"
decl_stmt|;
name|addConfigurationEntry
argument_list|(
name|preset
argument_list|,
literal|"mongouri"
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|createConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|uri
argument_list|,
name|config
operator|.
name|mongouri
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|presetSocketKeepAlive
parameter_list|()
throws|throws
name|Exception
block|{
name|boolean
name|keepAlive
init|=
operator|!
name|DocumentNodeStoreService
operator|.
name|DEFAULT_SO_KEEP_ALIVE
decl_stmt|;
name|addConfigurationEntry
argument_list|(
name|preset
argument_list|,
literal|"socketKeepAlive"
argument_list|,
name|keepAlive
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|createConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|keepAlive
argument_list|,
name|config
operator|.
name|socketKeepAlive
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|presetUpdateLimit
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|updateLimit
init|=
name|DocumentMK
operator|.
name|Builder
operator|.
name|DEFAULT_UPDATE_LIMIT
operator|/
literal|2
decl_stmt|;
name|addConfigurationEntry
argument_list|(
name|preset
argument_list|,
literal|"updateLimit"
argument_list|,
name|updateLimit
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|createConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|updateLimit
argument_list|,
name|config
operator|.
name|updateLimit
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|presetPersistentCacheIncludes
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|includes
init|=
operator|new
name|String
index|[]
block|{
literal|"/foo"
block|,
literal|"/bar"
block|}
decl_stmt|;
name|addConfigurationEntry
argument_list|(
name|preset
argument_list|,
literal|"persistentCacheIncludes"
argument_list|,
name|includes
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|createConfiguration
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|includes
argument_list|,
name|config
operator|.
name|persistentCacheIncludes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|presetOverridden
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|db
init|=
literal|"test"
decl_stmt|;
name|addConfigurationEntry
argument_list|(
name|preset
argument_list|,
literal|"db"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|addConfigurationEntry
argument_list|(
name|configuration
argument_list|,
literal|"db"
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|createConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|db
argument_list|,
name|config
operator|.
name|db
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|presetResetToDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|db
init|=
literal|"test"
decl_stmt|;
name|addConfigurationEntry
argument_list|(
name|preset
argument_list|,
literal|"db"
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|addConfigurationEntry
argument_list|(
name|configuration
argument_list|,
literal|"db"
argument_list|,
name|DocumentNodeStoreService
operator|.
name|DEFAULT_DB
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|createConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|DEFAULT_DB
argument_list|,
name|config
operator|.
name|db
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Configuration
name|createConfiguration
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|DocumentNodeStoreServiceConfiguration
operator|.
name|create
argument_list|(
name|context
operator|.
name|componentContext
argument_list|()
argument_list|,
name|configAdmin
argument_list|,
name|preset
operator|.
name|asConfiguration
argument_list|()
argument_list|,
name|configuration
operator|.
name|asConfiguration
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|void
name|addConfigurationEntry
parameter_list|(
name|TestConfig
name|config
parameter_list|,
name|String
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|config
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|Configuration
name|c
init|=
name|configAdmin
operator|.
name|getConfiguration
argument_list|(
name|config
operator|.
name|servicePid
argument_list|)
decl_stmt|;
name|c
operator|.
name|update
argument_list|(
operator|new
name|Hashtable
argument_list|(
name|config
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|TestConfig
extends|extends
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
block|{
specifier|final
name|String
name|servicePid
decl_stmt|;
name|TestConfig
parameter_list|(
name|String
name|servicePid
parameter_list|)
block|{
name|this
operator|.
name|servicePid
operator|=
name|servicePid
expr_stmt|;
block|}
name|Configuration
name|asConfiguration
parameter_list|()
block|{
return|return
operator|(
name|Configuration
operator|)
name|Proxy
operator|.
name|newProxyInstance
argument_list|(
name|DocumentNodeStoreServiceConfigurationTest
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Configuration
operator|.
name|class
block|}
argument_list|,
name|this
operator|::
name|getProperty
argument_list|)
return|;
block|}
specifier|private
name|Object
name|getProperty
parameter_list|(
name|Object
name|proxy
parameter_list|,
name|Method
name|method
parameter_list|,
name|Object
index|[]
name|args
parameter_list|)
block|{
name|Object
name|value
init|=
name|get
argument_list|(
name|method
operator|.
name|getName
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"_"
argument_list|,
literal|"."
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|value
operator|=
name|method
operator|.
name|getDefaultValue
argument_list|()
expr_stmt|;
block|}
return|return
name|value
return|;
block|}
block|}
block|}
end_class

end_unit

