begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|AccessControlException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Item
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|ValueFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Workspace
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|retention
operator|.
name|RetentionManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|AccessControlManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|TestIdentityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|DefaultSyncHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_class
specifier|public
class|class
name|DelegateeTest
extends|extends
name|AbstractJmxTest
block|{
specifier|private
name|Delegatee
name|delegatee
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|TEST_IDS
init|=
operator|new
name|String
index|[]
block|{
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
block|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
block|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
block|}
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|delegatee
operator|=
name|createDelegatee
argument_list|(
operator|new
name|TestIdentityProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
if|if
condition|(
name|delegatee
operator|!=
literal|null
condition|)
block|{
name|delegatee
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
name|int
name|getBatchSize
parameter_list|()
block|{
return|return
literal|100
return|;
block|}
specifier|private
name|Delegatee
name|createDelegatee
parameter_list|(
annotation|@
name|Nonnull
name|ExternalIdentityProvider
name|idp
parameter_list|)
block|{
return|return
name|Delegatee
operator|.
name|createInstance
argument_list|(
name|REPOSITORY
argument_list|,
operator|new
name|DefaultSyncHandler
argument_list|(
name|syncConfig
argument_list|)
argument_list|,
name|idp
argument_list|,
name|getBatchSize
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Session
name|preventSessionSave
parameter_list|(
annotation|@
name|Nonnull
name|Delegatee
name|delegatee
parameter_list|)
throws|throws
name|Exception
block|{
name|Field
name|sessionField
init|=
name|Delegatee
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
literal|"systemSession"
argument_list|)
decl_stmt|;
name|sessionField
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|JackrabbitSession
name|s
init|=
operator|(
name|JackrabbitSession
operator|)
name|sessionField
operator|.
name|get
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
name|s
operator|.
name|refresh
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|sessionField
operator|.
name|set
argument_list|(
name|delegatee
argument_list|,
operator|new
name|ThrowingSession
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDoubleClose
parameter_list|()
block|{
name|delegatee
operator|.
name|close
argument_list|()
expr_stmt|;
name|delegatee
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncUsersBeforeSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncUsers
argument_list|(
name|TEST_IDS
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|"nsa"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|"nsa"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
argument_list|,
literal|"nsa"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncUsersSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|sync
argument_list|(
name|idp
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|sync
argument_list|(
name|foreignIDP
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// don't sync ID_WILDCARD_USER
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncUsers
argument_list|(
operator|new
name|String
index|[]
block|{
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
block|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
block|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
block|}
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|"ERR"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|"for"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
argument_list|,
literal|"nsa"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncAllUsersBeforeSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncAllUsers
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|of
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncAllUsersSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|sync
argument_list|(
name|idp
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|sync
argument_list|(
name|idp
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|sync
argument_list|(
operator|new
name|TestIdentityProvider
operator|.
name|TestUser
argument_list|(
literal|"third"
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|idp
argument_list|)
expr_stmt|;
name|sync
argument_list|(
name|foreignIDP
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|ImmutableMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|expected
init|=
name|ImmutableMap
operator|.
expr|<
name|String
decl_stmt|,
name|String
decl|>
name|builder
argument_list|()
decl|.
name|put
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"c"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"secondGroup"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"third"
argument_list|,
literal|"mis"
argument_list|)
decl|.
name|build
argument_list|()
decl_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncAllUsers
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
comment|// NOTE: foreign user is not included in the results
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncAllUsersPurgeSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|sync
argument_list|(
name|idp
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|sync
argument_list|(
name|idp
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|sync
argument_list|(
operator|new
name|TestIdentityProvider
operator|.
name|TestUser
argument_list|(
literal|"third"
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|idp
argument_list|)
expr_stmt|;
name|sync
argument_list|(
name|foreignIDP
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|ImmutableMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|expected
init|=
name|ImmutableMap
operator|.
expr|<
name|String
decl_stmt|,
name|String
decl|>
name|builder
argument_list|()
decl|.
name|put
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"c"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"secondGroup"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|put
argument_list|(
literal|"third"
argument_list|,
literal|"ERR"
argument_list|)
decl|.
name|build
argument_list|()
decl_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncAllUsers
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
comment|// NOTE: foreign user is not included in the results
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncNonExistingExternalUserSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncExternalUsers
argument_list|(
operator|new
name|String
index|[]
block|{
operator|new
name|ExternalIdentityRef
argument_list|(
literal|"nonExisting"
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getString
argument_list|()
block|}
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
literal|""
argument_list|,
literal|"nsi"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncForeignExternalUserSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncExternalUsers
argument_list|(
operator|new
name|String
index|[]
block|{
operator|new
name|ExternalIdentityRef
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
name|foreignIDP
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getString
argument_list|()
block|}
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|"for"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncThrowingExternalUserSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncExternalUsers
argument_list|(
operator|new
name|String
index|[]
block|{
operator|new
name|ExternalIdentityRef
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_EXCEPTION
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getString
argument_list|()
block|}
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_EXCEPTION
argument_list|,
literal|"ERR"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncExternalUsersSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|externalIds
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|TEST_IDS
control|)
block|{
name|externalIds
operator|.
name|add
argument_list|(
operator|new
name|ExternalIdentityRef
argument_list|(
name|id
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncExternalUsers
argument_list|(
name|externalIds
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|externalIds
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|"ERR"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|"ERR"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
argument_list|,
literal|"ERR"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSyncAllExternalUsersSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|syncAllExternalUsers
argument_list|()
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|"ERR"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_SECOND_USER
argument_list|,
literal|"ERR"
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_WILDCARD_USER
argument_list|,
literal|"ERR"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|SyncRuntimeException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testSyncAllExternalUsersThrowingIDP
parameter_list|()
block|{
name|Delegatee
name|dg
init|=
name|Delegatee
operator|.
name|createInstance
argument_list|(
name|REPOSITORY
argument_list|,
operator|new
name|DefaultSyncHandler
argument_list|(
name|syncConfig
argument_list|)
argument_list|,
operator|new
name|TestIdentityProvider
argument_list|(
literal|"throwing"
argument_list|)
block|{
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|ExternalUser
argument_list|>
name|listUsers
parameter_list|()
throws|throws
name|ExternalIdentityException
block|{
throw|throw
operator|new
name|ExternalIdentityException
argument_list|()
throw|;
block|}
block|}
argument_list|,
name|getBatchSize
argument_list|()
argument_list|)
decl_stmt|;
name|dg
operator|.
name|syncAllExternalUsers
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPurgeOrphanedSaveError
parameter_list|()
throws|throws
name|Exception
block|{
name|sync
argument_list|(
operator|new
name|TestIdentityProvider
operator|.
name|TestUser
argument_list|(
literal|"third"
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|idp
argument_list|)
expr_stmt|;
name|sync
argument_list|(
operator|new
name|TestIdentityProvider
operator|.
name|TestUser
argument_list|(
literal|"forth"
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|idp
argument_list|)
expr_stmt|;
name|sync
argument_list|(
name|idp
argument_list|,
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Session
name|s
init|=
name|preventSessionSave
argument_list|(
name|delegatee
argument_list|)
decl_stmt|;
empty_stmt|;
name|String
index|[]
name|result
init|=
name|delegatee
operator|.
name|purgeOrphanedUsers
argument_list|()
decl_stmt|;
name|assertResultMessages
argument_list|(
name|result
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"third"
argument_list|,
literal|"ERR"
argument_list|,
literal|"forth"
argument_list|,
literal|"ERR"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|hasPendingChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
class|class
name|ThrowingSession
implements|implements
name|JackrabbitSession
block|{
specifier|private
name|JackrabbitSession
name|base
decl_stmt|;
specifier|private
name|ThrowingSession
parameter_list|(
annotation|@
name|Nonnull
name|JackrabbitSession
name|session
parameter_list|)
block|{
name|this
operator|.
name|base
operator|=
name|session
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasPermission
parameter_list|(
annotation|@
name|Nonnull
name|String
name|s
parameter_list|,
annotation|@
name|Nonnull
name|String
modifier|...
name|strings
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|hasPermission
argument_list|(
name|s
argument_list|,
name|strings
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PrincipalManager
name|getPrincipalManager
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getPrincipalManager
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|UserManager
name|getUserManager
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getUserManager
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Item
name|getItemOrNull
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getItemOrNull
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Property
name|getPropertyOrNull
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getPropertyOrNull
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Node
name|getNodeOrNull
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|getNodeOrNull
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Repository
name|getRepository
parameter_list|()
block|{
return|return
name|base
operator|.
name|getRepository
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getUserID
parameter_list|()
block|{
return|return
name|base
operator|.
name|getUserID
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getAttributeNames
parameter_list|()
block|{
return|return
name|base
operator|.
name|getAttributeNames
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|base
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Workspace
name|getWorkspace
parameter_list|()
block|{
return|return
name|base
operator|.
name|getWorkspace
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Node
name|getRootNode
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getRootNode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Session
name|impersonate
parameter_list|(
name|Credentials
name|credentials
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|impersonate
argument_list|(
name|credentials
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Node
name|getNodeByUUID
parameter_list|(
name|String
name|uuid
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getNodeByUUID
argument_list|(
name|uuid
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Node
name|getNodeByIdentifier
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getNodeByIdentifier
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Item
name|getItem
parameter_list|(
name|String
name|absPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getItem
argument_list|(
name|absPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Node
name|getNode
parameter_list|(
name|String
name|absPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getNode
argument_list|(
name|absPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Property
name|getProperty
parameter_list|(
name|String
name|absPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getProperty
argument_list|(
name|absPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|itemExists
parameter_list|(
name|String
name|absPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|itemExists
argument_list|(
name|absPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|nodeExists
parameter_list|(
name|String
name|absPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|nodeExists
argument_list|(
name|absPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|propertyExists
parameter_list|(
name|String
name|absPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|propertyExists
argument_list|(
name|absPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|move
parameter_list|(
name|String
name|srcAbsPath
parameter_list|,
name|String
name|destAbsPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|base
operator|.
name|move
argument_list|(
name|srcAbsPath
argument_list|,
name|destAbsPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeItem
parameter_list|(
name|String
name|absPath
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|base
operator|.
name|removeItem
argument_list|(
name|absPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|save
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
operator|new
name|RepositoryException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|refresh
parameter_list|(
name|boolean
name|keepChanges
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|base
operator|.
name|refresh
argument_list|(
name|keepChanges
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasPendingChanges
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|hasPendingChanges
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ValueFactory
name|getValueFactory
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getValueFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasPermission
parameter_list|(
name|String
name|absPath
parameter_list|,
name|String
name|actions
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|hasPermission
argument_list|(
name|absPath
argument_list|,
name|actions
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|checkPermission
parameter_list|(
name|String
name|absPath
parameter_list|,
name|String
name|actions
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|RepositoryException
block|{
name|base
operator|.
name|checkPermission
argument_list|(
name|absPath
argument_list|,
name|actions
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasCapability
parameter_list|(
name|String
name|methodName
parameter_list|,
name|Object
name|target
parameter_list|,
name|Object
index|[]
name|arguments
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|hasCapability
argument_list|(
name|methodName
argument_list|,
name|target
argument_list|,
name|arguments
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ContentHandler
name|getImportContentHandler
parameter_list|(
name|String
name|parentAbsPath
parameter_list|,
name|int
name|uuidBehavior
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getImportContentHandler
argument_list|(
name|parentAbsPath
argument_list|,
name|uuidBehavior
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|importXML
parameter_list|(
name|String
name|parentAbsPath
parameter_list|,
name|InputStream
name|in
parameter_list|,
name|int
name|uuidBehavior
parameter_list|)
throws|throws
name|IOException
throws|,
name|RepositoryException
block|{
name|base
operator|.
name|importXML
argument_list|(
name|parentAbsPath
argument_list|,
name|in
argument_list|,
name|uuidBehavior
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|exportSystemView
parameter_list|(
name|String
name|absPath
parameter_list|,
name|ContentHandler
name|contentHandler
parameter_list|,
name|boolean
name|skipBinary
parameter_list|,
name|boolean
name|noRecurse
parameter_list|)
throws|throws
name|SAXException
throws|,
name|RepositoryException
block|{
name|base
operator|.
name|exportSystemView
argument_list|(
name|absPath
argument_list|,
name|contentHandler
argument_list|,
name|skipBinary
argument_list|,
name|noRecurse
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|exportSystemView
parameter_list|(
name|String
name|absPath
parameter_list|,
name|OutputStream
name|out
parameter_list|,
name|boolean
name|skipBinary
parameter_list|,
name|boolean
name|noRecurse
parameter_list|)
throws|throws
name|IOException
throws|,
name|RepositoryException
block|{
name|base
operator|.
name|exportSystemView
argument_list|(
name|absPath
argument_list|,
name|out
argument_list|,
name|skipBinary
argument_list|,
name|noRecurse
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|exportDocumentView
parameter_list|(
name|String
name|absPath
parameter_list|,
name|ContentHandler
name|contentHandler
parameter_list|,
name|boolean
name|skipBinary
parameter_list|,
name|boolean
name|noRecurse
parameter_list|)
throws|throws
name|SAXException
throws|,
name|RepositoryException
block|{
name|base
operator|.
name|exportDocumentView
argument_list|(
name|absPath
argument_list|,
name|contentHandler
argument_list|,
name|skipBinary
argument_list|,
name|noRecurse
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|exportDocumentView
parameter_list|(
name|String
name|absPath
parameter_list|,
name|OutputStream
name|out
parameter_list|,
name|boolean
name|skipBinary
parameter_list|,
name|boolean
name|noRecurse
parameter_list|)
throws|throws
name|IOException
throws|,
name|RepositoryException
block|{
name|base
operator|.
name|exportDocumentView
argument_list|(
name|absPath
argument_list|,
name|out
argument_list|,
name|skipBinary
argument_list|,
name|noRecurse
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setNamespacePrefix
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|uri
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|base
operator|.
name|setNamespacePrefix
argument_list|(
name|prefix
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getNamespacePrefixes
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getNamespacePrefixes
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|String
name|prefix
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getNamespaceURI
argument_list|(
name|prefix
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespacePrefix
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getNamespacePrefix
argument_list|(
name|uri
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|logout
parameter_list|()
block|{
name|base
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isLive
parameter_list|()
block|{
return|return
name|base
operator|.
name|isLive
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addLockToken
parameter_list|(
name|String
name|lt
parameter_list|)
block|{
name|base
operator|.
name|addLockToken
argument_list|(
name|lt
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getLockTokens
parameter_list|()
block|{
return|return
name|base
operator|.
name|getLockTokens
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeLockToken
parameter_list|(
name|String
name|lt
parameter_list|)
block|{
name|base
operator|.
name|removeLockToken
argument_list|(
name|lt
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|AccessControlManager
name|getAccessControlManager
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getAccessControlManager
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|RetentionManager
name|getRetentionManager
parameter_list|()
throws|throws
name|RepositoryException
block|{
return|return
name|base
operator|.
name|getRetentionManager
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

