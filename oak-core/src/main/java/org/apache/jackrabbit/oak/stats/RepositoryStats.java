begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|RepositoryStatistics
operator|.
name|Type
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|RepositoryStatistics
operator|.
name|Type
operator|.
name|SESSION_COUNT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|RepositoryStatistics
operator|.
name|Type
operator|.
name|SESSION_LOGIN_COUNTER
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|ArrayType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeData
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeDataSupport
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|OpenDataException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|OpenType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|SimpleType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|RepositoryStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|TimeSeries
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|jmx
operator|.
name|RepositoryStatsMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|RepositoryStats
implements|implements
name|RepositoryStatsMBean
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RepositoryStats
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|RepositoryStatistics
name|repoStats
decl_stmt|;
specifier|public
name|RepositoryStats
parameter_list|(
name|RepositoryStatistics
name|repoStats
parameter_list|)
block|{
name|this
operator|.
name|repoStats
operator|=
name|repoStats
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|CompositeData
name|getSessionCount
parameter_list|()
block|{
return|return
name|asCompositeData
argument_list|(
name|SESSION_COUNT
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CompositeData
name|getSessionLogin
parameter_list|()
block|{
return|return
name|asCompositeData
argument_list|(
name|SESSION_LOGIN_COUNTER
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|ITEM_NAMES
init|=
operator|new
name|String
index|[]
block|{
literal|"per second"
block|,
literal|"per minute"
block|,
literal|"per hour"
block|,
literal|"per week"
block|}
decl_stmt|;
specifier|private
name|CompositeData
name|asCompositeData
parameter_list|(
name|Type
name|type
parameter_list|)
block|{
try|try
block|{
name|TimeSeries
name|timeSeries
init|=
name|repoStats
operator|.
name|getTimeSeries
argument_list|(
name|type
argument_list|)
decl_stmt|;
name|long
index|[]
index|[]
name|values
init|=
operator|new
name|long
index|[]
index|[]
block|{
name|timeSeries
operator|.
name|getValuePerSecond
argument_list|()
block|,
name|timeSeries
operator|.
name|getValuePerMinute
argument_list|()
block|,
name|timeSeries
operator|.
name|getValuePerHour
argument_list|()
block|,
name|timeSeries
operator|.
name|getValuePerWeek
argument_list|()
block|}
decl_stmt|;
return|return
operator|new
name|CompositeDataSupport
argument_list|(
name|getCompositeType
argument_list|(
name|type
argument_list|)
argument_list|,
name|ITEM_NAMES
argument_list|,
name|values
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error creating CompositeData instance from TimeSeries"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
specifier|private
specifier|static
name|CompositeType
name|getCompositeType
parameter_list|(
name|Type
name|type
parameter_list|)
throws|throws
name|OpenDataException
block|{
name|ArrayType
argument_list|<
name|int
index|[]
argument_list|>
name|longArrayType
init|=
operator|new
name|ArrayType
argument_list|<
name|int
index|[]
argument_list|>
argument_list|(
name|SimpleType
operator|.
name|LONG
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OpenType
argument_list|<
name|?
argument_list|>
index|[]
name|itemTypes
init|=
operator|new
name|OpenType
index|[]
block|{
name|longArrayType
block|,
name|longArrayType
block|,
name|longArrayType
block|,
name|longArrayType
block|}
decl_stmt|;
name|String
name|name
init|=
name|type
operator|.
name|toString
argument_list|()
decl_stmt|;
return|return
operator|new
name|CompositeType
argument_list|(
name|name
argument_list|,
name|name
operator|+
literal|" time series"
argument_list|,
name|ITEM_NAMES
argument_list|,
name|ITEM_NAMES
argument_list|,
name|itemTypes
argument_list|)
return|;
block|}
block|}
end_class

end_unit

