begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|progress
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|counter
operator|.
name|jmx
operator|.
name|NodeCounter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
operator|.
name|of
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|PathFilter
operator|.
name|PROP_EXCLUDED_PATHS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|PathFilter
operator|.
name|PROP_INCLUDED_PATHS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|NodeCounterMBeanEstimatorTest
block|{
specifier|private
specifier|final
name|NodeStore
name|store
init|=
operator|new
name|MemoryNodeStore
argument_list|()
decl_stmt|;
specifier|private
name|NodeCounter
name|counter
init|=
name|mock
argument_list|(
name|NodeCounter
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|estimateCount
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-a"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-b"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|PROP_INCLUDED_PATHS
argument_list|,
name|asList
argument_list|(
literal|"/content"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-b"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|PROP_EXCLUDED_PATHS
argument_list|,
name|asList
argument_list|(
literal|"/content/old"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-c"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|PROP_INCLUDED_PATHS
argument_list|,
name|asList
argument_list|(
literal|"/libs"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"idx-d"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|PROP_EXCLUDED_PATHS
argument_list|,
name|asList
argument_list|(
literal|"/libs"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"content"
argument_list|)
operator|.
name|child
argument_list|(
literal|"idx-e"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|PROP_EXCLUDED_PATHS
argument_list|,
name|asList
argument_list|(
literal|"/content/old"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"content"
argument_list|)
operator|.
name|child
argument_list|(
literal|"idx-f"
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|counts
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"/"
argument_list|,
literal|100
argument_list|,
literal|"/content"
argument_list|,
literal|50
argument_list|,
literal|"/content/old"
argument_list|,
literal|10
argument_list|,
literal|"/libs"
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|counter
operator|.
name|getEstimatedNodeCount
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|then
argument_list|(
operator|(
name|invocation
lambda|->
block|{
name|String
name|path
init|=
operator|(
name|String
operator|)
name|invocation
operator|.
name|getArguments
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
name|counts
operator|.
name|containsKey
argument_list|(
name|path
argument_list|)
condition|)
block|{
return|return
name|counts
operator|.
name|get
argument_list|(
name|path
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
operator|)
argument_list|)
expr_stmt|;
name|NodeCountEstimator
name|estimator
init|=
operator|new
name|NodeCounterMBeanEstimator
argument_list|(
name|store
argument_list|,
name|counter
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|estimator
operator|.
name|getEstimatedNodeCount
argument_list|(
literal|"/"
argument_list|,
name|of
argument_list|(
literal|"/idx-a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|estimator
operator|.
name|getEstimatedNodeCount
argument_list|(
literal|"/"
argument_list|,
name|of
argument_list|(
literal|"/idx-a"
argument_list|,
literal|"/idx-b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|estimator
operator|.
name|getEstimatedNodeCount
argument_list|(
literal|"/"
argument_list|,
name|of
argument_list|(
literal|"/idx-b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|70
argument_list|,
name|estimator
operator|.
name|getEstimatedNodeCount
argument_list|(
literal|"/"
argument_list|,
name|of
argument_list|(
literal|"/idx-b"
argument_list|,
literal|"/idx-c"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|estimator
operator|.
name|getEstimatedNodeCount
argument_list|(
literal|"/content"
argument_list|,
name|of
argument_list|(
literal|"/content/idx-f"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|estimator
operator|.
name|getEstimatedNodeCount
argument_list|(
literal|"/content"
argument_list|,
name|of
argument_list|(
literal|"/content/idx-e"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

