begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|DefaultEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Editor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
operator|.
name|NT_REP_AUTHORIZABLE_FOLDER
import|;
end_import

begin_comment
comment|/**  * There are occasions where in old JR2 repositories not all ancestors on  * the users path are of type {@code rep:AuthorizableFolder}, thus leading  * to exceptions after repository upgrade.  *<br>  * In order to avoid such situations, this hook verifies that all nodes on  * the users and groups paths are of type {@code rep:AuthorizableFolder} and  * fixes the node-type if it is incorrect.  */
end_comment

begin_class
specifier|public
class|class
name|AuthorizableFolderEditor
extends|extends
name|DefaultEditor
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AuthorizableFolderEditor
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|NodeBuilder
name|currentBuilder
decl_stmt|;
specifier|private
specifier|final
name|String
name|groupsPath
decl_stmt|;
specifier|private
specifier|final
name|String
name|usersPath
decl_stmt|;
specifier|private
specifier|final
name|String
name|path
decl_stmt|;
specifier|public
name|AuthorizableFolderEditor
parameter_list|(
specifier|final
name|NodeBuilder
name|builder
parameter_list|,
specifier|final
name|String
name|path
parameter_list|,
specifier|final
name|String
name|groupsPath
parameter_list|,
specifier|final
name|String
name|usersPath
parameter_list|)
block|{
name|this
operator|.
name|currentBuilder
operator|=
name|builder
expr_stmt|;
name|this
operator|.
name|groupsPath
operator|=
name|groupsPath
expr_stmt|;
name|this
operator|.
name|usersPath
operator|=
name|usersPath
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
specifier|public
specifier|static
name|EditorProvider
name|provider
parameter_list|(
specifier|final
name|String
name|groupsPath
parameter_list|,
specifier|final
name|String
name|usersPath
parameter_list|)
block|{
return|return
operator|new
name|EditorProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Editor
name|getRootEditor
parameter_list|(
specifier|final
name|NodeState
name|before
parameter_list|,
specifier|final
name|NodeState
name|after
parameter_list|,
specifier|final
name|NodeBuilder
name|builder
parameter_list|,
specifier|final
name|CommitInfo
name|info
parameter_list|)
throws|throws
name|CommitFailedException
block|{
return|return
operator|new
name|AuthorizableFolderEditor
argument_list|(
name|builder
argument_list|,
literal|"/"
argument_list|,
name|groupsPath
argument_list|,
name|usersPath
argument_list|)
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|propertyAdded
parameter_list|(
specifier|final
name|PropertyState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|propertyChanged
argument_list|(
literal|null
argument_list|,
name|after
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|propertyChanged
parameter_list|(
specifier|final
name|PropertyState
name|before
parameter_list|,
specifier|final
name|PropertyState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
if|if
condition|(
name|JCR_PRIMARYTYPE
operator|.
name|equals
argument_list|(
name|after
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|nodeType
init|=
name|after
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRING
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Found {}/jcr:primaryType = {}"
argument_list|,
name|path
argument_list|,
name|nodeType
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|nodeType
operator|.
name|equals
argument_list|(
name|NT_REP_AUTHORIZABLE_FOLDER
argument_list|)
operator|&&
name|expectAuthorizableFolder
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Changed {}/jcr:primaryType from {} to {}"
argument_list|,
name|path
argument_list|,
name|nodeType
argument_list|,
name|NT_REP_AUTHORIZABLE_FOLDER
argument_list|)
expr_stmt|;
name|currentBuilder
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_AUTHORIZABLE_FOLDER
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|boolean
name|expectAuthorizableFolder
parameter_list|(
specifier|final
name|String
name|path
parameter_list|)
block|{
return|return
operator|!
name|PathUtils
operator|.
name|denotesRoot
argument_list|(
name|path
argument_list|)
operator|&&
operator|(
name|PathUtils
operator|.
name|isAncestor
argument_list|(
name|path
argument_list|,
name|groupsPath
argument_list|)
operator|||
name|path
operator|.
name|equals
argument_list|(
name|groupsPath
argument_list|)
operator|||
name|PathUtils
operator|.
name|isAncestor
argument_list|(
name|path
argument_list|,
name|usersPath
argument_list|)
operator|||
name|path
operator|.
name|equals
argument_list|(
name|usersPath
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Editor
name|childNodeAdded
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|NodeState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
return|return
name|childNodeChanged
argument_list|(
name|name
argument_list|,
literal|null
argument_list|,
name|after
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Editor
name|childNodeChanged
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|NodeState
name|before
parameter_list|,
specifier|final
name|NodeState
name|after
parameter_list|)
throws|throws
name|CommitFailedException
block|{
specifier|final
name|String
name|childPath
init|=
name|PathUtils
operator|.
name|concat
argument_list|(
name|path
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|expectAuthorizableFolder
argument_list|(
name|childPath
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Found {} - descending"
argument_list|,
name|childPath
argument_list|)
expr_stmt|;
return|return
operator|new
name|AuthorizableFolderEditor
argument_list|(
name|currentBuilder
operator|.
name|child
argument_list|(
name|name
argument_list|)
argument_list|,
name|childPath
argument_list|,
name|groupsPath
argument_list|,
name|usersPath
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

