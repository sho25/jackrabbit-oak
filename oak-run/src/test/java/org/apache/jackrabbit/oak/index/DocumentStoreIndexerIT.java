begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMKBuilderProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|MongoConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|MongoUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
operator|.
name|IndexRootDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
operator|.
name|LocalIndexDir
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentStoreIndexerIT
extends|extends
name|AbstractIndexCommandTest
block|{
annotation|@
name|Rule
specifier|public
name|MongoConnectionFactory
name|connectionFactory
init|=
operator|new
name|MongoConnectionFactory
argument_list|()
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|DocumentMKBuilderProvider
name|builderProvider
init|=
operator|new
name|DocumentMKBuilderProvider
argument_list|()
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|checkMongoDbAvailable
parameter_list|()
block|{
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|MongoUtils
operator|.
name|isAvailable
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|indexMongoRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|getNodeStore
argument_list|()
argument_list|)
expr_stmt|;
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|checkpoint
init|=
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|checkpoint
argument_list|(
name|TimeUnit
operator|.
name|HOURS
operator|.
name|toMillis
argument_list|(
literal|24
argument_list|)
argument_list|)
decl_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexCommand
name|command
init|=
operator|new
name|IndexCommand
argument_list|()
decl_stmt|;
name|File
name|outDir
init|=
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
literal|"--index-temp-dir="
operator|+
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--index-out-dir="
operator|+
name|outDir
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--index-paths=/oak:index/fooIndex"
block|,
literal|"--doc-traversal-mode"
block|,
literal|"--checkpoint="
operator|+
name|checkpoint
block|,
literal|"--reindex"
block|,
literal|"--"
block|,
comment|// -- indicates that options have ended and rest needs to be treated as non option
name|MongoUtils
operator|.
name|URL
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|File
name|indexes
init|=
operator|new
name|File
argument_list|(
name|outDir
argument_list|,
name|IndexerSupport
operator|.
name|LOCAL_INDEX_ROOT_DIR
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|indexes
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|IndexRootDirectory
name|idxRoot
init|=
operator|new
name|IndexRootDirectory
argument_list|(
name|indexes
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|LocalIndexDir
argument_list|>
name|idxDirs
init|=
name|idxRoot
operator|.
name|getAllLocalIndexes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|idxDirs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|NodeStore
name|getNodeStore
parameter_list|()
block|{
return|return
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMongoDB
argument_list|(
name|getConnection
argument_list|()
operator|.
name|getDB
argument_list|()
argument_list|)
operator|.
name|getNodeStore
argument_list|()
return|;
block|}
specifier|private
name|MongoConnection
name|getConnection
parameter_list|()
block|{
name|MongoConnection
name|conn
init|=
name|connectionFactory
operator|.
name|getConnection
argument_list|()
decl_stmt|;
name|assumeNotNull
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|conn
operator|.
name|getDB
argument_list|()
operator|.
name|dropDatabase
argument_list|()
expr_stmt|;
return|return
name|conn
return|;
block|}
block|}
end_class

end_unit

