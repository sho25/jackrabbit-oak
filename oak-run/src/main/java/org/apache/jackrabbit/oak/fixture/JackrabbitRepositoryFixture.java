begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|RepositoryImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|config
operator|.
name|RepositoryConfig
import|;
end_import

begin_class
specifier|public
class|class
name|JackrabbitRepositoryFixture
implements|implements
name|RepositoryFixture
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isAvailable
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setUpCluster
parameter_list|(
name|Repository
index|[]
name|cluster
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|cluster
operator|.
name|length
operator|==
literal|1
condition|)
block|{
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
literal|"jackrabbit-repository"
argument_list|)
decl_stmt|;
name|RepositoryConfig
name|config
init|=
name|RepositoryConfig
operator|.
name|install
argument_list|(
name|directory
argument_list|)
decl_stmt|;
name|cluster
index|[
literal|0
index|]
operator|=
name|RepositoryImpl
operator|.
name|create
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|cluster
operator|.
name|length
operator|>
literal|1
condition|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"TODO"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|syncRepositoryCluster
parameter_list|(
name|Repository
modifier|...
name|nodes
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"TODO"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|tearDownCluster
parameter_list|(
name|Repository
index|[]
name|cluster
parameter_list|)
block|{
for|for
control|(
name|Repository
name|node
range|:
name|cluster
control|)
block|{
name|RepositoryImpl
name|repository
init|=
operator|(
operator|(
name|RepositoryImpl
operator|)
name|node
operator|)
decl_stmt|;
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
name|repository
operator|.
name|getConfig
argument_list|()
operator|.
name|getHomeDir
argument_list|()
argument_list|)
decl_stmt|;
name|repository
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|directory
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

