begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|commit
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_CREATED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_LASTMODIFIED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
operator|.
name|DATE
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|PropertyStates
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|ThreeWayConflictHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|OpenSecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|ISO8601
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JcrLastModifiedConflictHandlerTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|updates
parameter_list|()
throws|throws
name|Exception
block|{
name|ContentRepository
name|repo
init|=
name|newRepo
argument_list|(
operator|new
name|JcrLastModifiedConflictHandler
argument_list|()
argument_list|)
decl_stmt|;
name|Root
name|root
init|=
name|login
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|setup
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|Root
name|ourRoot
init|=
name|login
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|Root
name|theirRoot
init|=
name|login
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|PropertyState
name|p0
init|=
name|createDateProperty
argument_list|(
name|JCR_CREATED
argument_list|)
decl_stmt|;
name|ourRoot
operator|.
name|getTree
argument_list|(
literal|"/c"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|p0
argument_list|)
expr_stmt|;
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|sleep
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|theirRoot
operator|.
name|getTree
argument_list|(
literal|"/c"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|createDateProperty
argument_list|(
name|JCR_CREATED
argument_list|)
argument_list|)
expr_stmt|;
name|ourRoot
operator|.
name|commit
argument_list|()
expr_stmt|;
name|theirRoot
operator|.
name|commit
argument_list|()
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|p0
argument_list|,
name|root
operator|.
name|getTree
argument_list|(
literal|"/c"
argument_list|)
operator|.
name|getProperty
argument_list|(
name|JCR_CREATED
argument_list|)
argument_list|)
expr_stmt|;
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|sleep
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|ourRoot
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|theirRoot
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|ourRoot
operator|.
name|getTree
argument_list|(
literal|"/c"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|createDateProperty
argument_list|(
name|JCR_LASTMODIFIED
argument_list|)
argument_list|)
expr_stmt|;
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|sleep
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|PropertyState
name|p1
init|=
name|createDateProperty
argument_list|(
name|JCR_LASTMODIFIED
argument_list|)
decl_stmt|;
name|theirRoot
operator|.
name|getTree
argument_list|(
literal|"/c"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|ourRoot
operator|.
name|commit
argument_list|()
expr_stmt|;
name|theirRoot
operator|.
name|commit
argument_list|()
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|p1
argument_list|,
name|root
operator|.
name|getTree
argument_list|(
literal|"/c"
argument_list|)
operator|.
name|getProperty
argument_list|(
name|JCR_LASTMODIFIED
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|PropertyState
name|createDateProperty
parameter_list|(
annotation|@
name|NotNull
name|String
name|name
parameter_list|)
block|{
name|String
name|now
init|=
name|ISO8601
operator|.
name|format
argument_list|(
name|Calendar
operator|.
name|getInstance
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|name
argument_list|,
name|now
argument_list|,
name|DATE
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|ContentRepository
name|newRepo
parameter_list|(
name|ThreeWayConflictHandler
name|handler
parameter_list|)
block|{
return|return
operator|new
name|Oak
argument_list|()
operator|.
name|with
argument_list|(
operator|new
name|OpenSecurityProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
name|handler
argument_list|)
operator|.
name|createContentRepository
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|Root
name|login
parameter_list|(
name|ContentRepository
name|repo
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|repo
operator|.
name|login
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|void
name|setup
parameter_list|(
name|Root
name|root
parameter_list|)
throws|throws
name|Exception
block|{
name|Tree
name|tree
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|tree
operator|.
name|addChild
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

