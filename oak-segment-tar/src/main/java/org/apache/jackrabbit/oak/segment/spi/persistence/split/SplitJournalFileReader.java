begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|split
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|persistence
operator|.
name|JournalFileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_class
specifier|public
class|class
name|SplitJournalFileReader
implements|implements
name|JournalFileReader
block|{
specifier|private
specifier|final
name|JournalFileReader
name|roJournalReader
decl_stmt|;
specifier|private
specifier|final
name|JournalFileReader
name|rwJournalReader
decl_stmt|;
specifier|private
specifier|final
name|Optional
argument_list|<
name|String
argument_list|>
name|lastRoJournalEntry
decl_stmt|;
specifier|private
name|boolean
name|rwJournalReaderHasFinished
decl_stmt|;
specifier|private
name|boolean
name|roJournalReaderHasFinished
decl_stmt|;
specifier|public
name|SplitJournalFileReader
parameter_list|(
name|JournalFileReader
name|roJournalReader
parameter_list|,
name|JournalFileReader
name|rwJournalReader
parameter_list|,
name|Optional
argument_list|<
name|String
argument_list|>
name|lastRoJournalEntry
parameter_list|)
block|{
name|this
operator|.
name|roJournalReader
operator|=
name|roJournalReader
expr_stmt|;
name|this
operator|.
name|rwJournalReader
operator|=
name|rwJournalReader
expr_stmt|;
name|this
operator|.
name|lastRoJournalEntry
operator|=
name|lastRoJournalEntry
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|readLine
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|rwJournalReaderHasFinished
condition|)
block|{
name|String
name|line
init|=
name|rwJournalReader
operator|.
name|readLine
argument_list|()
decl_stmt|;
if|if
condition|(
name|line
operator|!=
literal|null
condition|)
block|{
return|return
name|line
return|;
block|}
name|rwJournalReaderHasFinished
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|lastRoJournalEntry
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|rewindToLine
argument_list|(
name|roJournalReader
argument_list|,
name|lastRoJournalEntry
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|lastRoJournalEntry
operator|.
name|get
argument_list|()
return|;
block|}
else|else
block|{
name|roJournalReaderHasFinished
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|roJournalReaderHasFinished
condition|)
block|{
name|String
name|line
init|=
name|roJournalReader
operator|.
name|readLine
argument_list|()
decl_stmt|;
if|if
condition|(
name|line
operator|!=
literal|null
condition|)
block|{
return|return
name|line
return|;
block|}
name|roJournalReaderHasFinished
operator|=
literal|true
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|rewindToLine
parameter_list|(
name|JournalFileReader
name|reader
parameter_list|,
name|String
name|stopLine
parameter_list|)
throws|throws
name|IOException
block|{
while|while
condition|(
literal|true
condition|)
block|{
name|String
name|line
init|=
name|reader
operator|.
name|readLine
argument_list|()
decl_stmt|;
if|if
condition|(
name|line
operator|==
literal|null
operator|||
name|line
operator|.
name|equals
argument_list|(
name|stopLine
argument_list|)
condition|)
block|{
break|break;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|roJournalReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|rwJournalReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

