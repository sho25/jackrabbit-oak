begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|RepMembersConflictHandlerTest
extends|extends
name|AbstractSecurityTest
block|{
comment|/**      * The id of the test group      */
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_ID
init|=
literal|"test-groupId"
decl_stmt|;
specifier|private
name|Group
name|group
decl_stmt|;
specifier|private
name|User
index|[]
name|users
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|UserManager
name|um
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
decl_stmt|;
comment|// create a group to receive users
name|group
operator|=
name|um
operator|.
name|createGroup
argument_list|(
name|GROUP_ID
argument_list|)
expr_stmt|;
comment|// create future members of the above group
name|User
name|u1
init|=
name|um
operator|.
name|createUser
argument_list|(
literal|"u1"
argument_list|,
literal|"pass"
argument_list|)
decl_stmt|;
name|User
name|u2
init|=
name|um
operator|.
name|createUser
argument_list|(
literal|"u2"
argument_list|,
literal|"pass"
argument_list|)
decl_stmt|;
name|User
name|u3
init|=
name|um
operator|.
name|createUser
argument_list|(
literal|"u3"
argument_list|,
literal|"pass"
argument_list|)
decl_stmt|;
name|User
name|u4
init|=
name|um
operator|.
name|createUser
argument_list|(
literal|"u4"
argument_list|,
literal|"pass"
argument_list|)
decl_stmt|;
name|User
name|u5
init|=
name|um
operator|.
name|createUser
argument_list|(
literal|"u5"
argument_list|,
literal|"pass"
argument_list|)
decl_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|users
operator|=
operator|new
name|User
index|[]
block|{
name|u1
block|,
name|u2
block|,
name|u3
block|,
name|u4
block|,
name|u5
block|}
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|addExistingProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|add
argument_list|(
name|ours
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|theirs
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add-Add test      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyAA
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|add
argument_list|(
name|ours
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|theirs
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove-Remove test      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyRR
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|rm
argument_list|(
name|ours
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|rm
argument_list|(
name|theirs
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove-Add with different ids test      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyRA
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|rm
argument_list|(
name|ours
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|theirs
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add-Remove with different ids test      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyAR
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|add
argument_list|(
name|ours
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|rm
argument_list|(
name|theirs
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove-Add same value test. value was already part of the group      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyRA2
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
decl_stmt|;
name|rm
argument_list|(
name|ours
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|theirs
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add-Remove same value test. value was already part of the group      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyAR2
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
decl_stmt|;
name|add
argument_list|(
name|ours
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|rm
argument_list|(
name|theirs
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove-Add same value test. value was not part of the group      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyRA3
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
decl_stmt|;
comment|// we are removing an item that does not yet exist, this should
comment|// not overlap/conflict with the other session adding the same item
name|rm
argument_list|(
name|ours
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|theirs
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add-Remove same value test. value was not part of the group      */
annotation|@
name|Test
specifier|public
name|void
name|changeChangedPropertyAR3
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
decl_stmt|;
name|add
argument_list|(
name|ours
argument_list|,
name|id
argument_list|)
expr_stmt|;
comment|// we are removing an item that does not yet exist, this should
comment|// not overlap/conflict with the other session adding the same item
name|rm
argument_list|(
name|theirs
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Delete-Changed. Delete takes precedence      */
annotation|@
name|Test
specifier|public
name|void
name|deleteChangedProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|add
argument_list|(
name|theirs
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|wipeGroup
argument_list|(
name|ours
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Changed-Deleted. Delete takes precedence      */
annotation|@
name|Test
specifier|public
name|void
name|changeDeletedProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|add
argument_list|(
name|root
argument_list|,
name|users
index|[
literal|0
index|]
operator|.
name|getID
argument_list|()
argument_list|,
name|users
index|[
literal|1
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Root
name|ours
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Root
name|theirs
init|=
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|wipeGroup
argument_list|(
name|theirs
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|ours
argument_list|,
name|users
index|[
literal|2
index|]
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|group
operator|.
name|isDeclaredMember
argument_list|(
name|users
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|add
parameter_list|(
name|Root
name|r
parameter_list|,
name|String
modifier|...
name|ids
parameter_list|)
throws|throws
name|Exception
block|{
name|UserManager
name|um
init|=
name|getUserManager
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|Group
name|g
init|=
operator|(
name|Group
operator|)
name|um
operator|.
name|getAuthorizable
argument_list|(
name|GROUP_ID
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|g
operator|.
name|addMember
argument_list|(
name|um
operator|.
name|getAuthorizable
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|r
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|rm
parameter_list|(
name|Root
name|r
parameter_list|,
name|String
modifier|...
name|ids
parameter_list|)
throws|throws
name|Exception
block|{
name|UserManager
name|um
init|=
name|getUserManager
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|Group
name|g
init|=
operator|(
name|Group
operator|)
name|um
operator|.
name|getAuthorizable
argument_list|(
name|GROUP_ID
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|g
operator|.
name|removeMember
argument_list|(
name|um
operator|.
name|getAuthorizable
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|r
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|wipeGroup
parameter_list|(
name|Root
name|r
parameter_list|)
throws|throws
name|Exception
block|{
name|UserManager
name|um
init|=
name|getUserManager
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|Group
name|g
init|=
operator|(
name|Group
operator|)
name|um
operator|.
name|getAuthorizable
argument_list|(
name|GROUP_ID
argument_list|)
decl_stmt|;
name|r
operator|.
name|getTree
argument_list|(
name|g
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|removeProperty
argument_list|(
name|UserConstants
operator|.
name|REP_MEMBERS
argument_list|)
expr_stmt|;
name|r
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

