begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AllPermissions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|CompiledPermissions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|PermissionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|AdminPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|SystemPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * PermissionProviderImplTest... TODO  */
end_comment

begin_class
specifier|public
class|class
name|PermissionProviderImplTest
block|{
specifier|private
name|PermissionProvider
name|pp
init|=
operator|new
name|PermissionProviderImpl
argument_list|()
decl_stmt|;
specifier|private
name|NodeStore
name|nodeStore
init|=
literal|null
decl_stmt|;
comment|// TODO
annotation|@
name|Test
specifier|public
name|void
name|testGetPermissions
parameter_list|()
block|{
comment|// TODO
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCompilePermissions
parameter_list|()
block|{
comment|// TODO
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetSystemPermissions
parameter_list|()
block|{
name|CompiledPermissions
name|cp
init|=
name|pp
operator|.
name|getCompiledPermissions
argument_list|(
name|nodeStore
argument_list|,
name|Collections
operator|.
expr|<
name|Principal
operator|>
name|singleton
argument_list|(
name|SystemPrincipal
operator|.
name|INSTANCE
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cp
operator|instanceof
name|AllPermissions
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAdminPermissions
parameter_list|()
block|{
name|CompiledPermissions
name|cp
init|=
name|pp
operator|.
name|getCompiledPermissions
argument_list|(
name|nodeStore
argument_list|,
name|Collections
operator|.
expr|<
name|Principal
operator|>
name|singleton
argument_list|(
operator|new
name|AdminPrincipal
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"someAdminName"
return|;
block|}
block|}
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cp
operator|instanceof
name|AllPermissions
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

