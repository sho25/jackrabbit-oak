begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|stats
operator|.
name|RepositoryStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|concurrent
operator|.
name|ExecutorCloser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|DefaultStatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatsOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|BlobStoreStatsTest
block|{
specifier|private
name|ScheduledExecutorService
name|executor
init|=
name|Executors
operator|.
name|newSingleThreadScheduledExecutor
argument_list|()
decl_stmt|;
specifier|private
name|StatisticsProvider
name|statsProvider
init|=
operator|new
name|DefaultStatisticsProvider
argument_list|(
name|executor
argument_list|)
decl_stmt|;
specifier|private
name|BlobStoreStats
name|stats
init|=
operator|new
name|BlobStoreStats
argument_list|(
name|statsProvider
argument_list|)
decl_stmt|;
annotation|@
name|After
specifier|public
name|void
name|shutDown
parameter_list|()
block|{
operator|new
name|ExecutorCloser
argument_list|(
name|executor
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upload
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|uploaded
argument_list|(
literal|103
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
literal|1079
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|103
argument_list|,
name|stats
operator|.
name|getUploadTotalSeconds
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1079
argument_list|,
name|stats
operator|.
name|getUploadTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|stats
operator|.
name|getUploadCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|uploadCompleted
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|stats
operator|.
name|getUploadCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|uploaded
argument_list|(
literal|53
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
literal|47
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|103
operator|+
literal|53
argument_list|,
name|stats
operator|.
name|getUploadTotalSeconds
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1079
operator|+
literal|47
argument_list|,
name|stats
operator|.
name|getUploadTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|uploadCompleted
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stats
operator|.
name|getUploadCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|download
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|downloaded
argument_list|(
literal|"foo"
argument_list|,
literal|103
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
literal|1079
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|103
argument_list|,
name|stats
operator|.
name|getDownloadTotalSeconds
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1079
argument_list|,
name|stats
operator|.
name|getDownloadTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|stats
operator|.
name|getDownloadCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|downloadCompleted
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|stats
operator|.
name|getDownloadCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|downloaded
argument_list|(
literal|"foo"
argument_list|,
literal|53
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
literal|47
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|103
operator|+
literal|53
argument_list|,
name|stats
operator|.
name|getDownloadTotalSeconds
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1079
operator|+
literal|47
argument_list|,
name|stats
operator|.
name|getDownloadTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|downloadCompleted
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stats
operator|.
name|getDownloadCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|uploadStatsWithDefaultOptions
parameter_list|()
block|{
name|RepositoryStatistics
name|repoStats
init|=
name|mock
argument_list|(
name|RepositoryStatistics
operator|.
name|class
argument_list|)
decl_stmt|;
name|statsProvider
operator|=
name|mock
argument_list|(
name|StatisticsProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|statsProvider
operator|.
name|getStats
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|repoStats
argument_list|)
expr_stmt|;
name|stats
operator|=
operator|new
name|BlobStoreStats
argument_list|(
name|statsProvider
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|statsProvider
argument_list|)
operator|.
name|getMeter
argument_list|(
name|eq
argument_list|(
literal|"BLOB_UPLOAD_SIZE"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|statsProvider
argument_list|)
operator|.
name|getMeter
argument_list|(
name|eq
argument_list|(
literal|"BLOB_UPLOAD_TIME"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|downloadStatsWithDefaultOptions
parameter_list|()
block|{
name|RepositoryStatistics
name|repoStats
init|=
name|mock
argument_list|(
name|RepositoryStatistics
operator|.
name|class
argument_list|)
decl_stmt|;
name|statsProvider
operator|=
name|mock
argument_list|(
name|StatisticsProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|statsProvider
operator|.
name|getStats
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|repoStats
argument_list|)
expr_stmt|;
name|stats
operator|=
operator|new
name|BlobStoreStats
argument_list|(
name|statsProvider
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|statsProvider
argument_list|)
operator|.
name|getMeter
argument_list|(
name|eq
argument_list|(
literal|"BLOB_DOWNLOAD_SIZE"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|statsProvider
argument_list|)
operator|.
name|getMeter
argument_list|(
name|eq
argument_list|(
literal|"BLOB_DOWNLOAD_TIME"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|StatsOptions
operator|.
name|DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

