begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|accesscontrol
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ImportBehavior
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|PropInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|AccessControlImporterBesteffortTest
extends|extends
name|AccessControlImporterBaseTest
block|{
annotation|@
name|Override
name|String
name|getImportBehavior
parameter_list|()
block|{
return|return
name|ImportBehavior
operator|.
name|NAME_BESTEFFORT
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStartAceChildInfoUnknownPrincipal
parameter_list|()
throws|throws
name|Exception
block|{
name|init
argument_list|()
expr_stmt|;
name|importer
operator|.
name|start
argument_list|(
name|aclTree
argument_list|)
expr_stmt|;
name|importer
operator|.
name|startChildInfo
argument_list|(
name|aceInfo
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|unknownPrincipalInfo
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testImportWithUnknownPrincipal
parameter_list|()
throws|throws
name|Exception
block|{
name|init
argument_list|()
expr_stmt|;
name|importer
operator|.
name|start
argument_list|(
name|aclTree
argument_list|)
expr_stmt|;
name|PropInfo
name|privs
init|=
operator|new
name|PropInfo
argument_list|(
name|REP_PRIVILEGES
argument_list|,
name|PropertyType
operator|.
name|NAME
argument_list|,
name|createTextValues
argument_list|(
name|PrivilegeConstants
operator|.
name|JCR_READ
argument_list|)
argument_list|)
decl_stmt|;
name|importer
operator|.
name|startChildInfo
argument_list|(
name|aceInfo
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|unknownPrincipalInfo
argument_list|,
name|privs
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|endChildInfo
argument_list|()
expr_stmt|;
name|importer
operator|.
name|end
argument_list|(
name|aclTree
argument_list|)
expr_stmt|;
name|Tree
name|aceTree
init|=
name|aclTree
operator|.
name|getChildren
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|unknownPrincipalInfo
operator|.
name|getValue
argument_list|(
name|PropertyType
operator|.
name|STRING
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|,
name|TreeUtil
operator|.
name|getString
argument_list|(
name|aceTree
argument_list|,
name|REP_PRINCIPAL_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

