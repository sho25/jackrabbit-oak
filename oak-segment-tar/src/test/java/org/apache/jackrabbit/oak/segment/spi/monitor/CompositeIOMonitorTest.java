begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|spi
operator|.
name|monitor
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|Registration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CompositeIOMonitorTest
block|{
specifier|private
specifier|static
specifier|final
name|File
name|FILE
init|=
operator|new
name|File
argument_list|(
literal|""
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testComposition
parameter_list|()
block|{
name|ImmutableList
argument_list|<
name|IOMonitorAssertion
argument_list|>
name|ioMonitors
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
operator|new
name|IOMonitorAssertion
argument_list|()
argument_list|,
operator|new
name|IOMonitorAssertion
argument_list|()
argument_list|)
decl_stmt|;
name|IOMonitor
name|ioMonitor
init|=
operator|new
name|CompositeIOMonitor
argument_list|(
name|ioMonitors
argument_list|)
decl_stmt|;
name|ioMonitor
operator|.
name|beforeSegmentRead
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|afterSegmentRead
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|beforeSegmentWrite
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|afterSegmentWrite
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|forEach
argument_list|(
name|ioMonitorAssertion
lambda|->
block|{
name|ioMonitorAssertion
operator|.
name|assertBeforeReadLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|ioMonitorAssertion
operator|.
name|assertAfterReadLength
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|ioMonitorAssertion
operator|.
name|assertBeforeWriteLength
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|ioMonitorAssertion
operator|.
name|assertAfterWriteLength
argument_list|(
literal|3
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUnregisterComposition
parameter_list|()
block|{
name|ImmutableList
argument_list|<
name|IOMonitorAssertion
argument_list|>
name|ioMonitors
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
operator|new
name|IOMonitorAssertion
argument_list|()
argument_list|,
operator|new
name|IOMonitorAssertion
argument_list|()
argument_list|)
decl_stmt|;
name|CompositeIOMonitor
name|ioMonitor
init|=
operator|new
name|CompositeIOMonitor
argument_list|()
decl_stmt|;
name|ioMonitor
operator|.
name|registerIOMonitor
argument_list|(
name|ioMonitors
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Registration
name|registration
init|=
name|ioMonitor
operator|.
name|registerIOMonitor
argument_list|(
name|ioMonitors
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|ioMonitor
operator|.
name|beforeSegmentRead
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|afterSegmentRead
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|beforeSegmentWrite
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|afterSegmentWrite
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|forEach
argument_list|(
name|ioMonitorAssertion
lambda|->
block|{
name|ioMonitorAssertion
operator|.
name|assertBeforeReadLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|ioMonitorAssertion
operator|.
name|assertAfterReadLength
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|ioMonitorAssertion
operator|.
name|assertBeforeWriteLength
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|ioMonitorAssertion
operator|.
name|assertAfterWriteLength
argument_list|(
literal|3
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|registration
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|ioMonitor
operator|.
name|beforeSegmentRead
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|afterSegmentRead
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|beforeSegmentWrite
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|ioMonitor
operator|.
name|afterSegmentWrite
argument_list|(
name|FILE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|7
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|assertBeforeReadLength
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|assertAfterReadLength
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|assertBeforeWriteLength
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|assertAfterWriteLength
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|assertBeforeReadLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|assertAfterReadLength
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|assertBeforeWriteLength
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|ioMonitors
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|assertAfterWriteLength
argument_list|(
literal|3
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|IOMonitorAssertion
implements|implements
name|IOMonitor
block|{
specifier|private
name|int
name|beforeReadLength
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|int
name|afterReadLength
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|int
name|beforeWriteLength
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|int
name|afterWriteLength
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|beforeSegmentRead
parameter_list|(
name|File
name|file
parameter_list|,
name|long
name|msb
parameter_list|,
name|long
name|lsb
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|beforeReadLength
operator|=
name|length
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterSegmentRead
parameter_list|(
name|File
name|file
parameter_list|,
name|long
name|msb
parameter_list|,
name|long
name|lsb
parameter_list|,
name|int
name|length
parameter_list|,
name|long
name|elapsed
parameter_list|)
block|{
name|afterReadLength
operator|=
name|length
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeSegmentWrite
parameter_list|(
name|File
name|file
parameter_list|,
name|long
name|msb
parameter_list|,
name|long
name|lsb
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|beforeWriteLength
operator|=
name|length
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterSegmentWrite
parameter_list|(
name|File
name|file
parameter_list|,
name|long
name|msb
parameter_list|,
name|long
name|lsb
parameter_list|,
name|int
name|length
parameter_list|,
name|long
name|elapsed
parameter_list|)
block|{
name|afterWriteLength
operator|=
name|length
expr_stmt|;
block|}
specifier|public
name|void
name|assertBeforeReadLength
parameter_list|(
name|int
name|length
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|length
argument_list|,
name|beforeReadLength
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assertAfterReadLength
parameter_list|(
name|int
name|length
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|length
argument_list|,
name|afterReadLength
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assertBeforeWriteLength
parameter_list|(
name|int
name|length
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|length
argument_list|,
name|beforeWriteLength
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assertAfterWriteLength
parameter_list|(
name|int
name|length
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|length
argument_list|,
name|afterWriteLength
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

