begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|SessionQueryEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NamePathMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_comment
comment|/**  * The query engine implementation bound to a session.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|SessionQueryEngineImpl
implements|implements
name|SessionQueryEngine
block|{
specifier|private
specifier|final
name|QueryIndexProvider
name|indexProvider
decl_stmt|;
specifier|public
name|SessionQueryEngineImpl
parameter_list|(
name|QueryIndexProvider
name|indexProvider
parameter_list|)
block|{
name|this
operator|.
name|indexProvider
operator|=
name|indexProvider
expr_stmt|;
block|}
comment|/**      * The implementing class must return the current root {@link NodeState}      * associated with the {@link ContentSession}.      *      * @return the current root {@link NodeState}.      */
specifier|protected
specifier|abstract
name|NodeState
name|getRootNodeState
parameter_list|()
function_decl|;
comment|/**      * The implementing class must return the root associated with the      * {@link ContentSession}.      *      * @return the root associated with the {@link ContentSession}.      */
specifier|protected
specifier|abstract
name|Root
name|getRoot
parameter_list|()
function_decl|;
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getSupportedQueryLanguages
parameter_list|()
block|{
return|return
name|createQueryEngine
argument_list|()
operator|.
name|getSupportedQueryLanguages
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getBindVariableNames
parameter_list|(
name|String
name|statement
parameter_list|,
name|String
name|language
parameter_list|)
throws|throws
name|ParseException
block|{
return|return
name|createQueryEngine
argument_list|()
operator|.
name|getBindVariableNames
argument_list|(
name|statement
argument_list|,
name|language
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Result
name|executeQuery
parameter_list|(
name|String
name|statement
parameter_list|,
name|String
name|language
parameter_list|,
name|long
name|limit
parameter_list|,
name|long
name|offset
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
extends|extends
name|PropertyValue
argument_list|>
name|bindings
parameter_list|,
name|NamePathMapper
name|namePathMapper
parameter_list|)
throws|throws
name|ParseException
block|{
return|return
name|createQueryEngine
argument_list|()
operator|.
name|executeQuery
argument_list|(
name|statement
argument_list|,
name|language
argument_list|,
name|limit
argument_list|,
name|offset
argument_list|,
name|bindings
argument_list|,
name|getRoot
argument_list|()
argument_list|,
name|namePathMapper
argument_list|)
return|;
block|}
specifier|private
name|QueryEngineImpl
name|createQueryEngine
parameter_list|()
block|{
return|return
operator|new
name|QueryEngineImpl
argument_list|(
name|getRootNodeState
argument_list|()
argument_list|,
name|indexProvider
argument_list|)
return|;
block|}
block|}
end_class

end_unit

