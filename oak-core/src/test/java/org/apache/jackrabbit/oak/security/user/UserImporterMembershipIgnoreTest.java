begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|EveryonePrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|UserImporterMembershipIgnoreTest
extends|extends
name|UserImporterBaseTest
block|{
name|Tree
name|groupTree
decl_stmt|;
name|Tree
name|memberRefList
decl_stmt|;
name|UserProvider
name|userProvider
decl_stmt|;
name|String
name|knownMemberContentId
decl_stmt|;
name|String
name|unknownContentId
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|userProvider
operator|=
operator|new
name|UserProvider
argument_list|(
name|root
argument_list|,
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|knownMemberContentId
operator|=
name|userProvider
operator|.
name|getContentID
argument_list|(
name|testUser
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|unknownContentId
operator|=
name|userProvider
operator|.
name|getContentID
argument_list|(
literal|"member1"
argument_list|)
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
name|groupTree
operator|=
name|createGroupTree
argument_list|()
expr_stmt|;
name|groupTree
operator|.
name|setProperty
argument_list|(
name|REP_PRINCIPAL_NAME
argument_list|,
literal|"groupPrincipal"
argument_list|)
expr_stmt|;
name|memberRefList
operator|=
name|groupTree
operator|.
name|addChild
argument_list|(
name|REP_MEMBERS_LIST
argument_list|)
expr_stmt|;
name|memberRefList
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_MEMBER_REFERENCES_LIST
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|start
argument_list|(
name|memberRefList
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testInvalidMemberContentId
parameter_list|()
throws|throws
name|Exception
block|{
name|importer
operator|.
name|startChildInfo
argument_list|(
name|createNodeInfo
argument_list|(
literal|"memberRef"
argument_list|,
name|NT_REP_MEMBER_REFERENCES
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
literal|"memberId"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUnknownMember
parameter_list|()
throws|throws
name|Exception
block|{
name|importer
operator|.
name|startChildInfo
argument_list|(
name|createNodeInfo
argument_list|(
literal|"memberRef"
argument_list|,
name|NT_REP_MEMBER_REFERENCES
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|unknownContentId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
comment|// default importbehavior == IGNORE
name|assertFalse
argument_list|(
name|memberRefList
operator|.
name|hasChild
argument_list|(
literal|"memberRef"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testKnownMemberThresholdNotReached
parameter_list|()
throws|throws
name|Exception
block|{
name|importer
operator|.
name|startChildInfo
argument_list|(
name|createNodeInfo
argument_list|(
literal|"memberRef"
argument_list|,
name|NT_REP_MEMBER_REFERENCES
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|knownMemberContentId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|groupTree
operator|.
name|hasProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testKnownMemberThresholdReached
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|memberIds
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|MembershipWriter
operator|.
name|DEFAULT_MEMBERSHIP_THRESHOLD
condition|;
name|i
operator|++
control|)
block|{
name|memberIds
operator|.
name|add
argument_list|(
name|userProvider
operator|.
name|getContentID
argument_list|(
literal|"m"
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|groupTree
operator|.
name|setProperty
argument_list|(
name|REP_MEMBERS
argument_list|,
name|memberIds
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|importer
operator|.
name|startChildInfo
argument_list|(
name|createNodeInfo
argument_list|(
literal|"memberRef"
argument_list|,
name|NT_REP_MEMBER_REFERENCES
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|knownMemberContentId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|memberRefList
operator|.
name|getChildrenCount
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|memberRefList
operator|.
name|getChildren
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|hasProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMixedMembers
parameter_list|()
throws|throws
name|Exception
block|{
name|importer
operator|.
name|startChildInfo
argument_list|(
name|createNodeInfo
argument_list|(
literal|"memberRef"
argument_list|,
name|NT_REP_MEMBER_REFERENCES
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|unknownContentId
argument_list|,
name|knownMemberContentId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|memberRefList
operator|.
name|hasChild
argument_list|(
literal|"memberRef"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RepositoryException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGroupRemovedBeforeProcessing
parameter_list|()
throws|throws
name|Exception
block|{
name|importer
operator|.
name|startChildInfo
argument_list|(
name|createNodeInfo
argument_list|(
literal|"memberRef"
argument_list|,
name|NT_REP_MEMBER_REFERENCES
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|knownMemberContentId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|groupTree
operator|.
name|remove
argument_list|()
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RepositoryException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testUserConvertedGroupBeforeProcessing
parameter_list|()
throws|throws
name|Exception
block|{
name|importer
operator|.
name|startChildInfo
argument_list|(
name|createNodeInfo
argument_list|(
literal|"memberRef"
argument_list|,
name|NT_REP_MEMBER_REFERENCES
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|knownMemberContentId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|groupTree
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_REP_USER
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddMemberToNonExistingMember
parameter_list|()
throws|throws
name|Exception
block|{
name|groupTree
operator|.
name|setProperty
argument_list|(
name|REP_MEMBERS
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|unknownContentId
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|groupTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|knownMemberContentId
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_GROUP
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|PropertyState
name|members
init|=
name|groupTree
operator|.
name|getProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|members
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|unknownContentId
argument_list|,
name|knownMemberContentId
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|copyOf
argument_list|(
name|members
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRINGS
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddReplacesExistingMember
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|createUserTree
argument_list|()
decl_stmt|;
name|String
name|contentId
init|=
name|userProvider
operator|.
name|getContentID
argument_list|(
name|userTree
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|userTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_AUTHORIZABLE_ID
argument_list|,
name|TEST_USER_ID
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_AUTHORIZABLE
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|groupTree
operator|.
name|setProperty
argument_list|(
name|REP_MEMBERS
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|knownMemberContentId
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|groupTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|contentId
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_GROUP
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|PropertyState
name|members
init|=
name|groupTree
operator|.
name|getProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|members
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|contentId
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|copyOf
argument_list|(
name|members
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRINGS
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNewMembers
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|createUserTree
argument_list|()
decl_stmt|;
name|String
name|contentId
init|=
name|userProvider
operator|.
name|getContentID
argument_list|(
name|userTree
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|userTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_AUTHORIZABLE_ID
argument_list|,
name|TEST_USER_ID
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_AUTHORIZABLE
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|groupTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|contentId
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_MEMBER_REFERENCES
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|PropertyState
name|members
init|=
name|groupTree
operator|.
name|getProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|members
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|contentId
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|members
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRINGS
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNewMembers2
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|createUserTree
argument_list|()
decl_stmt|;
name|String
name|contentId
init|=
name|userProvider
operator|.
name|getContentID
argument_list|(
name|userTree
argument_list|)
decl_stmt|;
comment|// NOTE: reversed over of import compared to 'testNewMembers'
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|groupTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|contentId
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_MEMBER_REFERENCES
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|userTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_AUTHORIZABLE_ID
argument_list|,
name|TEST_USER_ID
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_AUTHORIZABLE
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|PropertyState
name|members
init|=
name|groupTree
operator|.
name|getProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|members
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|contentId
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|members
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRINGS
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddSameAsMember
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|contentId
init|=
name|userProvider
operator|.
name|getContentID
argument_list|(
name|groupTree
argument_list|)
decl_stmt|;
comment|// NOTE: reversed over of import compared to 'testNewMembers'
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|groupTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|contentId
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_MEMBER_REFERENCES
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|PropertyState
name|members
init|=
name|groupTree
operator|.
name|getProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|members
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNewMembersToEveryone
parameter_list|()
throws|throws
name|Exception
block|{
name|groupTree
operator|.
name|setProperty
argument_list|(
name|REP_MEMBERS
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|knownMemberContentId
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|groupTree
operator|.
name|setProperty
argument_list|(
name|REP_PRINCIPAL_NAME
argument_list|,
name|EveryonePrincipal
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|userTree
init|=
name|createUserTree
argument_list|()
decl_stmt|;
name|String
name|contentId
init|=
name|userProvider
operator|.
name|getContentID
argument_list|(
name|userTree
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|userTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_AUTHORIZABLE_ID
argument_list|,
name|TEST_USER_ID
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_AUTHORIZABLE
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|importer
operator|.
name|handlePropInfo
argument_list|(
name|groupTree
argument_list|,
name|createPropInfo
argument_list|(
name|REP_MEMBERS
argument_list|,
name|contentId
argument_list|)
argument_list|,
name|mockPropertyDefinition
argument_list|(
name|NT_REP_MEMBER_REFERENCES
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|importer
operator|.
name|processReferences
argument_list|()
expr_stmt|;
name|PropertyState
name|members
init|=
name|groupTree
operator|.
name|getProperty
argument_list|(
name|REP_MEMBERS
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|members
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|knownMemberContentId
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|members
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRINGS
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

