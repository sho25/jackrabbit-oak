begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|memory
operator|.
name|MemoryDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|RecoveryHandler
operator|.
name|NOOP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasSize
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|ClusterNodeInfoDocumentTest
block|{
specifier|private
name|DocumentStore
name|store
init|=
operator|new
name|MemoryDocumentStore
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|invisibleTrue
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|createInactive
argument_list|(
literal|true
argument_list|)
operator|.
name|isInvisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|invisibleFalse
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|createInactive
argument_list|(
literal|false
argument_list|)
operator|.
name|isInvisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|compatibility1_18
parameter_list|()
block|{
name|ClusterNodeInfoDocument
name|doc
init|=
name|createInactive
argument_list|(
literal|false
argument_list|)
decl_stmt|;
comment|// remove invisible field introduced after 1.18
name|UpdateOp
name|op
init|=
operator|new
name|UpdateOp
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|doc
operator|.
name|getClusterId
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|op
operator|.
name|remove
argument_list|(
name|ClusterNodeInfo
operator|.
name|INVISIBLE
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|store
operator|.
name|findAndUpdate
argument_list|(
name|Collection
operator|.
name|CLUSTER_NODES
argument_list|,
name|op
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ClusterNodeInfoDocument
argument_list|>
name|docs
init|=
name|ClusterNodeInfoDocument
operator|.
name|all
argument_list|(
name|store
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|docs
argument_list|,
name|hasSize
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|docs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isInvisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ClusterNodeInfoDocument
name|createInactive
parameter_list|(
name|boolean
name|invisible
parameter_list|)
block|{
name|int
name|clusterId
init|=
literal|1
decl_stmt|;
name|ClusterNodeInfo
operator|.
name|getInstance
argument_list|(
name|store
argument_list|,
name|NOOP
argument_list|,
literal|"machineId"
argument_list|,
literal|"instanceId"
argument_list|,
name|clusterId
argument_list|,
name|invisible
argument_list|)
operator|.
name|dispose
argument_list|()
expr_stmt|;
return|return
name|store
operator|.
name|find
argument_list|(
name|Collection
operator|.
name|CLUSTER_NODES
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|clusterId
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

