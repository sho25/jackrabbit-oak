begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultAuthorizableActionProviderTest
extends|extends
name|AbstractSecurityTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testNoConfig
parameter_list|()
block|{
name|AuthorizableActionProvider
index|[]
name|providers
init|=
operator|new
name|AuthorizableActionProvider
index|[]
block|{
operator|new
name|DefaultAuthorizableActionProvider
argument_list|()
block|,
operator|new
name|DefaultAuthorizableActionProvider
argument_list|(
literal|null
argument_list|)
block|}
decl_stmt|;
for|for
control|(
name|AuthorizableActionProvider
name|actionProvider
range|:
name|providers
control|)
block|{
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actions
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|AccessControlAction
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyConfig
parameter_list|()
block|{
name|AuthorizableActionProvider
name|actionProvider
init|=
operator|new
name|DefaultAuthorizableActionProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|AccessControlAction
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullActionConfig
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
index|[]
argument_list|>
name|m
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|DefaultAuthorizableActionProvider
operator|.
name|ENABLED_ACTIONS
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|AuthorizableActionProvider
name|actionProvider
init|=
operator|new
name|DefaultAuthorizableActionProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|m
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|AccessControlAction
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmtpyActionConfig
parameter_list|()
block|{
name|AuthorizableActionProvider
name|actionProvider
init|=
operator|new
name|DefaultAuthorizableActionProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|DefaultAuthorizableActionProvider
operator|.
name|ENABLED_ACTIONS
argument_list|,
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actions
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|actions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNonExistingClassName
parameter_list|()
block|{
name|String
index|[]
name|classNames
init|=
operator|new
name|String
index|[]
block|{
literal|"org.apache.jackrabbit.oak.spi.security.user.action.NonExistingAction"
block|,
literal|""
block|}
decl_stmt|;
name|AuthorizableActionProvider
name|actionProvider
init|=
operator|new
name|DefaultAuthorizableActionProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|DefaultAuthorizableActionProvider
operator|.
name|ENABLED_ACTIONS
argument_list|,
name|classNames
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actions
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|actions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testValidConfig
parameter_list|()
block|{
name|String
index|[]
name|classNames
init|=
operator|new
name|String
index|[]
block|{
name|PasswordChangeAction
operator|.
name|class
operator|.
name|getName
argument_list|()
block|,
name|PasswordValidationAction
operator|.
name|class
operator|.
name|getName
argument_list|()
block|}
decl_stmt|;
name|AuthorizableActionProvider
name|actionProvider
init|=
operator|new
name|DefaultAuthorizableActionProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|DefaultAuthorizableActionProvider
operator|.
name|ENABLED_ACTIONS
argument_list|,
name|classNames
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actions
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|actions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|PasswordChangeAction
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|instanceof
name|PasswordValidationAction
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

