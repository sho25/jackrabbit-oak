begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|action
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AuthorizableAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AuthorizableActionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|PasswordValidationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|util
operator|.
name|PasswordUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|ConstraintViolationException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|never
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_class
specifier|public
class|class
name|PasswordValidationActionTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
specifier|final
name|PasswordValidationAction
name|pwAction
init|=
operator|new
name|PasswordValidationAction
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|AuthorizableAction
name|testAction
init|=
name|mock
argument_list|(
name|AuthorizableAction
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|AuthorizableActionProvider
name|actionProvider
init|=
name|securityProvider
lambda|->
name|ImmutableList
operator|.
name|of
argument_list|(
name|pwAction
argument_list|,
name|testAction
argument_list|)
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|pwAction
operator|.
name|init
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|PasswordValidationAction
operator|.
name|CONSTRAINT
argument_list|,
literal|"^.*(?=.{8,})(?=.*[a-z])(?=.*[A-Z]).*"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|ConfigurationParameters
name|getSecurityConfigParameters
parameter_list|()
block|{
name|ConfigurationParameters
name|userParams
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConstants
operator|.
name|PARAM_AUTHORIZABLE_ACTION_PROVIDER
argument_list|,
name|actionProvider
argument_list|)
decl_stmt|;
return|return
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConfiguration
operator|.
name|NAME
argument_list|,
name|userParams
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testActionIsCalled
parameter_list|()
throws|throws
name|Exception
block|{
name|User
name|user
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
literal|"testUser"
argument_list|,
literal|"testUser12345"
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|testAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onCreate
argument_list|(
name|user
argument_list|,
literal|"testUser12345"
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|user
operator|.
name|changePassword
argument_list|(
literal|"pW12345678"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|testAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onPasswordChange
argument_list|(
name|user
argument_list|,
literal|"pW12345678"
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|user
operator|.
name|changePassword
argument_list|(
literal|"pW1234567890"
argument_list|,
literal|"pW12345678"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|testAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onPasswordChange
argument_list|(
name|user
argument_list|,
literal|"pW12345678"
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPasswordValidationActionOnCreate
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|hashed
init|=
name|PasswordUtil
operator|.
name|buildPasswordHash
argument_list|(
literal|"DWkej32H"
argument_list|)
decl_stmt|;
name|User
name|user
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
literal|"testuser"
argument_list|,
name|hashed
argument_list|)
decl_stmt|;
name|String
name|pwValue
init|=
name|root
operator|.
name|getTree
argument_list|(
name|user
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_PASSWORD
argument_list|)
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRING
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|PasswordUtil
operator|.
name|isPlainTextPassword
argument_list|(
name|pwValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|PasswordUtil
operator|.
name|isSame
argument_list|(
name|pwValue
argument_list|,
name|hashed
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConstraintViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testPasswordValidationActionOnChange
parameter_list|()
throws|throws
name|Exception
block|{
name|User
name|user
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
literal|"testuser"
argument_list|,
literal|"testPw123456"
argument_list|)
decl_stmt|;
name|String
name|hashed
init|=
name|PasswordUtil
operator|.
name|buildPasswordHash
argument_list|(
literal|"abc"
argument_list|)
decl_stmt|;
try|try
block|{
name|pwAction
operator|.
name|init
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|PasswordValidationAction
operator|.
name|CONSTRAINT
argument_list|,
literal|"abc"
argument_list|)
argument_list|)
expr_stmt|;
name|user
operator|.
name|changePassword
argument_list|(
name|hashed
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|verify
argument_list|(
name|testAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onCreate
argument_list|(
name|user
argument_list|,
literal|"testPw123456"
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|testAction
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|onPasswordChange
argument_list|(
name|user
argument_list|,
name|hashed
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

