begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|nodetype
operator|.
name|write
operator|.
name|InitialContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|SegmentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|OpenSecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
operator|.
name|deleteQuietly
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|FileStoreBackupTest
block|{
specifier|private
name|File
name|src
decl_stmt|;
specifier|private
name|File
name|destination
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
block|{
name|long
name|run
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|File
name|root
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
decl_stmt|;
name|src
operator|=
operator|new
name|File
argument_list|(
name|root
argument_list|,
literal|"tar-src-"
operator|+
name|run
argument_list|)
expr_stmt|;
name|destination
operator|=
operator|new
name|File
argument_list|(
name|root
argument_list|,
literal|"tar-dest-"
operator|+
name|run
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
block|{
name|deleteQuietly
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|deleteQuietly
argument_list|(
name|destination
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBackup
parameter_list|()
throws|throws
name|Exception
block|{
name|FileStore
name|source
init|=
operator|new
name|FileStore
argument_list|(
name|src
argument_list|,
literal|8
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|NodeStore
name|store
init|=
operator|new
name|SegmentNodeStore
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|init
argument_list|(
name|store
argument_list|)
expr_stmt|;
comment|// initial content
name|FileStoreBackup
operator|.
name|backup
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|compare
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|addTestContent
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|FileStoreBackup
operator|.
name|backup
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|compare
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|source
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRestore
parameter_list|()
throws|throws
name|Exception
block|{
name|FileStore
name|source
init|=
operator|new
name|FileStore
argument_list|(
name|src
argument_list|,
literal|8
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|NodeStore
name|store
init|=
operator|new
name|SegmentNodeStore
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|init
argument_list|(
name|store
argument_list|)
expr_stmt|;
comment|// initial content
name|FileStoreBackup
operator|.
name|backup
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|addTestContent
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|FileStoreRestore
operator|.
name|restore
argument_list|(
name|destination
argument_list|,
name|store
argument_list|)
expr_stmt|;
name|compare
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|source
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addTestContent
parameter_list|(
name|NodeStore
name|store
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"test-backup"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"root"
argument_list|)
expr_stmt|;
comment|// make sure we don't backup the super-root
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|compare
parameter_list|(
name|NodeStore
name|store
parameter_list|,
name|File
name|destination
parameter_list|)
throws|throws
name|IOException
block|{
name|FileStore
name|backup
init|=
operator|new
name|FileStore
argument_list|(
name|destination
argument_list|,
literal|8
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|store
operator|.
name|getRoot
argument_list|()
argument_list|,
operator|new
name|SegmentNodeStore
argument_list|(
name|backup
argument_list|)
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
name|backup
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|init
parameter_list|(
name|NodeStore
name|store
parameter_list|)
block|{
operator|new
name|Oak
argument_list|(
name|store
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|OpenSecurityProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|InitialContent
argument_list|()
argument_list|)
operator|.
name|createContentRepository
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSharedContent
parameter_list|()
throws|throws
name|Exception
block|{
name|FileStore
name|source
init|=
operator|new
name|FileStore
argument_list|(
name|src
argument_list|,
literal|256
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|NodeStore
name|store
init|=
operator|new
name|SegmentNodeStore
argument_list|(
name|source
argument_list|)
decl_stmt|;
comment|// ~100k
name|Blob
name|blob
init|=
name|store
operator|.
name|createBlob
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|100000
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|c1
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"test-backup"
argument_list|)
decl_stmt|;
name|c1
operator|.
name|setProperty
argument_list|(
literal|"blob"
argument_list|,
name|blob
argument_list|)
expr_stmt|;
name|NodeBuilder
name|c2
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"test-backup2"
argument_list|)
decl_stmt|;
name|c2
operator|.
name|setProperty
argument_list|(
literal|"blob"
argument_list|,
name|blob
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|FileStoreBackup
operator|.
name|backup
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|compare
argument_list|(
name|store
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|source
operator|.
name|close
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expected
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|File
name|f
range|:
name|src
operator|.
name|listFiles
argument_list|()
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".tar"
argument_list|)
condition|)
block|{
name|expected
operator|.
name|put
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|,
name|f
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|File
name|f
range|:
name|destination
operator|.
name|listFiles
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|f
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".tar"
argument_list|)
condition|)
block|{
continue|continue;
block|}
name|assertTrue
argument_list|(
name|f
operator|.
name|getName
argument_list|()
operator|+
literal|" is missing from the backup"
argument_list|,
name|expected
operator|.
name|containsKey
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|getName
argument_list|()
operator|+
literal|" is expected to have size<= "
operator|+
name|expected
operator|.
name|get
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
operator|+
literal|" actually is "
operator|+
name|f
operator|.
name|length
argument_list|()
argument_list|,
name|f
operator|.
name|length
argument_list|()
operator|<=
name|expected
operator|.
name|get
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

