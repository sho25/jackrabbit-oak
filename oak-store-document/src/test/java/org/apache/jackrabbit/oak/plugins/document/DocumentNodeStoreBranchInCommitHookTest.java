begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CompositeHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|DefaultEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Editor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|Utils
operator|.
name|isCommitted
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentNodeStoreBranchInCommitHookTest
block|{
annotation|@
name|Rule
specifier|public
name|DocumentMKBuilderProvider
name|builderProvider
init|=
operator|new
name|DocumentMKBuilderProvider
argument_list|()
decl_stmt|;
comment|// OAK-7401
annotation|@
name|Test
specifier|public
name|void
name|manyChangesInCommitHooks
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentNodeStore
name|ns
init|=
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAsyncDelay
argument_list|(
literal|0
argument_list|)
operator|.
name|setUpdateLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// get initial branch commits
name|NodeDocument
name|root
init|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|initialNumBranchCommits
init|=
name|numBranchCommits
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|ns
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|ns
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
operator|new
name|TestHook
argument_list|(
literal|17
argument_list|)
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
comment|// must have created branch commits
name|root
operator|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|numBranchCommits
argument_list|(
name|root
argument_list|)
operator|>
name|initialNumBranchCommits
argument_list|)
expr_stmt|;
block|}
comment|// OAK-7401
annotation|@
name|Test
specifier|public
name|void
name|manyChangesInMultipleCommitHooks
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentNodeStore
name|ns
init|=
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAsyncDelay
argument_list|(
literal|0
argument_list|)
operator|.
name|setUpdateLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// get initial branch commits
name|NodeDocument
name|root
init|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|initialNumBranchCommits
init|=
name|numBranchCommits
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|ns
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|TestHook
name|h1
init|=
operator|new
name|TestHook
argument_list|(
literal|17
argument_list|)
decl_stmt|;
name|TestHook
name|h2
init|=
operator|new
name|TestHook
argument_list|(
literal|23
argument_list|)
decl_stmt|;
name|ns
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
operator|new
name|CompositeHook
argument_list|(
name|h1
argument_list|,
name|h2
argument_list|)
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
comment|// must have created branch commits
name|root
operator|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|numBranchCommits
argument_list|(
name|root
argument_list|)
operator|>
name|initialNumBranchCommits
argument_list|)
expr_stmt|;
name|h1
operator|.
name|assertChanges
argument_list|(
name|ns
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
name|h2
operator|.
name|assertChanges
argument_list|(
name|ns
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// OAK-7401
annotation|@
name|Test
specifier|public
name|void
name|manyChangesInCommitHooksMultipleBranchCommits
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentNodeStore
name|ns
init|=
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAsyncDelay
argument_list|(
literal|0
argument_list|)
operator|.
name|setUpdateLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// get initial branch commits
name|NodeDocument
name|root
init|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|initialNumBranchCommits
init|=
name|numBranchCommits
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|ns
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|TestHook
name|hook
init|=
operator|new
name|TestHook
argument_list|(
literal|41
argument_list|)
decl_stmt|;
name|ns
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|hook
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
comment|// must have created branch commits
name|root
operator|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|numBranchCommits
argument_list|(
name|root
argument_list|)
operator|>
name|initialNumBranchCommits
argument_list|)
expr_stmt|;
name|hook
operator|.
name|assertChanges
argument_list|(
name|ns
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// OAK-7401
annotation|@
name|Test
specifier|public
name|void
name|commitHookTriggersBranchWithConflict
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentNodeStore
name|ns
init|=
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAsyncDelay
argument_list|(
literal|0
argument_list|)
operator|.
name|setUpdateLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// get initial branch commits
name|NodeDocument
name|root
init|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|initialNumBranchCommits
init|=
name|numBranchCommits
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|ns
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|TestHook
name|hook
init|=
operator|new
name|TestHook
argument_list|(
literal|41
argument_list|)
decl_stmt|;
name|ns
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
operator|new
name|CompositeHook
argument_list|(
name|hook
argument_list|,
operator|new
name|FailingHook
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
comment|// fail once
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
comment|// must have created branch commits
name|root
operator|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|numBranchCommits
argument_list|(
name|root
argument_list|)
operator|>
name|initialNumBranchCommits
argument_list|)
expr_stmt|;
name|hook
operator|.
name|assertChanges
argument_list|(
name|ns
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
comment|// must have left behind unmerged branch commits
name|root
operator|=
name|Utils
operator|.
name|getRootDocument
argument_list|(
name|ns
operator|.
name|getDocumentStore
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|value
range|:
name|root
operator|.
name|getLocalRevisions
argument_list|()
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|Utils
operator|.
name|isCommitted
argument_list|(
name|value
argument_list|)
condition|)
block|{
return|return;
block|}
block|}
name|fail
argument_list|(
literal|"Must have created unmerged branch commits"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|numBranchCommits
parameter_list|(
name|NodeDocument
name|root
parameter_list|)
block|{
name|int
name|numBranchCommits
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Revision
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|root
operator|.
name|getLocalRevisions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Revision
name|rev
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
name|value
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|isCommitted
argument_list|(
name|value
argument_list|)
operator|&&
operator|!
name|Utils
operator|.
name|resolveCommitRevision
argument_list|(
name|rev
argument_list|,
name|value
argument_list|)
operator|.
name|equals
argument_list|(
name|rev
argument_list|)
condition|)
block|{
comment|// we have a merged branch commit
name|numBranchCommits
operator|++
expr_stmt|;
block|}
block|}
return|return
name|numBranchCommits
return|;
block|}
specifier|private
specifier|static
class|class
name|FailingHook
implements|implements
name|CommitHook
block|{
specifier|private
name|int
name|countDown
decl_stmt|;
name|FailingHook
parameter_list|(
name|int
name|numFailures
parameter_list|)
block|{
name|this
operator|.
name|countDown
operator|=
name|numFailures
expr_stmt|;
block|}
annotation|@
name|NotNull
annotation|@
name|Override
specifier|public
name|NodeState
name|processCommit
parameter_list|(
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|,
name|CommitInfo
name|info
parameter_list|)
throws|throws
name|CommitFailedException
block|{
if|if
condition|(
name|countDown
operator|--
operator|>
literal|0
condition|)
block|{
throw|throw
operator|new
name|ConflictException
argument_list|(
literal|"Conflict"
argument_list|,
operator|new
name|Revision
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|asCommitFailedException
argument_list|()
throw|;
block|}
return|return
name|after
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|TestHook
extends|extends
name|EditorHook
block|{
specifier|private
specifier|static
specifier|final
name|AtomicInteger
name|COUNTER
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|TestEditorProvider
name|editorProvider
decl_stmt|;
name|TestHook
parameter_list|(
name|int
name|numChanges
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|TestEditorProvider
argument_list|(
literal|"parent-"
operator|+
name|COUNTER
operator|.
name|getAndIncrement
argument_list|()
argument_list|,
name|numChanges
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|TestHook
parameter_list|(
name|TestEditorProvider
name|editorProvider
parameter_list|)
block|{
name|super
argument_list|(
name|editorProvider
argument_list|)
expr_stmt|;
name|this
operator|.
name|editorProvider
operator|=
name|editorProvider
expr_stmt|;
block|}
name|void
name|assertChanges
parameter_list|(
name|NodeState
name|root
parameter_list|)
block|{
name|NodeState
name|parent
init|=
name|root
operator|.
name|getChildNode
argument_list|(
name|editorProvider
operator|.
name|parentName
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|editorProvider
operator|.
name|numChanges
condition|;
name|i
operator|++
control|)
block|{
name|String
name|msg
init|=
literal|"Missing node: /"
operator|+
name|editorProvider
operator|.
name|parentName
operator|+
literal|"/n-"
operator|+
name|i
decl_stmt|;
name|assertTrue
argument_list|(
name|msg
argument_list|,
name|parent
operator|.
name|hasChildNode
argument_list|(
literal|"n-"
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
class|class
name|TestEditorProvider
implements|implements
name|EditorProvider
block|{
specifier|private
specifier|final
name|String
name|parentName
decl_stmt|;
specifier|private
specifier|final
name|int
name|numChanges
decl_stmt|;
name|TestEditorProvider
parameter_list|(
name|String
name|parentName
parameter_list|,
name|int
name|numChanges
parameter_list|)
block|{
name|this
operator|.
name|parentName
operator|=
name|parentName
expr_stmt|;
name|this
operator|.
name|numChanges
operator|=
name|numChanges
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Editor
name|getRootEditor
parameter_list|(
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|,
name|CommitInfo
name|info
parameter_list|)
block|{
return|return
operator|new
name|TestEditor
argument_list|(
name|parentName
argument_list|,
name|numChanges
argument_list|,
name|builder
argument_list|)
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|TestEditor
extends|extends
name|DefaultEditor
block|{
specifier|private
specifier|final
name|String
name|parentName
decl_stmt|;
specifier|private
specifier|final
name|int
name|numChanges
decl_stmt|;
specifier|private
specifier|final
name|NodeBuilder
name|builder
decl_stmt|;
name|TestEditor
parameter_list|(
name|String
name|parentName
parameter_list|,
name|int
name|numChanges
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|parentName
operator|=
name|parentName
expr_stmt|;
name|this
operator|.
name|numChanges
operator|=
name|numChanges
expr_stmt|;
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|enter
parameter_list|(
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|)
block|{
name|NodeBuilder
name|stuff
init|=
name|builder
operator|.
name|child
argument_list|(
name|parentName
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numChanges
condition|;
name|i
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"n-"
operator|+
name|i
decl_stmt|;
name|assertFalse
argument_list|(
name|stuff
operator|.
name|hasChildNode
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|stuff
operator|.
name|child
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

