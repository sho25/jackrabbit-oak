begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|old
operator|.
name|mk
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_comment
comment|/**  * Test large node, property, and values (longer than 65 KB).  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|LargeObjectTest
extends|extends
name|MultiMkTestBase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEST_PATH
init|=
literal|"/"
operator|+
name|LargeObjectTest
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
specifier|public
name|LargeObjectTest
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|super
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|test
parameter_list|()
block|{
name|mk
operator|.
name|commit
argument_list|(
literal|"/"
argument_list|,
literal|"+ \""
operator|+
name|TEST_PATH
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
operator|+
literal|"\": {}"
argument_list|,
name|mk
operator|.
name|getHeadRevision
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|head
init|=
name|mk
operator|.
name|getHeadRevision
argument_list|()
decl_stmt|;
name|head
operator|=
name|mk
operator|.
name|commit
argument_list|(
name|TEST_PATH
argument_list|,
literal|"+ \"test\": { \"data\": \"Hello World\" }"
argument_list|,
name|head
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|large
init|=
operator|new
name|String
argument_list|(
operator|new
name|char
index|[
literal|100000
index|]
argument_list|)
operator|.
name|replace
argument_list|(
operator|(
name|char
operator|)
literal|0
argument_list|,
literal|'x'
argument_list|)
decl_stmt|;
name|head
operator|=
name|mk
operator|.
name|commit
argument_list|(
name|TEST_PATH
argument_list|,
literal|"^ \"test/data\": \""
operator|+
name|large
operator|+
literal|"\""
argument_list|,
name|head
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|head
operator|=
name|mk
operator|.
name|commit
argument_list|(
name|TEST_PATH
argument_list|,
literal|"+ \"test2\": { \""
operator|+
name|large
operator|+
literal|"\": \"Hello World\" }"
argument_list|,
name|head
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|head
operator|=
name|mk
operator|.
name|commit
argument_list|(
name|TEST_PATH
argument_list|,
literal|"^ \"test2/"
operator|+
name|large
operator|+
literal|"\": \""
operator|+
name|large
operator|+
literal|"\""
argument_list|,
name|head
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|head
operator|=
name|mk
operator|.
name|commit
argument_list|(
name|TEST_PATH
argument_list|,
literal|"+ \""
operator|+
name|large
operator|+
literal|"\": { \""
operator|+
name|large
operator|+
literal|"\": \"Hello World\" }"
argument_list|,
name|head
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|head
operator|=
name|mk
operator|.
name|commit
argument_list|(
name|TEST_PATH
argument_list|,
literal|"^ \""
operator|+
name|large
operator|+
literal|"/"
operator|+
name|large
operator|+
literal|"\": \""
operator|+
name|large
operator|+
literal|"\""
argument_list|,
name|head
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mk
operator|.
name|commit
argument_list|(
literal|"/"
argument_list|,
literal|"- \""
operator|+
name|TEST_PATH
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
operator|+
literal|"\""
argument_list|,
name|mk
operator|.
name|getHeadRevision
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

