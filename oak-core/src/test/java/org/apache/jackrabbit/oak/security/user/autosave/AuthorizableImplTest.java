begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|autosave
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Value
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|never
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_class
specifier|public
class|class
name|AuthorizableImplTest
extends|extends
name|AbstractAutoSaveTest
block|{
specifier|private
name|Authorizable
name|dlg
decl_stmt|;
specifier|private
name|AuthorizableImpl
name|a
decl_stmt|;
annotation|@
name|Before
annotation|@
name|Override
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|Authorizable
name|u
init|=
name|mgrDlg
operator|.
name|createUser
argument_list|(
literal|"u"
argument_list|,
literal|"u"
argument_list|)
decl_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|dlg
operator|=
name|spy
argument_list|(
name|u
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|dlg
operator|instanceof
name|AuthorizableImpl
argument_list|)
expr_stmt|;
name|a
operator|=
operator|new
name|AuthorizableImpl
argument_list|(
name|dlg
argument_list|,
name|autosaveMgr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
annotation|@
name|Override
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|Authorizable
name|a
init|=
name|mgrDlg
operator|.
name|getAuthorizable
argument_list|(
literal|"u"
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|!=
literal|null
condition|)
block|{
name|a
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetDlg
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|assertSame
argument_list|(
name|dlg
argument_list|,
name|a
operator|.
name|getDlg
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMgr
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|assertSame
argument_list|(
name|autosaveMgr
argument_list|,
name|a
operator|.
name|getMgr
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetId
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|dlg
operator|.
name|getID
argument_list|()
argument_list|,
name|a
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|getID
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsGroup
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|assertEquals
argument_list|(
name|dlg
operator|.
name|isGroup
argument_list|()
argument_list|,
name|a
operator|.
name|isGroup
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|isGroup
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPrincipal
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|dlg
operator|.
name|getPrincipal
argument_list|()
argument_list|,
name|a
operator|.
name|getPrincipal
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|getPrincipal
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeclaredMemberOf
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|Iterators
operator|.
name|elementsEqual
argument_list|(
name|dlg
operator|.
name|declaredMemberOf
argument_list|()
argument_list|,
name|a
operator|.
name|declaredMemberOf
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|declaredMemberOf
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMemberOf
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|Iterators
operator|.
name|elementsEqual
argument_list|(
name|dlg
operator|.
name|memberOf
argument_list|()
argument_list|,
name|a
operator|.
name|memberOf
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|memberOf
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|a
operator|.
name|remove
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPropertyNames
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|Iterators
operator|.
name|elementsEqual
argument_list|(
name|dlg
operator|.
name|getPropertyNames
argument_list|()
argument_list|,
name|a
operator|.
name|getPropertyNames
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|getPropertyNames
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPropertyNamesRelPath
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|Iterators
operator|.
name|elementsEqual
argument_list|(
name|dlg
operator|.
name|getPropertyNames
argument_list|(
literal|"."
argument_list|)
argument_list|,
name|a
operator|.
name|getPropertyNames
argument_list|(
literal|"."
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|getPropertyNames
argument_list|(
literal|"."
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHasProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|dlg
operator|.
name|hasProperty
argument_list|(
literal|"propName"
argument_list|)
argument_list|,
name|a
operator|.
name|hasProperty
argument_list|(
literal|"propName"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|hasProperty
argument_list|(
literal|"propName"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Value
name|v
init|=
name|getValueFactory
argument_list|(
name|root
argument_list|)
operator|.
name|createValue
argument_list|(
literal|23
argument_list|)
decl_stmt|;
name|a
operator|.
name|setProperty
argument_list|(
literal|"propName"
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"propName"
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetPropertyMv
parameter_list|()
throws|throws
name|Exception
block|{
name|Value
index|[]
name|v
init|=
operator|new
name|Value
index|[]
block|{}
decl_stmt|;
name|a
operator|.
name|setProperty
argument_list|(
literal|"propName"
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"propName"
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNull
argument_list|(
name|a
operator|.
name|getProperty
argument_list|(
literal|"propName"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"propName"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoveProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|a
operator|.
name|removeProperty
argument_list|(
literal|"propName"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|removeProperty
argument_list|(
literal|"propName"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPath
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|dlg
operator|.
name|getPath
argument_list|()
argument_list|,
name|a
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dlg
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|getPath
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|autosaveMgr
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|autosave
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToString
parameter_list|()
throws|throws
name|Exception
block|{
name|Authorizable
name|dlg
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|dlg
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|AuthorizableImpl
argument_list|(
name|dlg
argument_list|,
name|autosaveMgr
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHashCode
parameter_list|()
throws|throws
name|Exception
block|{
name|Authorizable
name|dlg
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|dlg
operator|.
name|hashCode
argument_list|()
argument_list|,
operator|new
name|AuthorizableImpl
argument_list|(
name|dlg
argument_list|,
name|autosaveMgr
argument_list|)
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|Authorizable
name|dlg
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|AuthorizableImpl
name|wrapped
init|=
operator|new
name|AuthorizableImpl
argument_list|(
name|dlg
argument_list|,
name|autosaveMgr
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|wrapped
argument_list|,
name|wrapped
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|wrapped
argument_list|,
operator|new
name|AuthorizableImpl
argument_list|(
name|dlg
argument_list|,
name|autosaveMgr
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|wrapped
argument_list|,
operator|new
name|UserImpl
argument_list|(
name|getTestUser
argument_list|()
argument_list|,
operator|new
name|AutoSaveEnabledManager
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
argument_list|,
name|root
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|Authorizable
name|dlg
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|AuthorizableImpl
name|wrapped
init|=
operator|new
name|AuthorizableImpl
argument_list|(
name|dlg
argument_list|,
name|autosaveMgr
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|wrapped
argument_list|,
name|dlg
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|wrapped
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Authorizable
name|mock
init|=
name|mock
argument_list|(
name|Authorizable
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|wrapped
argument_list|,
name|mock
argument_list|)
expr_stmt|;
name|mock
operator|=
name|mock
argument_list|(
name|AuthorizableImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|wrapped
argument_list|,
name|mock
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

