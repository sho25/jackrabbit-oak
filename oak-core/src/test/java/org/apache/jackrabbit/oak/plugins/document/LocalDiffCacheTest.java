begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|cache
operator|.
name|CacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|LocalDiffCache
operator|.
name|ConsolidatedDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|memory
operator|.
name|MemoryDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|observation
operator|.
name|NodeObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
operator|.
name|newHashMap
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
operator|.
name|newHashSet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|LocalDiffCacheTest
block|{
name|DocumentNodeStore
name|store
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|simpleDiff
parameter_list|()
throws|throws
name|Exception
block|{
name|TestNodeObserver
name|o
init|=
operator|new
name|TestNodeObserver
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|store
operator|=
name|createMK
argument_list|()
operator|.
name|getNodeStore
argument_list|()
expr_stmt|;
name|store
operator|.
name|addObserver
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|o
operator|.
name|reset
argument_list|()
expr_stmt|;
name|LocalDiffCache
name|cache
init|=
name|getLocalDiffCache
argument_list|()
decl_stmt|;
name|CacheStats
name|stats
init|=
name|cache
operator|.
name|getDiffCacheStats
argument_list|()
decl_stmt|;
name|DocumentNodeState
name|beforeState
init|=
name|store
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"a"
argument_list|)
operator|.
name|child
argument_list|(
literal|"a2"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|DocumentNodeState
name|afterState
init|=
name|merge
argument_list|(
name|store
argument_list|,
name|builder
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|stats
operator|.
name|getHitCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|stats
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|o
operator|.
name|added
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ConsolidatedDiff
name|diff
init|=
name|cache
operator|.
name|getDiff
argument_list|(
name|beforeState
operator|.
name|getRevision
argument_list|()
argument_list|,
name|afterState
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|serailized
init|=
name|diff
operator|.
name|asString
argument_list|()
decl_stmt|;
name|ConsolidatedDiff
name|diff2
init|=
name|ConsolidatedDiff
operator|.
name|fromString
argument_list|(
name|serailized
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|diff
argument_list|,
name|diff2
argument_list|)
expr_stmt|;
name|builder
operator|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"a"
argument_list|)
operator|.
name|child
argument_list|(
literal|"a2"
argument_list|)
operator|.
name|removeProperty
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|o
operator|.
name|reset
argument_list|()
expr_stmt|;
name|stats
operator|.
name|resetStats
argument_list|()
expr_stmt|;
name|merge
argument_list|(
name|store
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|stats
operator|.
name|getHitCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|stats
operator|.
name|getMissCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|o
operator|.
name|changed
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|store
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|emptyDiff
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|changes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|ConsolidatedDiff
name|diff
init|=
operator|new
name|ConsolidatedDiff
argument_list|(
name|changes
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|String
name|asString
init|=
name|diff
operator|.
name|asString
argument_list|()
decl_stmt|;
name|ConsolidatedDiff
name|diff2
init|=
name|ConsolidatedDiff
operator|.
name|fromString
argument_list|(
name|asString
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|diff
argument_list|,
name|diff2
argument_list|)
expr_stmt|;
block|}
specifier|private
name|LocalDiffCache
name|getLocalDiffCache
parameter_list|()
block|{
return|return
operator|(
name|LocalDiffCache
operator|)
name|store
operator|.
name|getLocalDiffCache
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|DocumentNodeState
name|merge
parameter_list|(
name|NodeStore
name|store
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|)
throws|throws
name|CommitFailedException
block|{
return|return
operator|(
name|DocumentNodeState
operator|)
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|DocumentMK
name|createMK
parameter_list|()
block|{
return|return
name|create
argument_list|(
operator|new
name|MemoryDocumentStore
argument_list|()
argument_list|,
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|DocumentMK
name|create
parameter_list|(
name|DocumentStore
name|ds
parameter_list|,
name|int
name|clusterId
parameter_list|)
block|{
return|return
operator|new
name|DocumentMK
operator|.
name|Builder
argument_list|()
operator|.
name|setAsyncDelay
argument_list|(
literal|0
argument_list|)
operator|.
name|setDocumentStore
argument_list|(
name|ds
argument_list|)
operator|.
name|setClusterId
argument_list|(
name|clusterId
argument_list|)
operator|.
name|setPersistentCache
argument_list|(
literal|"target/persistentCache,time"
argument_list|)
operator|.
name|open
argument_list|()
return|;
block|}
comment|//------------------------------------------------------------< TestNodeObserver>---
specifier|private
specifier|static
class|class
name|TestNodeObserver
extends|extends
name|NodeObserver
block|{
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|added
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|deleted
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|changed
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|properties
init|=
name|newHashMap
argument_list|()
decl_stmt|;
specifier|protected
name|TestNodeObserver
parameter_list|(
name|String
name|path
parameter_list|,
name|String
modifier|...
name|propertyNames
parameter_list|)
block|{
name|super
argument_list|(
name|path
argument_list|,
name|propertyNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|added
parameter_list|(
annotation|@
name|Nonnull
name|String
name|path
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|added
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|deleted
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|changed
parameter_list|,
annotation|@
name|Nonnull
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|,
annotation|@
name|Nonnull
name|CommitInfo
name|commitInfo
parameter_list|)
block|{
name|this
operator|.
name|added
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashSet
argument_list|(
name|added
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|properties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashMap
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|deleted
parameter_list|(
annotation|@
name|Nonnull
name|String
name|path
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|added
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|deleted
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|changed
parameter_list|,
annotation|@
name|Nonnull
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|,
annotation|@
name|Nonnull
name|CommitInfo
name|commitInfo
parameter_list|)
block|{
name|this
operator|.
name|deleted
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashSet
argument_list|(
name|deleted
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|properties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashMap
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|changed
parameter_list|(
annotation|@
name|Nonnull
name|String
name|path
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|added
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|deleted
parameter_list|,
annotation|@
name|Nonnull
name|Set
argument_list|<
name|String
argument_list|>
name|changed
parameter_list|,
annotation|@
name|Nonnull
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|,
annotation|@
name|Nonnull
name|CommitInfo
name|commitInfo
parameter_list|)
block|{
name|this
operator|.
name|changed
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashSet
argument_list|(
name|changed
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|properties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|newHashMap
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|added
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleted
operator|.
name|clear
argument_list|()
expr_stmt|;
name|changed
operator|.
name|clear
argument_list|()
expr_stmt|;
name|properties
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

