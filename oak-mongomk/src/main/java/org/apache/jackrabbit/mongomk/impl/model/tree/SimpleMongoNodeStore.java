begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|model
operator|.
name|tree
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|model
operator|.
name|ChildNodeEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|model
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|model
operator|.
name|NodeDiffHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|model
operator|.
name|tree
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|model
operator|.
name|tree
operator|.
name|NodeStateDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|model
operator|.
name|tree
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|model
operator|.
name|Node
import|;
end_import

begin_comment
comment|/**  * This dummy NodeStore implementation is needed in order to be able to reuse  * Oak's DiffBuilder in MongoMK.  */
end_comment

begin_class
specifier|public
class|class
name|SimpleMongoNodeStore
implements|implements
name|NodeStore
block|{
annotation|@
name|Override
specifier|public
name|NodeState
name|getRoot
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compare
parameter_list|(
specifier|final
name|NodeState
name|before
parameter_list|,
specifier|final
name|NodeState
name|after
parameter_list|,
specifier|final
name|NodeStateDiff
name|diff
parameter_list|)
block|{
name|Node
name|beforeNode
init|=
operator|(
operator|(
name|MongoNodeState
operator|)
name|before
operator|)
operator|.
name|unwrap
argument_list|()
decl_stmt|;
name|Node
name|afterNode
init|=
operator|(
operator|(
name|MongoNodeState
operator|)
name|after
operator|)
operator|.
name|unwrap
argument_list|()
decl_stmt|;
name|beforeNode
operator|.
name|diff
argument_list|(
name|afterNode
argument_list|,
operator|new
name|NodeDiffHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|propAdded
parameter_list|(
name|String
name|propName
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|diff
operator|.
name|propertyAdded
argument_list|(
name|after
operator|.
name|getProperty
argument_list|(
name|propName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|propChanged
parameter_list|(
name|String
name|propName
parameter_list|,
name|String
name|oldValue
parameter_list|,
name|String
name|newValue
parameter_list|)
block|{
name|diff
operator|.
name|propertyChanged
argument_list|(
name|before
operator|.
name|getProperty
argument_list|(
name|propName
argument_list|)
argument_list|,
name|after
operator|.
name|getProperty
argument_list|(
name|propName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|propDeleted
parameter_list|(
name|String
name|propName
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|diff
operator|.
name|propertyDeleted
argument_list|(
name|before
operator|.
name|getProperty
argument_list|(
name|propName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|childNodeAdded
parameter_list|(
name|ChildNodeEntry
name|added
parameter_list|)
block|{
name|String
name|name
init|=
name|added
operator|.
name|getName
argument_list|()
decl_stmt|;
name|diff
operator|.
name|childNodeAdded
argument_list|(
name|name
argument_list|,
name|after
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|childNodeDeleted
parameter_list|(
name|ChildNodeEntry
name|deleted
parameter_list|)
block|{
name|String
name|name
init|=
name|deleted
operator|.
name|getName
argument_list|()
decl_stmt|;
name|diff
operator|.
name|childNodeDeleted
argument_list|(
name|name
argument_list|,
name|before
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|childNodeChanged
parameter_list|(
name|ChildNodeEntry
name|changed
parameter_list|,
name|Id
name|newId
parameter_list|)
block|{
name|String
name|name
init|=
name|changed
operator|.
name|getName
argument_list|()
decl_stmt|;
name|diff
operator|.
name|childNodeChanged
argument_list|(
name|name
argument_list|,
name|before
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
argument_list|,
name|after
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

