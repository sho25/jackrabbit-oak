begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|upgrade
operator|.
name|checkpoint
operator|.
name|CheckpointRetriever
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentCheckpointRetriever
block|{
specifier|public
specifier|static
name|List
argument_list|<
name|CheckpointRetriever
operator|.
name|Checkpoint
argument_list|>
name|getCheckpoints
parameter_list|(
name|DocumentNodeStore
name|nodeStore
parameter_list|)
block|{
name|List
argument_list|<
name|CheckpointRetriever
operator|.
name|Checkpoint
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Revision
argument_list|,
name|Checkpoints
operator|.
name|Info
argument_list|>
name|e
range|:
name|nodeStore
operator|.
name|getCheckpoints
argument_list|()
operator|.
name|getCheckpoints
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|long
name|created
init|=
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|getTimestamp
argument_list|()
decl_stmt|;
name|long
name|expiryTime
init|=
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|getExpiryTime
argument_list|()
decl_stmt|;
name|String
name|name
init|=
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|CheckpointRetriever
operator|.
name|Checkpoint
argument_list|(
name|name
argument_list|,
name|created
argument_list|,
name|expiryTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

