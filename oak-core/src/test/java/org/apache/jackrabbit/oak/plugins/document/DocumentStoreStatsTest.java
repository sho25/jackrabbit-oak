begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|LoggerContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Meter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|concurrent
operator|.
name|ExecutorCloser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|junit
operator|.
name|LogCustomizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|metric
operator|.
name|MetricStatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
operator|.
name|of
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentStoreStatsTest
block|{
specifier|private
name|ScheduledExecutorService
name|executor
init|=
name|Executors
operator|.
name|newSingleThreadScheduledExecutor
argument_list|()
decl_stmt|;
specifier|private
name|MetricStatisticsProvider
name|statsProvider
init|=
operator|new
name|MetricStatisticsProvider
argument_list|(
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
argument_list|,
name|executor
argument_list|)
decl_stmt|;
specifier|private
name|DocumentStoreStats
name|stats
init|=
operator|new
name|DocumentStoreStats
argument_list|(
name|statsProvider
argument_list|)
decl_stmt|;
annotation|@
name|After
specifier|public
name|void
name|shutDown
parameter_list|()
block|{
name|statsProvider
operator|.
name|close
argument_list|()
expr_stmt|;
operator|new
name|ExecutorCloser
argument_list|(
name|executor
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|doneFindCached
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|doneFindCached
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_CACHED
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindCached
argument_list|(
name|Collection
operator|.
name|SETTINGS
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_CACHED
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|doneFindUncached
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|doneFindUncached
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"0:/"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_PRIMARY
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|getTimer
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_TIMER
argument_list|)
operator|.
name|getSnapshot
argument_list|()
operator|.
name|getMax
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_SLAVE
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindUncached
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"0:/"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_PRIMARY
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_SLAVE
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindUncached
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"2:p/foo"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_PRIMARY
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_SPLIT
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindUncached
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|SETTINGS
argument_list|,
literal|"0:/"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Nothing change for other collection
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_FIND_PRIMARY
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|doneQuery_Nodes
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|doneQuery
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|false
argument_list|,
literal|5
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_QUERY_FIND_READ_COUNT
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_QUERY_PRIMARY
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneQuery
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|false
argument_list|,
literal|7
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_QUERY_SLAVE
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_QUERY_FIND_READ_COUNT
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneQuery
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|false
argument_list|,
literal|7
argument_list|,
literal|1000
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_QUERY_PRIMARY
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_QUERY_LOCK
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|doneQuery_Journal
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|doneQuery
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|JOURNAL
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|false
argument_list|,
literal|5
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|JOURNAL_QUERY
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getTimer
argument_list|(
name|DocumentStoreStats
operator|.
name|JOURNAL_QUERY_TIMER
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|doneCreate_Journal
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|doneCreate
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|JOURNAL
argument_list|,
name|of
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|JOURNAL_CREATE
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|getTimer
argument_list|(
name|DocumentStoreStats
operator|.
name|JOURNAL_CREATE_TIMER
argument_list|)
operator|.
name|getSnapshot
argument_list|()
operator|.
name|getMax
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|doneFindAndModify
parameter_list|()
throws|throws
name|Exception
block|{
name|stats
operator|.
name|doneFindAndModify
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_CREATE_UPSERT
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|getTimer
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_CREATE_UPSERT_TIMER
argument_list|)
operator|.
name|getSnapshot
argument_list|()
operator|.
name|getMax
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindAndModify
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getMeter
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_UPDATE
argument_list|)
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|getTimer
argument_list|(
name|DocumentStoreStats
operator|.
name|NODES_UPDATE_TIMER
argument_list|)
operator|.
name|getSnapshot
argument_list|()
operator|.
name|getMax
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|perfLog
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|logName
init|=
name|DocumentStoreStats
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|".perf"
decl_stmt|;
name|LogCustomizer
name|customLogs
init|=
name|LogCustomizer
operator|.
name|forLogger
argument_list|(
name|logName
argument_list|)
operator|.
name|filter
argument_list|(
name|Level
operator|.
name|TRACE
argument_list|)
operator|.
name|create
argument_list|()
decl_stmt|;
name|enableLevel
argument_list|(
name|logName
argument_list|,
name|Level
operator|.
name|INFO
argument_list|)
expr_stmt|;
name|customLogs
operator|.
name|starting
argument_list|()
expr_stmt|;
comment|//No logs untill debug enabled
name|stats
operator|.
name|doneFindAndModify
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|customLogs
operator|.
name|getLogs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindAndModify
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toNanos
argument_list|(
literal|10
argument_list|)
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|customLogs
operator|.
name|getLogs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|//Change level to DEBUG - Now threshold rule applies
name|enableLevel
argument_list|(
name|logName
argument_list|,
name|Level
operator|.
name|DEBUG
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindAndModify
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|customLogs
operator|.
name|getLogs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindAndModify
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toNanos
argument_list|(
literal|10
argument_list|)
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|customLogs
operator|.
name|getLogs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|//With trace level everything is logged
name|enableLevel
argument_list|(
name|logName
argument_list|,
name|Level
operator|.
name|TRACE
argument_list|)
expr_stmt|;
name|stats
operator|.
name|doneFindAndModify
argument_list|(
literal|100
argument_list|,
name|Collection
operator|.
name|NODES
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|customLogs
operator|.
name|getLogs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|customLogs
operator|.
name|finished
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Meter
name|getMeter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|statsProvider
operator|.
name|getRegistry
argument_list|()
operator|.
name|getMeters
argument_list|()
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|private
name|Timer
name|getTimer
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|statsProvider
operator|.
name|getRegistry
argument_list|()
operator|.
name|getTimers
argument_list|()
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|void
name|enableLevel
parameter_list|(
name|String
name|logName
parameter_list|,
name|Level
name|level
parameter_list|)
block|{
operator|(
operator|(
name|LoggerContext
operator|)
name|LoggerFactory
operator|.
name|getILoggerFactory
argument_list|()
operator|)
operator|.
name|getLogger
argument_list|(
name|logName
argument_list|)
operator|.
name|setLevel
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

