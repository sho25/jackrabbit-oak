begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|cache
operator|.
name|CacheLIRS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|AbstractBlobStore
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|Weigher
import|;
end_import

begin_comment
comment|/**  * A blob store with a cache.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|CachingBlobStore
extends|extends
name|AbstractBlobStore
block|{
specifier|protected
specifier|final
name|CacheLIRS
argument_list|<
name|String
argument_list|,
name|byte
index|[]
argument_list|>
name|cache
init|=
name|CacheLIRS
operator|.
name|newBuilder
argument_list|()
operator|.
name|maximumWeight
argument_list|(
literal|16
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
operator|.
name|averageWeight
argument_list|(
name|getBlockSize
argument_list|()
operator|/
literal|2
argument_list|)
operator|.
name|weigher
argument_list|(
operator|new
name|Weigher
argument_list|<
name|String
argument_list|,
name|byte
index|[]
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|weigh
parameter_list|(
name|String
name|key
parameter_list|,
name|byte
index|[]
name|value
parameter_list|)
block|{
return|return
name|value
operator|.
name|length
return|;
block|}
block|}
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|clearCache
parameter_list|()
block|{
name|cache
operator|.
name|invalidateAll
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

