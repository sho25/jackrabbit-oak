begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|value
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Binary
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Value
import|;
end_import

begin_comment
comment|/**  * Instances of this class represent a {@code Value} which couldn't be retrieved.  * All its accessors throw a {@code RepositoryException}.  */
end_comment

begin_class
class|class
name|ErrorValue
implements|implements
name|Value
block|{
specifier|private
specifier|final
name|Exception
name|exception
decl_stmt|;
specifier|private
specifier|final
name|int
name|type
decl_stmt|;
name|ErrorValue
parameter_list|(
name|Exception
name|exception
parameter_list|,
name|int
name|type
parameter_list|)
block|{
name|this
operator|.
name|exception
operator|=
name|exception
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
name|ErrorValue
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
name|this
argument_list|(
name|e
argument_list|,
name|PropertyType
operator|.
name|UNDEFINED
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getString
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getStream
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Binary
name|getBinary
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLong
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDouble
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|BigDecimal
name|getDecimal
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Calendar
name|getDate
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|getBoolean
parameter_list|()
throws|throws
name|RepositoryException
block|{
throw|throw
name|createException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
specifier|private
name|RepositoryException
name|createException
parameter_list|()
block|{
return|return
operator|new
name|RepositoryException
argument_list|(
literal|"Inaccessible value"
argument_list|,
name|exception
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Inaccessible value: "
operator|+
name|exception
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
end_class

end_unit

