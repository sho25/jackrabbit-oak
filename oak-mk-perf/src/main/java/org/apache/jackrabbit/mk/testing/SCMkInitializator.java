begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|testing
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|util
operator|.
name|BlobStoreFS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|NodeStoreMongo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|MongoMicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|util
operator|.
name|MongoUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|BasicDBObjectBuilder
import|;
end_import

begin_comment
comment|/**  * Initialize a mongodb microkernel.  *   * @author rogoz  *   */
end_comment

begin_class
specifier|public
class|class
name|SCMkInitializator
implements|implements
name|Initializator
block|{
comment|/** 	 * Create a microkernel.Initialize the db. 	 */
specifier|public
name|MicroKernel
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|MicroKernel
name|mk
decl_stmt|;
name|MongoConnection
name|mongoConnection
init|=
operator|new
name|MongoConnection
argument_list|(
name|conf
operator|.
name|getHost
argument_list|()
argument_list|,
name|conf
operator|.
name|getMongoPort
argument_list|()
argument_list|,
name|conf
operator|.
name|getMongoDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|MongoConnection
name|adminConnection
init|=
operator|new
name|MongoConnection
argument_list|(
name|conf
operator|.
name|getHost
argument_list|()
argument_list|,
name|conf
operator|.
name|getMongoPort
argument_list|()
argument_list|,
literal|"admin"
argument_list|)
decl_stmt|;
name|NodeStore
name|nodeStore
init|=
operator|new
name|NodeStoreMongo
argument_list|(
name|mongoConnection
argument_list|)
decl_stmt|;
name|BlobStore
name|blobStore
init|=
operator|new
name|BlobStoreFS
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
decl_stmt|;
comment|// initialize the database
comment|//temporary workaround.Remove the sleep.
name|Thread
operator|.
name|sleep
argument_list|(
literal|20000
argument_list|)
expr_stmt|;
name|MongoUtil
operator|.
name|initDatabase
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
comment|// set the shard key
name|adminConnection
operator|.
name|getDB
argument_list|()
operator|.
name|command
argument_list|(
name|BasicDBObjectBuilder
operator|.
name|start
argument_list|(
literal|"shardCollection"
argument_list|,
literal|"test.nodes"
argument_list|)
operator|.
name|push
argument_list|(
literal|"key"
argument_list|)
operator|.
name|add
argument_list|(
literal|"path"
argument_list|,
literal|1
argument_list|)
operator|.
name|add
argument_list|(
literal|"revId"
argument_list|,
literal|1
argument_list|)
operator|.
name|pop
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|mk
operator|=
operator|new
name|MongoMicroKernel
argument_list|(
name|nodeStore
argument_list|,
name|blobStore
argument_list|)
expr_stmt|;
return|return
name|mk
return|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
literal|"SharedCloudMicrokernel implementation"
return|;
block|}
block|}
end_class

end_unit

