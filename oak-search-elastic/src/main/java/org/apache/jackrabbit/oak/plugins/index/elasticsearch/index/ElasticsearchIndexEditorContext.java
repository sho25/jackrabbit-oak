begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|elasticsearch
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexUpdateCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexingContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
operator|.
name|ExtractedTextCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
operator|.
name|IndexDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
operator|.
name|spi
operator|.
name|editor
operator|.
name|DocumentMaker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|search
operator|.
name|spi
operator|.
name|editor
operator|.
name|FulltextIndexEditorContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_class
specifier|public
class|class
name|ElasticsearchIndexEditorContext
extends|extends
name|FulltextIndexEditorContext
argument_list|<
name|ElasticsearchDocument
argument_list|>
block|{
name|ElasticsearchIndexEditorContext
parameter_list|(
name|NodeState
name|root
parameter_list|,
name|NodeBuilder
name|definition
parameter_list|,
annotation|@
name|Nullable
name|IndexDefinition
name|indexDefinition
parameter_list|,
name|IndexUpdateCallback
name|updateCallback
parameter_list|,
name|ElasticsearchIndexWriterFactory
name|indexWriterFactory
parameter_list|,
name|ExtractedTextCache
name|extractedTextCache
parameter_list|,
name|IndexingContext
name|indexingContext
parameter_list|,
name|boolean
name|asyncIndexing
parameter_list|)
block|{
name|super
argument_list|(
name|root
argument_list|,
name|definition
argument_list|,
name|indexDefinition
argument_list|,
name|updateCallback
argument_list|,
name|indexWriterFactory
argument_list|,
name|extractedTextCache
argument_list|,
name|indexingContext
argument_list|,
name|asyncIndexing
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|IndexDefinition
operator|.
name|Builder
name|newDefinitionBuilder
parameter_list|()
block|{
return|return
operator|new
name|IndexDefinition
operator|.
name|Builder
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|DocumentMaker
argument_list|<
name|ElasticsearchDocument
argument_list|>
name|newDocumentMaker
parameter_list|(
name|IndexDefinition
operator|.
name|IndexingRule
name|rule
parameter_list|,
name|String
name|path
parameter_list|)
block|{
return|return
operator|new
name|ElasticsearchDocumentMaker
argument_list|(
name|getTextExtractor
argument_list|()
argument_list|,
name|getDefinition
argument_list|()
argument_list|,
name|rule
argument_list|,
name|path
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|enableReindexMode
parameter_list|()
block|{
name|super
operator|.
name|enableReindexMode
argument_list|()
expr_stmt|;
comment|// Now, that index definition _might_ have been migrated by super call, it would be ok to
comment|// get writer and provision index settings and mappings
name|getWriter
argument_list|()
operator|.
name|setProvisioningRequired
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ElasticsearchIndexWriter
name|getWriter
parameter_list|()
block|{
return|return
operator|(
name|ElasticsearchIndexWriter
operator|)
name|super
operator|.
name|getWriter
argument_list|()
return|;
block|}
block|}
end_class

end_unit

