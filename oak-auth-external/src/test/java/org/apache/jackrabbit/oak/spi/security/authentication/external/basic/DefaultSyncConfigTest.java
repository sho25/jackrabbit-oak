begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|basic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultSyncConfigTest
block|{
specifier|private
name|DefaultSyncConfig
name|config
init|=
operator|new
name|DefaultSyncConfig
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|void
name|assertAuthorizableConfig
parameter_list|(
annotation|@
name|Nonnull
name|DefaultSyncConfig
operator|.
name|Authorizable
name|authorizableConfig
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|authorizableConfig
operator|.
name|getPathPrefix
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|authorizableConfig
argument_list|,
name|authorizableConfig
operator|.
name|setPathPrefix
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|authorizableConfig
operator|.
name|getPathPrefix
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hu/hu"
argument_list|,
name|authorizableConfig
operator|.
name|setPathPrefix
argument_list|(
literal|"hu/hu"
argument_list|)
operator|.
name|getPathPrefix
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|autoMembership
init|=
name|authorizableConfig
operator|.
name|getAutoMembership
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|autoMembership
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|autoMembership
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|authorizableConfig
argument_list|,
name|authorizableConfig
operator|.
name|setAutoMembership
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|authorizableConfig
operator|.
name|getAutoMembership
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"gr1"
argument_list|,
literal|"gr2"
argument_list|)
argument_list|,
name|authorizableConfig
operator|.
name|setAutoMembership
argument_list|(
literal|"gr1"
argument_list|,
literal|"gr2"
argument_list|)
operator|.
name|getAutoMembership
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"gr"
argument_list|)
argument_list|,
name|authorizableConfig
operator|.
name|setAutoMembership
argument_list|(
literal|""
argument_list|,
literal|" gr "
argument_list|,
literal|null
argument_list|,
literal|""
argument_list|)
operator|.
name|getAutoMembership
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|mapping
init|=
name|authorizableConfig
operator|.
name|getPropertyMapping
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mapping
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|authorizableConfig
argument_list|,
name|authorizableConfig
operator|.
name|setPropertyMapping
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|authorizableConfig
operator|.
name|getPropertyMapping
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|,
name|authorizableConfig
operator|.
name|setPropertyMapping
argument_list|(
literal|null
argument_list|)
operator|.
name|getPropertyMapping
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|authorizableConfig
operator|.
name|getExpirationTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|authorizableConfig
argument_list|,
name|authorizableConfig
operator|.
name|setExpirationTime
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|authorizableConfig
operator|.
name|getExpirationTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|config
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|config
argument_list|,
name|config
operator|.
name|setName
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"name"
argument_list|,
name|config
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUserConfig
parameter_list|()
block|{
name|DefaultSyncConfig
operator|.
name|User
name|userConfig
init|=
name|config
operator|.
name|user
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|userConfig
argument_list|)
expr_stmt|;
name|assertAuthorizableConfig
argument_list|(
name|userConfig
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|userConfig
operator|.
name|getMembershipExpirationTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|userConfig
argument_list|,
name|userConfig
operator|.
name|setMembershipExpirationTime
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|userConfig
operator|.
name|getMembershipExpirationTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MIN_VALUE
argument_list|,
name|userConfig
operator|.
name|setMembershipExpirationTime
argument_list|(
name|Long
operator|.
name|MIN_VALUE
argument_list|)
operator|.
name|getMembershipExpirationTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|userConfig
operator|.
name|getMembershipNestingDepth
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|userConfig
argument_list|,
name|userConfig
operator|.
name|setMembershipNestingDepth
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|userConfig
operator|.
name|getMembershipNestingDepth
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|userConfig
operator|.
name|setMembershipExpirationTime
argument_list|(
literal|0
argument_list|)
operator|.
name|getMembershipExpirationTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGroupConfig
parameter_list|()
block|{
name|DefaultSyncConfig
operator|.
name|Group
name|groupConfig
init|=
name|config
operator|.
name|group
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|groupConfig
argument_list|)
expr_stmt|;
name|assertAuthorizableConfig
argument_list|(
name|groupConfig
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

