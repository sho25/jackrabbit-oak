begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|ImportUUIDBehavior
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|ConstraintViolationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|test
operator|.
name|api
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * Tests to verify the behavior of importing user content packages exported  * from Jackrabbit 2.x and their behavior upon import into an Oak repository.  *  * @since Oak 1.2  * @see<a href="https://issues.apache.org/jira/browse/OAK-2245">OAK-2245</a>  */
end_comment

begin_class
specifier|public
class|class
name|UserImportFromJackrabbit
extends|extends
name|AbstractImportTest
block|{
specifier|private
name|String
name|uid
init|=
literal|"t"
decl_stmt|;
specifier|private
name|String
name|randomNodeName
init|=
literal|"f5aj6fp7q9834jof"
decl_stmt|;
specifier|private
name|String
name|intermediatePath
init|=
literal|"foo/bar/test"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|String
name|getTargetPath
parameter_list|()
block|{
return|return
name|USERPATH
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getImportBehavior
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testImportCreatesAuthorizableId
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|uid
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|uid
argument_list|,
name|newUser
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|uid
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import -> must succeed
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorReplace
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
literal|"t"
argument_list|)
argument_list|,
name|getTargetPath
argument_list|()
operator|+
literal|"/foo/bar/test"
argument_list|)
decl_stmt|;
name|String
name|initialPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|uid
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REPLACE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// replace should retain path
name|assertEquals
argument_list|(
name|initialPath
argument_list|,
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|getTargetPath
argument_list|()
operator|.
name|equals
argument_list|(
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|uid
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import -> must succeed
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorRemove
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|uid
argument_list|)
argument_list|,
name|intermediatePath
argument_list|)
decl_stmt|;
name|String
name|initialPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\"t\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REMOVE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// IMPORT_UUID_COLLISION_REMOVE_EXISTING should result in the user to
comment|// be imported a the new path
name|assertEquals
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|initialPath
operator|.
name|equals
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|uid
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import -> must succeed
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorReplaceFromRenamed
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|uid
argument_list|)
argument_list|,
name|intermediatePath
argument_list|)
decl_stmt|;
name|String
name|initialPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|String
name|movedPath
init|=
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|initialPath
argument_list|,
literal|1
argument_list|)
operator|+
literal|'/'
operator|+
name|randomNodeName
decl_stmt|;
name|adminSession
operator|.
name|move
argument_list|(
name|initialPath
argument_list|,
name|movedPath
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
comment|// import 'correct' jr2 package which contains the encoded ID in the node name
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|uid
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REPLACE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// replace should update the path
name|assertEquals
argument_list|(
literal|"user path"
argument_list|,
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|initialPath
argument_list|,
literal|1
argument_list|)
operator|+
literal|'/'
operator|+
name|uid
argument_list|,
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|uid
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|uid
argument_list|,
name|newUser
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import must succeed.
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorReplaceFromRenamed2
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|uid
argument_list|)
argument_list|,
name|intermediatePath
argument_list|)
decl_stmt|;
name|String
name|initialPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|String
name|movedPath
init|=
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|initialPath
argument_list|,
literal|1
argument_list|)
operator|+
literal|'/'
operator|+
name|randomNodeName
decl_stmt|;
name|adminSession
operator|.
name|move
argument_list|(
name|initialPath
argument_list|,
name|movedPath
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
comment|// we need to include the new node name in the sysview import, so that the importer uses the correct name.
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|randomNodeName
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REPLACE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// replace should retain path
name|assertEquals
argument_list|(
literal|"user path"
argument_list|,
name|movedPath
argument_list|,
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|randomNodeName
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes must fail -> the original authorizable has been replaced
comment|// and got the ID set as specified by the Jackrabbit XML. Since the latter
comment|// specifies the modified authorizable ID, which doesn't represent the
comment|// correct ID as hashed in the jcr:uuid, the CommitHook will detect
comment|// the mismatch, which for the diff looks like a modified ID.
try|try
block|{
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Importing an authorizable with mismatch between authorizableId and uuid must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConstraintViolationException
name|e
parameter_list|)
block|{
comment|// success
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"OakConstraint0022"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorReplaceFromRenamed3
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|uid
argument_list|)
argument_list|,
name|intermediatePath
argument_list|)
decl_stmt|;
name|String
name|originalPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
comment|// we need to include the new node name in the sysview import, so that the importer uses the correct name.
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|randomNodeName
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REPLACE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// replace should change the original path
name|String
name|expectedPath
init|=
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|originalPath
argument_list|,
literal|1
argument_list|)
operator|+
literal|'/'
operator|+
name|randomNodeName
decl_stmt|;
name|assertEquals
argument_list|(
literal|"user path"
argument_list|,
name|expectedPath
argument_list|,
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|randomNodeName
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import -> must fail as the authorizable ID
comment|// has been modified (it no longer represents the correct ID due to the
comment|// modified node name in combination with the fact that in JR 2.x
comment|// the node name MUST contain the id as there is no rep:authorizableId.
try|try
block|{
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Importing an authorizable with mismatch between authorizableId and uuid must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConstraintViolationException
name|e
parameter_list|)
block|{
comment|// success
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"OakConstraint0021"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorRemoveFromRenamed
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|uid
argument_list|)
argument_list|,
name|intermediatePath
argument_list|)
decl_stmt|;
name|String
name|initialPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|String
name|movedPath
init|=
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|initialPath
argument_list|,
literal|1
argument_list|)
operator|+
literal|'/'
operator|+
name|randomNodeName
decl_stmt|;
name|adminSession
operator|.
name|move
argument_list|(
name|initialPath
argument_list|,
name|movedPath
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
comment|// import 'correct' jr2 package which contains the encoded ID in the node name
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|uid
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REMOVE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// IMPORT_UUID_COLLISION_REMOVE_EXISTING should import the user at the new path
name|assertEquals
argument_list|(
literal|"user path"
argument_list|,
name|getTargetPath
argument_list|()
operator|+
literal|'/'
operator|+
name|uid
argument_list|,
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|uid
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|uid
argument_list|,
name|newUser
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import must succeed.
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorRemoveFromRenamed2
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|uid
argument_list|)
argument_list|,
name|intermediatePath
argument_list|)
decl_stmt|;
name|String
name|initialPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|String
name|movedPath
init|=
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|initialPath
argument_list|,
literal|1
argument_list|)
operator|+
literal|'/'
operator|+
name|randomNodeName
decl_stmt|;
name|adminSession
operator|.
name|move
argument_list|(
name|initialPath
argument_list|,
name|movedPath
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
comment|// we need to include the new node name in the sysview import, so that the importer uses the correct name.
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|randomNodeName
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REMOVE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// IMPORT_UUID_COLLISION_REMOVE_EXISTING should import the user at the new path
name|assertEquals
argument_list|(
literal|"user path"
argument_list|,
name|getTargetPath
argument_list|()
operator|+
literal|'/'
operator|+
name|randomNodeName
argument_list|,
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|randomNodeName
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import -> must fail as original user has been
comment|// removed and the JR 2.x the node name doesn't contain the correct id,
comment|// which is detected during save as it looks like the id had been modified.
try|try
block|{
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Importing an authorizable with mismatch between authorizableId and uuid must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConstraintViolationException
name|e
parameter_list|)
block|{
comment|// success
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"OakConstraint0021"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @since Oak 1.2      */
annotation|@
name|Test
specifier|public
name|void
name|testUUIDBehaviorRemoveFromRenamed3
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create authorizable
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|uid
argument_list|)
argument_list|,
name|intermediatePath
argument_list|)
decl_stmt|;
name|String
name|originalPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
comment|// we need to include the new node name in the sysview import, so that the importer uses the correct name.
name|String
name|xml
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<sv:node sv:name=\""
operator|+
name|randomNodeName
operator|+
literal|"\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">"
operator|+
literal|"<sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:User</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:password\" sv:type=\"String\"><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>"
operator|+
literal|"<sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>"
operator|+
literal|"</sv:node>"
decl_stmt|;
name|doImport
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
name|xml
argument_list|,
name|ImportUUIDBehavior
operator|.
name|IMPORT_UUID_COLLISION_REMOVE_EXISTING
argument_list|)
expr_stmt|;
name|Authorizable
name|newUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
comment|// replace should change the original path
name|String
name|expectedPath
init|=
name|getTargetPath
argument_list|()
operator|+
literal|'/'
operator|+
name|randomNodeName
decl_stmt|;
name|assertEquals
argument_list|(
literal|"user path"
argument_list|,
name|expectedPath
argument_list|,
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|originalPath
argument_list|,
literal|1
argument_list|)
operator|+
literal|'/'
operator|+
name|randomNodeName
operator|)
operator|.
name|equals
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Node
name|n
init|=
name|adminSession
operator|.
name|getNode
argument_list|(
name|newUser
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|n
operator|.
name|hasProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|,
name|randomNodeName
argument_list|,
name|n
operator|.
name|getProperty
argument_list|(
name|UserConstants
operator|.
name|REP_AUTHORIZABLE_ID
argument_list|)
operator|.
name|getString
argument_list|()
argument_list|)
expr_stmt|;
comment|// saving changes of the import -> must fail as the authorizable ID
comment|// has been modified (it no longer represents the correct ID due to the
comment|// fact that in JR 2.x the node name MUST contain the id.
try|try
block|{
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Importing an authorizable with mismatch between authorizableId and uuid must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConstraintViolationException
name|e
parameter_list|)
block|{
comment|// success
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"OakConstraint0021"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

