begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|version
operator|.
name|VersionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|JcrUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|cnd
operator|.
name|CndImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|cnd
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|NodeStoreFixtures
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|NodeStoreFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentNodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|NodeDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|bundlor
operator|.
name|BundlingConfigHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
operator|.
name|concat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|AbstractRepositoryTest
operator|.
name|dispose
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|bundlor
operator|.
name|DocumentBundlor
operator|.
name|PROP_PATTERN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
specifier|public
class|class
name|VersionedDocumentBundlingTest
block|{
specifier|public
specifier|static
specifier|final
name|String
name|TEST_NODE_TYPE
init|=
literal|"[oak:Asset]\n"
operator|+
literal|" - * (UNDEFINED) multiple\n"
operator|+
literal|" - * (UNDEFINED)\n"
operator|+
literal|" + * (nt:base) = oak:TestNode VERSION"
decl_stmt|;
specifier|private
name|NodeStoreFixture
name|fixture
decl_stmt|;
specifier|private
name|NodeStore
name|ns
decl_stmt|;
specifier|private
name|Repository
name|repository
decl_stmt|;
specifier|private
name|Session
name|s
decl_stmt|;
specifier|private
name|DocumentStore
name|ds
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|NodeStoreFixtures
operator|.
name|DOCUMENT_NS
operator|.
name|isAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|fixture
operator|=
name|NodeStoreFixtures
operator|.
name|DOCUMENT_MEM
expr_stmt|;
name|ns
operator|=
name|fixture
operator|.
name|createNodeStore
argument_list|()
expr_stmt|;
if|if
condition|(
name|ns
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|ds
operator|=
operator|(
operator|(
name|DocumentNodeStore
operator|)
name|ns
operator|)
operator|.
name|getDocumentStore
argument_list|()
expr_stmt|;
name|Oak
name|oak
init|=
operator|new
name|Oak
argument_list|(
name|ns
argument_list|)
decl_stmt|;
name|repository
operator|=
operator|new
name|Jcr
argument_list|(
name|oak
argument_list|)
operator|.
name|createRepository
argument_list|()
expr_stmt|;
name|s
operator|=
name|repository
operator|.
name|login
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
operator|.
name|toCharArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|configureBundling
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|s
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
name|dispose
argument_list|(
name|repository
argument_list|)
expr_stmt|;
if|if
condition|(
name|ns
operator|!=
literal|null
condition|)
block|{
name|fixture
operator|.
name|dispose
argument_list|(
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|createVersionedNode
parameter_list|()
throws|throws
name|Exception
block|{
name|Node
name|asset
init|=
name|JcrUtils
operator|.
name|getOrCreateByPath
argument_list|(
literal|"/bundlingtest/foo.png"
argument_list|,
literal|"oak:Unstructured"
argument_list|,
literal|"oak:Asset"
argument_list|,
name|s
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|asset
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_VERSIONABLE
argument_list|)
expr_stmt|;
name|Node
name|content
init|=
name|asset
operator|.
name|addNode
argument_list|(
literal|"jcr:content"
argument_list|,
literal|"oak:Unstructured"
argument_list|)
decl_stmt|;
name|content
operator|.
name|addNode
argument_list|(
literal|"metadata"
argument_list|,
literal|"oak:Unstructured"
argument_list|)
expr_stmt|;
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
name|VersionManager
name|vm
init|=
name|s
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getVersionManager
argument_list|()
decl_stmt|;
name|String
name|assetPath
init|=
name|asset
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|vm
operator|.
name|checkin
argument_list|(
name|assetPath
argument_list|)
expr_stmt|;
name|String
name|versionedPath
init|=
name|vm
operator|.
name|getBaseVersion
argument_list|(
name|assetPath
argument_list|)
operator|.
name|getNode
argument_list|(
literal|"jcr:frozenNode"
argument_list|)
operator|.
name|getPath
argument_list|()
decl_stmt|;
comment|//Both normal node and versioned nodes should be bundled
name|assertNull
argument_list|(
name|getNodeDocument
argument_list|(
name|concat
argument_list|(
name|assetPath
argument_list|,
literal|"jcr:content"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|getNodeDocument
argument_list|(
name|concat
argument_list|(
name|versionedPath
argument_list|,
literal|"jcr:content"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|restoreVersionedNode
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|assetParentPath
init|=
literal|"/bundlingtest/par"
decl_stmt|;
name|Node
name|asset
init|=
name|JcrUtils
operator|.
name|getOrCreateByPath
argument_list|(
name|assetParentPath
operator|+
literal|"/foo.png"
argument_list|,
literal|"oak:Unstructured"
argument_list|,
literal|"oak:Asset"
argument_list|,
name|s
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Node
name|assetParent
init|=
name|s
operator|.
name|getNode
argument_list|(
name|assetParentPath
argument_list|)
decl_stmt|;
name|assetParent
operator|.
name|addMixin
argument_list|(
name|JcrConstants
operator|.
name|MIX_VERSIONABLE
argument_list|)
expr_stmt|;
name|asset
operator|.
name|addNode
argument_list|(
literal|"jcr:content"
argument_list|,
literal|"oak:Unstructured"
argument_list|)
expr_stmt|;
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
name|VersionManager
name|vm
init|=
name|s
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getVersionManager
argument_list|()
decl_stmt|;
name|Version
name|version
init|=
name|vm
operator|.
name|checkin
argument_list|(
name|assetParentPath
argument_list|)
decl_stmt|;
name|vm
operator|.
name|checkout
argument_list|(
name|assetParentPath
argument_list|)
expr_stmt|;
name|asset
operator|.
name|getNode
argument_list|(
literal|"jcr:content"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo1"
argument_list|,
literal|"bar1"
argument_list|)
expr_stmt|;
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
name|vm
operator|.
name|restore
argument_list|(
name|version
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|configureBundling
parameter_list|()
throws|throws
name|ParseException
throws|,
name|RepositoryException
throws|,
name|IOException
block|{
name|CndImporter
operator|.
name|registerNodeTypes
argument_list|(
operator|new
name|StringReader
argument_list|(
name|TEST_NODE_TYPE
argument_list|)
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|Node
name|bundlor
init|=
name|JcrUtils
operator|.
name|getOrCreateByPath
argument_list|(
name|BundlingConfigHandler
operator|.
name|CONFIG_PATH
argument_list|,
literal|"oak:Unstructured"
argument_list|,
name|s
argument_list|)
decl_stmt|;
name|Node
name|asset
init|=
name|bundlor
operator|.
name|addNode
argument_list|(
literal|"oak:Asset"
argument_list|)
decl_stmt|;
name|asset
operator|.
name|setProperty
argument_list|(
name|PROP_PATTERN
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"jcr:content"
block|,
literal|"jcr:content/metadata"
block|,
literal|"jcr:content/renditions"
block|}
argument_list|)
expr_stmt|;
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
specifier|private
name|NodeDocument
name|getNodeDocument
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
name|ds
operator|.
name|find
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
name|Utils
operator|.
name|getIdFromPath
argument_list|(
name|path
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

