begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|command
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|command
operator|.
name|BaseCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|BasicDBObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|gridfs
operator|.
name|GridFS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|gridfs
operator|.
name|GridFSDBFile
import|;
end_import

begin_comment
comment|/**  * {@code Command} for {@code MongoMicroKernel#read(String, long, byte[], int, int)}  * FIXME - Reading from large blobs with small increments is slow in this implementation.  * See if this could be improved with some kind of cache mechanism.  */
end_comment

begin_class
specifier|public
class|class
name|ReadBlobCommandGridFS
extends|extends
name|BaseCommand
argument_list|<
name|Integer
argument_list|>
block|{
specifier|private
specifier|final
name|GridFS
name|gridFS
decl_stmt|;
specifier|private
specifier|final
name|String
name|blobId
decl_stmt|;
specifier|private
specifier|final
name|long
name|blobOffset
decl_stmt|;
specifier|private
specifier|final
name|byte
index|[]
name|buffer
decl_stmt|;
specifier|private
specifier|final
name|int
name|bufferOffset
decl_stmt|;
specifier|private
name|int
name|length
decl_stmt|;
comment|/**      * Constructs a new {@code ReadBlobCommandMongo}.      *      * @param gridFS GridFS instance.      * @param blobId Blob id.      * @param blobOffset Blob offset.      * @param buffer Buffer.      * @param bufferOffset Buffer offset.      * @param length Length.      */
specifier|public
name|ReadBlobCommandGridFS
parameter_list|(
name|GridFS
name|gridFS
parameter_list|,
name|String
name|blobId
parameter_list|,
name|long
name|blobOffset
parameter_list|,
name|byte
index|[]
name|buffer
parameter_list|,
name|int
name|bufferOffset
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|gridFS
operator|=
name|gridFS
expr_stmt|;
name|this
operator|.
name|blobId
operator|=
name|blobId
expr_stmt|;
name|this
operator|.
name|blobOffset
operator|=
name|blobOffset
expr_stmt|;
name|this
operator|.
name|buffer
operator|=
name|buffer
expr_stmt|;
name|this
operator|.
name|bufferOffset
operator|=
name|bufferOffset
expr_stmt|;
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Integer
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|fetchBlobFromMongo
argument_list|()
return|;
block|}
specifier|private
name|int
name|fetchBlobFromMongo
parameter_list|()
throws|throws
name|Exception
block|{
name|GridFSDBFile
name|gridFile
init|=
name|gridFS
operator|.
name|findOne
argument_list|(
operator|new
name|BasicDBObject
argument_list|(
literal|"md5"
argument_list|,
name|blobId
argument_list|)
argument_list|)
decl_stmt|;
name|long
name|fileLength
init|=
name|gridFile
operator|.
name|getLength
argument_list|()
decl_stmt|;
name|long
name|start
init|=
name|blobOffset
decl_stmt|;
name|long
name|end
init|=
name|blobOffset
operator|+
name|length
decl_stmt|;
if|if
condition|(
name|end
operator|>
name|fileLength
condition|)
block|{
name|end
operator|=
name|fileLength
expr_stmt|;
block|}
name|length
operator|=
call|(
name|int
call|)
argument_list|(
name|end
operator|-
name|start
argument_list|)
expr_stmt|;
if|if
condition|(
name|start
operator|<
name|end
condition|)
block|{
name|InputStream
name|is
init|=
name|gridFile
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|skipFully
argument_list|(
name|is
argument_list|,
name|blobOffset
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|readFully
argument_list|(
name|is
argument_list|,
name|buffer
argument_list|,
name|bufferOffset
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|length
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
block|}
end_class

end_unit

