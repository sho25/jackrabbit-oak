begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexHookProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|index
operator|.
name|SolrIndexDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|query
operator|.
name|SolrQueryIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|solr
operator|.
name|server
operator|.
name|FixedNodeStateConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|EmbeddedSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexUtils
operator|.
name|buildIndexDefinitions
import|;
end_import

begin_comment
comment|/**  * Utility class for tests  */
end_comment

begin_class
specifier|public
class|class
name|TestUtils
block|{
specifier|static
specifier|final
name|String
name|SOLR_HOME_PATH
init|=
literal|"target/test-classes/solr"
decl_stmt|;
specifier|static
specifier|final
name|String
name|SOLRCONFIG_PATH
init|=
literal|"target/test-classes/solr/solr.xml"
decl_stmt|;
specifier|public
specifier|static
name|QueryIndexProvider
name|getTestQueryIndexProvider
parameter_list|(
specifier|final
name|SolrServer
name|solrServer
parameter_list|,
specifier|final
name|OakSolrConfiguration
name|configuration
parameter_list|)
block|{
return|return
operator|new
name|QueryIndexProvider
argument_list|()
block|{
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|?
extends|extends
name|QueryIndex
argument_list|>
name|getQueryIndexes
parameter_list|(
name|NodeState
name|nodeState
parameter_list|)
block|{
name|List
argument_list|<
name|QueryIndex
argument_list|>
name|tempIndexes
init|=
operator|new
name|ArrayList
argument_list|<
name|QueryIndex
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|IndexDefinition
name|child
range|:
name|buildIndexDefinitions
argument_list|(
name|nodeState
argument_list|,
literal|"/"
argument_list|,
name|SolrQueryIndex
operator|.
name|TYPE
argument_list|)
control|)
block|{
try|try
block|{
name|tempIndexes
operator|.
name|add
argument_list|(
operator|new
name|SolrQueryIndex
argument_list|(
name|child
argument_list|,
name|solrServer
argument_list|,
name|configuration
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|tempIndexes
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
name|IndexHookProvider
name|getTestIndexHookProvider
parameter_list|(
specifier|final
name|SolrServer
name|solrServer
parameter_list|,
specifier|final
name|OakSolrConfiguration
name|configuration
parameter_list|)
block|{
return|return
operator|new
name|IndexHookProvider
argument_list|()
block|{
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|?
extends|extends
name|IndexHook
argument_list|>
name|getIndexHooks
parameter_list|(
name|String
name|s
parameter_list|,
name|NodeBuilder
name|nodeBuilder
parameter_list|)
block|{
if|if
condition|(
name|SolrQueryIndex
operator|.
name|TYPE
operator|.
name|equals
argument_list|(
name|s
argument_list|)
condition|)
block|{
try|try
block|{
name|IndexHook
name|indexHook
init|=
operator|new
name|SolrIndexDiff
argument_list|(
name|nodeBuilder
argument_list|,
name|solrServer
argument_list|,
name|configuration
argument_list|)
decl_stmt|;
return|return
name|ImmutableList
operator|.
name|of
argument_list|(
name|indexHook
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|ImmutableList
operator|.
name|of
argument_list|()
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
name|SolrServer
name|createSolrServer
parameter_list|()
throws|throws
name|Exception
block|{
name|CoreContainer
name|coreContainer
init|=
operator|new
name|CoreContainer
argument_list|(
name|SOLR_HOME_PATH
argument_list|)
decl_stmt|;
name|coreContainer
operator|.
name|load
argument_list|(
name|SOLR_HOME_PATH
argument_list|,
operator|new
name|File
argument_list|(
name|SOLRCONFIG_PATH
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|EmbeddedSolrServer
argument_list|(
name|coreContainer
argument_list|,
literal|"oak"
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|OakSolrConfiguration
name|getTestConfiguration
parameter_list|(
name|NodeState
name|nodeState
parameter_list|)
block|{
return|return
operator|new
name|FixedNodeStateConfiguration
argument_list|(
name|nodeState
argument_list|)
return|;
block|}
block|}
end_class

end_unit

