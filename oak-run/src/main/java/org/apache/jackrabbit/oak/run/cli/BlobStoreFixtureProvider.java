begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|CheckForNull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Closer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|cm
operator|.
name|file
operator|.
name|ConfigurationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|FileDataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|blob
operator|.
name|cloud
operator|.
name|aws
operator|.
name|s3
operator|.
name|SharedS3DataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|blob
operator|.
name|cloud
operator|.
name|azure
operator|.
name|blobstorage
operator|.
name|AzureDataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|console
operator|.
name|BlobStoreFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|DataStoreBlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
operator|.
name|OakFileDataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
operator|.
name|BlobStoreOptions
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PropertiesUtil
operator|.
name|populate
import|;
end_import

begin_class
specifier|public
class|class
name|BlobStoreFixtureProvider
block|{
annotation|@
name|CheckForNull
specifier|public
specifier|static
name|BlobStoreFixture
name|create
parameter_list|(
name|Options
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|BlobStoreOptions
name|bsopts
init|=
name|options
operator|.
name|getOptionBean
argument_list|(
name|BlobStoreOptions
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|bsopts
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|Type
name|bsType
init|=
name|bsopts
operator|.
name|getBlobStoreType
argument_list|()
decl_stmt|;
if|if
condition|(
name|bsType
operator|==
name|Type
operator|.
name|NONE
condition|)
block|{
return|return
literal|null
return|;
block|}
name|Closer
name|closer
init|=
name|Closer
operator|.
name|create
argument_list|()
decl_stmt|;
name|DataStore
name|delegate
decl_stmt|;
if|if
condition|(
name|bsType
operator|==
name|Type
operator|.
name|S3
condition|)
block|{
name|SharedS3DataStore
name|s3ds
init|=
operator|new
name|SharedS3DataStore
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
name|loadAndTransformProps
argument_list|(
name|bsopts
operator|.
name|getS3ConfigPath
argument_list|()
argument_list|)
decl_stmt|;
name|s3ds
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|File
name|homeDir
init|=
name|Files
operator|.
name|createTempDir
argument_list|()
decl_stmt|;
name|closer
operator|.
name|register
argument_list|(
name|asCloseable
argument_list|(
name|homeDir
argument_list|)
argument_list|)
expr_stmt|;
name|s3ds
operator|.
name|init
argument_list|(
name|homeDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|delegate
operator|=
name|s3ds
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|bsType
operator|==
name|Type
operator|.
name|AZURE
condition|)
block|{
name|AzureDataStore
name|azureds
init|=
operator|new
name|AzureDataStore
argument_list|()
decl_stmt|;
name|String
name|cfgPath
init|=
name|bsopts
operator|.
name|getAzureConfigPath
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
name|loadAndTransformProps
argument_list|(
name|cfgPath
argument_list|)
decl_stmt|;
name|azureds
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|File
name|homeDir
init|=
name|Files
operator|.
name|createTempDir
argument_list|()
decl_stmt|;
name|azureds
operator|.
name|init
argument_list|(
name|homeDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|closer
operator|.
name|register
argument_list|(
name|asCloseable
argument_list|(
name|homeDir
argument_list|)
argument_list|)
expr_stmt|;
name|delegate
operator|=
name|azureds
expr_stmt|;
block|}
else|else
block|{
name|FileDataStore
name|fds
init|=
operator|new
name|OakFileDataStore
argument_list|()
decl_stmt|;
name|delegate
operator|=
name|fds
expr_stmt|;
if|if
condition|(
name|bsopts
operator|.
name|getFDSPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|fds
operator|.
name|setPath
argument_list|(
name|bsopts
operator|.
name|getFDSPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|cfgPath
init|=
name|bsopts
operator|.
name|getFDSConfigPath
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
name|loadAndTransformProps
argument_list|(
name|cfgPath
argument_list|)
decl_stmt|;
name|populate
argument_list|(
name|delegate
argument_list|,
name|asMap
argument_list|(
name|props
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|delegate
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|DataStoreBlobStore
name|blobStore
init|=
operator|new
name|DataStoreBlobStore
argument_list|(
name|delegate
argument_list|)
decl_stmt|;
return|return
operator|new
name|DataStoreFixture
argument_list|(
name|blobStore
argument_list|,
name|closer
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|DataStoreFixture
implements|implements
name|BlobStoreFixture
block|{
specifier|private
specifier|final
name|DataStoreBlobStore
name|blobStore
decl_stmt|;
specifier|private
specifier|final
name|Closer
name|closer
decl_stmt|;
specifier|private
name|DataStoreFixture
parameter_list|(
name|DataStoreBlobStore
name|blobStore
parameter_list|,
name|Closer
name|closer
parameter_list|)
block|{
name|this
operator|.
name|blobStore
operator|=
name|blobStore
expr_stmt|;
name|this
operator|.
name|closer
operator|=
name|closer
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|BlobStore
name|getBlobStore
parameter_list|()
block|{
return|return
name|blobStore
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|closer
operator|.
name|close
argument_list|()
expr_stmt|;
try|try
block|{
name|blobStore
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DataStoreException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
specifier|private
specifier|static
name|Properties
name|loadAndTransformProps
parameter_list|(
name|String
name|cfgPath
parameter_list|)
throws|throws
name|IOException
block|{
name|Dictionary
name|dict
init|=
name|ConfigurationHandler
operator|.
name|read
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|cfgPath
argument_list|)
argument_list|)
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Enumeration
name|keys
init|=
name|dict
operator|.
name|keys
argument_list|()
decl_stmt|;
while|while
condition|(
name|keys
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|keys
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|dict
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|props
return|;
block|}
specifier|private
specifier|static
name|Closeable
name|asCloseable
parameter_list|(
specifier|final
name|File
name|dir
parameter_list|)
block|{
return|return
operator|new
name|Closeable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|asMap
parameter_list|(
name|Properties
name|props
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|key
range|:
name|props
operator|.
name|keySet
argument_list|()
control|)
block|{
name|map
operator|.
name|put
argument_list|(
operator|(
name|String
operator|)
name|key
argument_list|,
name|props
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|map
return|;
block|}
block|}
end_class

end_unit

