begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
operator|.
name|replica
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|ServerAddress
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|connection
operator|.
name|ClusterId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|connection
operator|.
name|ConnectionDescription
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|connection
operator|.
name|ServerId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|event
operator|.
name|ServerHeartbeatSucceededEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|BsonArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|BsonDateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|BsonDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|BsonString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|BsonValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|ReplicaSetStatusTest
block|{
specifier|private
name|List
argument_list|<
name|ServerAddress
argument_list|>
name|hosts
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ServerAddress
argument_list|(
literal|"localhost"
argument_list|,
literal|27017
argument_list|)
argument_list|,
operator|new
name|ServerAddress
argument_list|(
literal|"localhost"
argument_list|,
literal|27018
argument_list|)
argument_list|,
operator|new
name|ServerAddress
argument_list|(
literal|"localhost"
argument_list|,
literal|27019
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|List
argument_list|<
name|BsonValue
argument_list|>
name|hostValues
init|=
name|hosts
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|sa
lambda|->
operator|new
name|BsonString
argument_list|(
name|sa
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ConnectionDescription
argument_list|>
name|connections
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ConnectionDescription
argument_list|(
operator|new
name|ServerId
argument_list|(
operator|new
name|ClusterId
argument_list|()
argument_list|,
name|hosts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|,
operator|new
name|ConnectionDescription
argument_list|(
operator|new
name|ServerId
argument_list|(
operator|new
name|ClusterId
argument_list|()
argument_list|,
name|hosts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|,
operator|new
name|ConnectionDescription
argument_list|(
operator|new
name|ServerId
argument_list|(
operator|new
name|ClusterId
argument_list|()
argument_list|,
name|hosts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|estimateLag
parameter_list|()
block|{
name|ReplicaSetStatus
name|status
init|=
operator|new
name|ReplicaSetStatus
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ReplicaSetStatus
operator|.
name|UNKNOWN_LAG
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
name|status
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|newEvent
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ReplicaSetStatus
operator|.
name|UNKNOWN_LAG
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
name|status
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|newEvent
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|800
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ReplicaSetStatus
operator|.
name|UNKNOWN_LAG
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
name|status
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|newEvent
argument_list|(
literal|2
argument_list|,
literal|50
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
comment|// lastWrite difference: 200
comment|// localTime difference: 50
comment|// lag estimate: max(0, 200 - 50) = 150
comment|// avg lag estimate: avg(150, 0, 0) = 50
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
name|status
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|newEvent
argument_list|(
literal|0
argument_list|,
literal|5000
argument_list|,
literal|4800
argument_list|)
argument_list|)
expr_stmt|;
comment|// lastWrite difference: 4000
comment|// localTime difference: 5000
comment|// lag estimate: max(0, 4000 - 5000) = 0
comment|// avg lag estimate: avg(0, 150, 0) = 50
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
name|status
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|newEvent
argument_list|(
literal|1
argument_list|,
literal|5050
argument_list|,
literal|2000
argument_list|)
argument_list|)
expr_stmt|;
comment|// lastWrite difference: 3800
comment|// localTime difference: 5000
comment|// lag estimate: max(0, 3800 - 5000) = 0
comment|// avg lag estimate: avg(0, 0, 150) = 50
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
name|status
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|newEvent
argument_list|(
literal|2
argument_list|,
literal|5150
argument_list|,
literal|5000
argument_list|)
argument_list|)
expr_stmt|;
comment|// lastWrite difference: 3000
comment|// localTime difference: 150
comment|// lag estimate: max(0, 3000 - 150) = 2850
comment|// avg lag estimate: avg(2850, 0, 0) = 950
name|assertEquals
argument_list|(
literal|950
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
name|status
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|newEvent
argument_list|(
literal|0
argument_list|,
literal|10010
argument_list|,
literal|9000
argument_list|)
argument_list|)
expr_stmt|;
comment|// lastWrite difference: 7000
comment|// localTime difference: 4960
comment|// lag estimate: max(0, 7000 - 4960) = 2040
comment|// avg lag estimate: avg(2040, 2850, 0) = 1630
name|assertEquals
argument_list|(
literal|1630
argument_list|,
name|status
operator|.
name|getLagEstimate
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ServerHeartbeatSucceededEvent
name|newEvent
parameter_list|(
name|int
name|connectionIndex
parameter_list|,
name|long
name|localTime
parameter_list|,
name|long
name|lastWriteDate
parameter_list|)
block|{
name|ConnectionDescription
name|description
init|=
name|connections
operator|.
name|get
argument_list|(
name|connectionIndex
argument_list|)
decl_stmt|;
name|BsonDocument
name|reply
init|=
operator|new
name|BsonDocument
argument_list|(
literal|"localTime"
argument_list|,
operator|new
name|BsonDateTime
argument_list|(
name|localTime
argument_list|)
argument_list|)
decl_stmt|;
name|reply
operator|.
name|put
argument_list|(
literal|"hosts"
argument_list|,
operator|new
name|BsonArray
argument_list|(
name|hostValues
argument_list|)
argument_list|)
expr_stmt|;
name|BsonDocument
name|lastWrite
init|=
operator|new
name|BsonDocument
argument_list|(
literal|"lastWriteDate"
argument_list|,
operator|new
name|BsonDateTime
argument_list|(
name|lastWriteDate
argument_list|)
argument_list|)
decl_stmt|;
name|reply
operator|.
name|put
argument_list|(
literal|"lastWrite"
argument_list|,
name|lastWrite
argument_list|)
expr_stmt|;
return|return
operator|new
name|ServerHeartbeatSucceededEvent
argument_list|(
name|description
operator|.
name|getConnectionId
argument_list|()
argument_list|,
name|reply
argument_list|,
literal|0
argument_list|)
return|;
block|}
block|}
end_class

end_unit

