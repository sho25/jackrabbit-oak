begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|OakBaseTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|query
operator|.
name|JsopUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
operator|.
name|STRING
import|;
end_import

begin_class
specifier|public
class|class
name|JsopUtilTest
extends|extends
name|OakBaseTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|createContentSession
argument_list|()
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|t
init|=
name|root
operator|.
name|getTreeOrNull
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|t
operator|.
name|hasChild
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|add
init|=
literal|"/ + \"test\": { \"a\": { \"id\": \"123\" }, \"b\": {} }"
decl_stmt|;
name|JsopUtil
operator|.
name|apply
argument_list|(
name|root
argument_list|,
name|add
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|t
operator|=
name|root
operator|.
name|getTreeOrNull
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t
operator|.
name|hasChild
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|=
name|t
operator|.
name|getChildOrNull
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|t
operator|.
name|getChildrenCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t
operator|.
name|hasChild
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t
operator|.
name|hasChild
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|t
operator|.
name|getChildOrNull
argument_list|(
literal|"b"
argument_list|)
operator|.
name|getChildrenCount
argument_list|()
argument_list|)
expr_stmt|;
name|t
operator|=
name|t
operator|.
name|getChildOrNull
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|t
operator|.
name|getChildrenCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t
operator|.
name|hasProperty
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"123"
argument_list|,
name|t
operator|.
name|getProperty
argument_list|(
literal|"id"
argument_list|)
operator|.
name|getValue
argument_list|(
name|STRING
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|rm
init|=
literal|"/ - \"test\""
decl_stmt|;
name|JsopUtil
operator|.
name|apply
argument_list|(
name|root
argument_list|,
name|rm
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|t
operator|=
name|root
operator|.
name|getTreeOrNull
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t
operator|.
name|hasChild
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

