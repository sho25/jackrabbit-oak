begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NamePathMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * The {@code UserAction} interface allows for implementations to be informed  * about and react to the following changes to a {@link User}:  *  *<ul>  *<li>{@link #onDisable(User, String, Root, NamePathMapper)}</li>  *</ul>  *  *<p>  * See {@link AuthorizableAction} for details on persisting changes,  * configuring actions and the API through which actions are invoked.  *</p>  *  * @since OAK 1.10  */
end_comment

begin_interface
specifier|public
interface|interface
name|UserAction
extends|extends
name|AuthorizableAction
block|{
comment|/**      * Allows to add application specific behavior associated with disabling (or      * re-enabling) an user.      *      * @param user The user to be disabled or re-enabled.      * @param disableReason The reason passed to {@link User#disable(String)} or {@code null} if the user is to be enabled again.      * @param root The root associated with the user manager.      * @param namePathMapper The mapper associated with the user manager.      * @throws RepositoryException If an error occurs.      */
name|void
name|onDisable
parameter_list|(
annotation|@
name|NotNull
name|User
name|user
parameter_list|,
annotation|@
name|Nullable
name|String
name|disableReason
parameter_list|,
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|NamePathMapper
name|namePathMapper
parameter_list|)
throws|throws
name|RepositoryException
function_decl|;
comment|/**      * Allows to add application specific behavior associated with granting a given      * principal the ability to impersonate the user.      *      * @param user The user associated with the given {@link org.apache.jackrabbit.api.security.user.Impersonation#grantImpersonation(Principal)} call.      * @param principal The target principal to be granted impersonation.      * @param root The root associated with the user manager.      * @param namePathMapper The mapper associated with the user manager.      * @throws RepositoryException If an error occurs.      */
name|void
name|onGrantImpersonation
parameter_list|(
annotation|@
name|NotNull
name|User
name|user
parameter_list|,
annotation|@
name|NotNull
name|Principal
name|principal
parameter_list|,
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|NamePathMapper
name|namePathMapper
parameter_list|)
throws|throws
name|RepositoryException
function_decl|;
comment|/**      * Allows to add application specific behavior associated with revoking a given      * principal the ability to impersonate the user.      *      * @param user The user associated with the given {@link org.apache.jackrabbit.api.security.user.Impersonation#revokeImpersonation(Principal)} call.      * @param principal The target principal for which impersonation is revoked.      * @param root The root associated with the user manager.      * @param namePathMapper The mapper associated with the user manager.      * @throws RepositoryException If an error occurs.      */
name|void
name|onRevokeImpersonation
parameter_list|(
annotation|@
name|NotNull
name|User
name|user
parameter_list|,
annotation|@
name|NotNull
name|Principal
name|principal
parameter_list|,
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|NamePathMapper
name|namePathMapper
parameter_list|)
throws|throws
name|RepositoryException
function_decl|;
block|}
end_interface

end_unit

