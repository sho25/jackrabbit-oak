begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|exporter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|internal
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|AbstractBlob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|ArrayBasedBlob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Charsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|FSBlobSerializerTest
block|{
annotation|@
name|Rule
specifier|public
specifier|final
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|blobs
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|maxInlineSize
init|=
literal|100
decl_stmt|;
name|FSBlobSerializer
name|serializer
init|=
operator|new
name|FSBlobSerializer
argument_list|(
name|folder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|maxInlineSize
argument_list|)
decl_stmt|;
name|String
name|data
init|=
name|Strings
operator|.
name|repeat
argument_list|(
literal|'x'
argument_list|,
name|maxInlineSize
operator|*
literal|10
argument_list|)
decl_stmt|;
name|Blob
name|b
init|=
operator|new
name|ArrayBasedBlob
argument_list|(
name|data
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|serializer
operator|.
name|serialize
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|Blob
name|b2
init|=
name|serializer
operator|.
name|deserialize
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|AbstractBlob
operator|.
name|equal
argument_list|(
name|b
argument_list|,
name|b2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

