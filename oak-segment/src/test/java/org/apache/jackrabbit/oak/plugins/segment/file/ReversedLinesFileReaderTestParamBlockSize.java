begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|GBK_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|WINDOWS_31J_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|X_WINDOWS_949_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|X_WINDOWS_950_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_comment
comment|/**  * Test checks symmetric behaviour with  BufferedReader  * FIXME: this is mostly taken from a copy of org.apache.commons.io.input  * with a fix for IO-471. Replace again once commons-io has released a fixed version.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|ReversedLinesFileReaderTestParamBlockSize
block|{
specifier|private
specifier|static
specifier|final
name|String
name|UTF_8
init|=
literal|"UTF-8"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ISO_8859_1
init|=
literal|"ISO-8859-1"
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|File
name|createFile
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|ReversedLinesReaderTestData
operator|.
name|createFile
argument_list|(
name|folder
operator|.
name|newFile
argument_list|()
argument_list|,
name|data
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"boxing"
argument_list|)
annotation|@
name|Parameters
comment|// small and uneven block sizes are not used in reality but are good to show that the algorithm is solid
specifier|public
specifier|static
name|Collection
argument_list|<
name|Integer
index|[]
argument_list|>
name|blockSizes
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Integer
index|[]
index|[]
block|{
block|{
literal|1
block|}
block|,
block|{
literal|3
block|}
block|,
block|{
literal|8
block|}
block|,
block|{
literal|256
block|}
block|,
block|{
literal|4096
block|}
block|}
argument_list|)
return|;
block|}
specifier|private
name|ReversedLinesFileReader
name|reversedLinesFileReader
decl_stmt|;
specifier|private
specifier|final
name|int
name|testParamBlockSize
decl_stmt|;
specifier|public
name|ReversedLinesFileReaderTestParamBlockSize
parameter_list|(
name|Integer
name|testWithBlockSize
parameter_list|)
block|{
name|testParamBlockSize
operator|=
name|testWithBlockSize
expr_stmt|;
block|}
comment|// Strings are escaped in constants to avoid java source encoding issues (source file enc is UTF-8):
comment|// windows-31j characters
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_WINDOWS_31J_1
init|=
literal|"\u3041\u3042\u3043\u3044\u3045"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_WINDOWS_31J_2
init|=
literal|"\u660E\u8F38\u5B50\u4EAC"
decl_stmt|;
comment|// gbk characters (Simplified Chinese)
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_GBK_1
init|=
literal|"\u660E\u8F38\u5B50\u4EAC"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_GBK_2
init|=
literal|"\u7B80\u4F53\u4E2D\u6587"
decl_stmt|;
comment|// x-windows-949 characters (Korean)
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_X_WINDOWS_949_1
init|=
literal|"\uD55C\uAD6D\uC5B4"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_X_WINDOWS_949_2
init|=
literal|"\uB300\uD55C\uBBFC\uAD6D"
decl_stmt|;
comment|// x-windows-950 characters (Traditional Chinese)
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_X_WINDOWS_950_1
init|=
literal|"\u660E\u8F38\u5B50\u4EAC"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LINE_X_WINDOWS_950_2
init|=
literal|"\u7E41\u9AD4\u4E2D\u6587"
decl_stmt|;
annotation|@
name|After
specifier|public
name|void
name|closeReader
parameter_list|()
block|{
try|try
block|{
name|reversedLinesFileReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWindows31jFile
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|File
name|testFileWindows31J
init|=
name|createFile
argument_list|(
name|WINDOWS_31J_BIN
argument_list|)
decl_stmt|;
name|reversedLinesFileReader
operator|=
operator|new
name|ReversedLinesFileReader
argument_list|(
name|testFileWindows31J
argument_list|,
name|testParamBlockSize
argument_list|,
literal|"windows-31j"
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_WINDOWS_31J_2
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_WINDOWS_31J_1
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGBK
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|File
name|testFileGBK
init|=
name|createFile
argument_list|(
name|GBK_BIN
argument_list|)
decl_stmt|;
name|reversedLinesFileReader
operator|=
operator|new
name|ReversedLinesFileReader
argument_list|(
name|testFileGBK
argument_list|,
name|testParamBlockSize
argument_list|,
literal|"GBK"
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_GBK_2
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_GBK_1
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testxWindows949File
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|File
name|testFilexWindows949
init|=
name|createFile
argument_list|(
name|X_WINDOWS_949_BIN
argument_list|)
decl_stmt|;
name|reversedLinesFileReader
operator|=
operator|new
name|ReversedLinesFileReader
argument_list|(
name|testFilexWindows949
argument_list|,
name|testParamBlockSize
argument_list|,
literal|"x-windows-949"
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_X_WINDOWS_949_2
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_X_WINDOWS_949_1
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testxWindows950File
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|File
name|testFilexWindows950
init|=
name|createFile
argument_list|(
name|X_WINDOWS_950_BIN
argument_list|)
decl_stmt|;
name|reversedLinesFileReader
operator|=
operator|new
name|ReversedLinesFileReader
argument_list|(
name|testFilexWindows950
argument_list|,
name|testParamBlockSize
argument_list|,
literal|"x-windows-950"
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_X_WINDOWS_950_2
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEqualsAndNoLineBreaks
argument_list|(
name|TEST_LINE_X_WINDOWS_950_1
argument_list|,
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|static
name|void
name|assertEqualsAndNoLineBreaks
parameter_list|(
name|String
name|msg
parameter_list|,
name|String
name|expected
parameter_list|,
name|String
name|actual
parameter_list|)
block|{
if|if
condition|(
name|actual
operator|!=
literal|null
condition|)
block|{
name|assertFalse
argument_list|(
literal|"Line contains \\n: line="
operator|+
name|actual
argument_list|,
name|actual
operator|.
name|contains
argument_list|(
literal|"\n"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Line contains \\r: line="
operator|+
name|actual
argument_list|,
name|actual
operator|.
name|contains
argument_list|(
literal|"\r"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|static
name|void
name|assertEqualsAndNoLineBreaks
parameter_list|(
name|String
name|expected
parameter_list|,
name|String
name|actual
parameter_list|)
block|{
name|assertEqualsAndNoLineBreaks
argument_list|(
literal|null
argument_list|,
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

