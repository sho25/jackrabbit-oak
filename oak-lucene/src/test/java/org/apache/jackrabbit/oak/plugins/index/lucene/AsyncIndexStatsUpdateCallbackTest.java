begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
package|;
end_package

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|InitialContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|junit
operator|.
name|LogCustomizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|AsyncIndexUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|counter
operator|.
name|NodeCounterEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
operator|.
name|ActiveDeletedBlobCollectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|IndexDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|nodetype
operator|.
name|NodeTypeIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|property
operator|.
name|PropertyIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|metric
operator|.
name|MetricStatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Observer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|Mounts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|OpenSecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|CompositeIndexEditorProvider
operator|.
name|compose
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Tests AsyncIndexStatsUpdateCallback works as scheduled callback  */
end_comment

begin_class
specifier|public
class|class
name|AsyncIndexStatsUpdateCallbackTest
block|{
specifier|private
name|int
name|SCHEDULED_CALLBACK_TIME_IN_MILLIS
init|=
literal|1000
decl_stmt|;
comment|//1 second
specifier|protected
name|Root
name|root
decl_stmt|;
specifier|private
name|AsyncIndexUpdate
name|asyncIndexUpdate
decl_stmt|;
specifier|private
name|LuceneIndexEditorProvider
name|luceneIndexEditorProvider
decl_stmt|;
specifier|private
name|LogCustomizer
name|customLogger
decl_stmt|;
specifier|private
name|AsyncIndexesSizeStatsUpdateImpl
name|asyncIndexesSizeStatsUpdate
init|=
operator|new
name|AsyncIndexesSizeStatsUpdateImpl
argument_list|(
name|SCHEDULED_CALLBACK_TIME_IN_MILLIS
argument_list|)
decl_stmt|;
specifier|private
name|LuceneIndexMBeanImpl
name|mBean
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|LuceneIndexMBeanImpl
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|customLogger
operator|=
name|LogCustomizer
operator|.
name|forLogger
argument_list|(
literal|"org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexStatsUpdateCallback"
argument_list|)
operator|.
name|enable
argument_list|(
name|Level
operator|.
name|DEBUG
argument_list|)
operator|.
name|create
argument_list|()
expr_stmt|;
name|ContentSession
name|session
init|=
name|createRepository
argument_list|()
operator|.
name|login
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mBean
operator|.
name|getDocCount
argument_list|(
literal|"/oak:index/lucenePropertyIndex"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"100"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mBean
operator|.
name|getSize
argument_list|(
literal|"/oak:index/lucenePropertyIndex"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"100"
argument_list|)
expr_stmt|;
name|root
operator|=
name|session
operator|.
name|getLatestRoot
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|shutDown
parameter_list|()
block|{
name|customLogger
operator|.
name|finished
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|ContentRepository
name|createRepository
parameter_list|()
throws|throws
name|IOException
block|{
name|NodeStore
name|nodeStore
init|=
operator|new
name|MemoryNodeStore
argument_list|()
decl_stmt|;
name|luceneIndexEditorProvider
operator|=
operator|new
name|LuceneIndexEditorProvider
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|Mounts
operator|.
name|defaultMountInfoProvider
argument_list|()
argument_list|,
name|ActiveDeletedBlobCollectorFactory
operator|.
name|NOOP
argument_list|,
name|mBean
argument_list|,
name|StatisticsProvider
operator|.
name|NOOP
argument_list|)
expr_stmt|;
name|asyncIndexUpdate
operator|=
operator|new
name|AsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|,
name|nodeStore
argument_list|,
name|compose
argument_list|(
name|newArrayList
argument_list|(
name|luceneIndexEditorProvider
argument_list|,
operator|new
name|NodeCounterEditorProvider
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|StatisticsProvider
operator|.
name|NOOP
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
operator|new
name|Oak
argument_list|(
name|nodeStore
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|InitialContent
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|OpenSecurityProvider
argument_list|()
argument_list|)
operator|.
name|createContentRepository
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCallbackWorksAsScheduled
parameter_list|()
throws|throws
name|Exception
block|{
name|luceneIndexEditorProvider
operator|.
name|withAsyncIndexesSizeStatsUpdate
argument_list|(
name|asyncIndexesSizeStatsUpdate
argument_list|)
expr_stmt|;
name|IndexDefinitionBuilder
name|idxb
init|=
operator|new
name|IndexDefinitionBuilder
argument_list|()
decl_stmt|;
name|idxb
operator|.
name|indexRule
argument_list|(
literal|"nt:base"
argument_list|)
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|analyzed
argument_list|()
operator|.
name|nodeScopeIndex
argument_list|()
operator|.
name|ordered
argument_list|()
operator|.
name|useInExcerpt
argument_list|()
operator|.
name|propertyIndex
argument_list|()
expr_stmt|;
name|idxb
operator|.
name|build
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
literal|"/oak:index"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"lucenePropertyIndex"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add content and index it successfully
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c1"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|customLogger
operator|.
name|starting
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|logs
init|=
name|customLogger
operator|.
name|getLogs
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c2"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c3"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|validateLogs
argument_list|(
name|logs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNOOPDonotPerformCallbackStatsUpdate
parameter_list|()
throws|throws
name|Exception
block|{
name|luceneIndexEditorProvider
operator|.
name|withAsyncIndexesSizeStatsUpdate
argument_list|(
name|AsyncIndexesSizeStatsUpdate
operator|.
name|NOOP
argument_list|)
expr_stmt|;
name|IndexDefinitionBuilder
name|idxb
init|=
operator|new
name|IndexDefinitionBuilder
argument_list|()
decl_stmt|;
name|idxb
operator|.
name|indexRule
argument_list|(
literal|"nt:base"
argument_list|)
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|analyzed
argument_list|()
operator|.
name|nodeScopeIndex
argument_list|()
operator|.
name|ordered
argument_list|()
operator|.
name|useInExcerpt
argument_list|()
operator|.
name|propertyIndex
argument_list|()
expr_stmt|;
name|idxb
operator|.
name|build
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
literal|"/oak:index"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"lucenePropertyIndex"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add content and index it successfully
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c1"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|customLogger
operator|.
name|starting
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|logs
init|=
name|customLogger
operator|.
name|getLogs
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c2"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
literal|"/content"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"c3"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|asyncIndexUpdate
operator|.
name|run
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
comment|//validateLogs(logs);
block|}
specifier|private
name|void
name|validateLogs
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|logs
parameter_list|)
block|{
for|for
control|(
name|String
name|log
range|:
name|logs
control|)
block|{
name|assertThat
argument_list|(
literal|"logs were recorded by custom logger"
argument_list|,
name|log
argument_list|,
name|containsString
argument_list|(
literal|"/oak:index/lucenePropertyIndex stats updated; docCount 100, size 100, timeToUpdate"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

