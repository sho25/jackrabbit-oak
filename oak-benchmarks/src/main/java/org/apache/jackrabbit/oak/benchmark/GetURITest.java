begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Binary
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|compress
operator|.
name|utils
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|binary
operator|.
name|BinaryDownload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|binary
operator|.
name|BinaryDownloadOptions
import|;
end_import

begin_class
specifier|public
class|class
name|GetURITest
extends|extends
name|AbstractTest
block|{
specifier|private
specifier|static
specifier|final
name|int
name|FILE_COUNT
init|=
name|Integer
operator|.
name|getInteger
argument_list|(
literal|"file.count"
argument_list|,
literal|100
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|FILE_SIZE
init|=
name|Integer
operator|.
name|getInteger
argument_list|(
literal|"file.size"
argument_list|,
literal|20
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|DEBUG
init|=
name|Boolean
operator|.
name|getBoolean
argument_list|(
literal|"debug"
argument_list|)
decl_stmt|;
specifier|private
name|Session
name|session
decl_stmt|;
specifier|private
name|Node
name|root
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Binary
argument_list|>
name|binariesAdded
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
specifier|private
name|Random
name|random
init|=
operator|new
name|Random
argument_list|(
literal|29
argument_list|)
decl_stmt|;
comment|/**      * Iteration counter used to avoid the split document edge case in DocumentMK.      */
specifier|private
name|int
name|iteration
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|void
name|beforeSuite
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|session
operator|=
name|loginWriter
argument_list|()
expr_stmt|;
name|root
operator|=
name|session
operator|.
name|getRootNode
argument_list|()
operator|.
name|addNode
argument_list|(
literal|"GetURI"
operator|+
name|TEST_ID
operator|+
name|iteration
operator|++
argument_list|,
literal|"nt:folder"
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|FILE_COUNT
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|file
init|=
name|root
operator|.
name|addNode
argument_list|(
literal|"file"
operator|+
name|i
argument_list|,
literal|"nt:file"
argument_list|)
decl_stmt|;
name|Node
name|content
init|=
name|file
operator|.
name|addNode
argument_list|(
literal|"jcr:content"
argument_list|,
literal|"nt:resource"
argument_list|)
decl_stmt|;
name|content
operator|.
name|setProperty
argument_list|(
literal|"jcr:mimeType"
argument_list|,
literal|"application/octet-stream"
argument_list|)
expr_stmt|;
name|content
operator|.
name|setProperty
argument_list|(
literal|"jcr:lastModified"
argument_list|,
name|Calendar
operator|.
name|getInstance
argument_list|()
argument_list|)
expr_stmt|;
name|content
operator|.
name|setProperty
argument_list|(
literal|"jcr:data"
argument_list|,
operator|new
name|TestInputStream
argument_list|(
name|FILE_SIZE
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|Binary
name|binary
init|=
name|root
operator|.
name|getNode
argument_list|(
literal|"file"
operator|+
name|i
argument_list|)
operator|.
name|getNode
argument_list|(
literal|"jcr:content"
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"jcr:data"
argument_list|)
operator|.
name|getBinary
argument_list|()
decl_stmt|;
name|binariesAdded
operator|.
name|add
argument_list|(
name|binary
argument_list|)
expr_stmt|;
block|}
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|runTest
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|index
init|=
name|random
operator|.
name|nextInt
argument_list|(
name|FILE_COUNT
argument_list|)
decl_stmt|;
name|Binary
name|binary
init|=
name|binariesAdded
operator|.
name|get
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|URI
name|uri
init|=
operator|(
operator|(
name|BinaryDownload
operator|)
name|binary
operator|)
operator|.
name|getURI
argument_list|(
name|BinaryDownloadOptions
operator|.
name|DEFAULT
argument_list|)
decl_stmt|;
if|if
condition|(
name|DEBUG
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"URI retrieved="
operator|+
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterSuite
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|root
operator|.
name|remove
argument_list|()
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

