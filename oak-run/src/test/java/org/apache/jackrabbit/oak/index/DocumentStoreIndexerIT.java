begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|InitialContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
operator|.
name|indexer
operator|.
name|document
operator|.
name|CompositeIndexer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
operator|.
name|indexer
operator|.
name|document
operator|.
name|DocumentStoreIndexer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
operator|.
name|indexer
operator|.
name|document
operator|.
name|NodeStateEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
operator|.
name|indexer
operator|.
name|document
operator|.
name|NodeStateIndexer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentMKBuilderProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentNodeStoreBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|MongoConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|MongoUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|NodeDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|bundlor
operator|.
name|BundledTypesRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|bundlor
operator|.
name|BundlingConfigInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
operator|.
name|MongoDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
operator|.
name|IndexRootDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|directory
operator|.
name|LocalIndexDir
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|IndexDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|DefaultWhiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|Registration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|Whiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|TestUtils
operator|.
name|childBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|TestUtils
operator|.
name|createChild
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|TestUtils
operator|.
name|merge
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|bundlor
operator|.
name|BundlingConfigHandler
operator|.
name|BUNDLOR
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|bundlor
operator|.
name|BundlingConfigHandler
operator|.
name|DOCUMENT_NODE_STORE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|EmptyNodeState
operator|.
name|EMPTY_NODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|containsInAnyOrder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentStoreIndexerIT
extends|extends
name|AbstractIndexCommandTest
block|{
annotation|@
name|Rule
specifier|public
name|MongoConnectionFactory
name|connectionFactory
init|=
operator|new
name|MongoConnectionFactory
argument_list|()
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|DocumentMKBuilderProvider
name|builderProvider
init|=
operator|new
name|DocumentMKBuilderProvider
argument_list|()
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|checkMongoDbAvailable
parameter_list|()
block|{
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|MongoUtils
operator|.
name|isAvailable
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|indexMongoRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentNodeStore
name|dns
init|=
name|getNodeStore
argument_list|()
decl_stmt|;
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
argument_list|,
name|dns
argument_list|)
expr_stmt|;
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|checkpoint
init|=
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|checkpoint
argument_list|(
name|TimeUnit
operator|.
name|HOURS
operator|.
name|toMillis
argument_list|(
literal|24
argument_list|)
argument_list|)
decl_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|dns
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|IndexCommand
name|command
init|=
operator|new
name|IndexCommand
argument_list|()
decl_stmt|;
name|File
name|outDir
init|=
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
literal|"--index-temp-dir="
operator|+
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--index-out-dir="
operator|+
name|outDir
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--index-paths=/oak:index/fooIndex"
block|,
literal|"--doc-traversal-mode"
block|,
literal|"--checkpoint="
operator|+
name|checkpoint
block|,
literal|"--reindex"
block|,
literal|"--"
block|,
comment|// -- indicates that options have ended and rest needs to be treated as non option
name|MongoUtils
operator|.
name|URL
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|File
name|indexes
init|=
operator|new
name|File
argument_list|(
name|outDir
argument_list|,
name|IndexerSupport
operator|.
name|LOCAL_INDEX_ROOT_DIR
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|indexes
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|IndexRootDirectory
name|idxRoot
init|=
operator|new
name|IndexRootDirectory
argument_list|(
name|indexes
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|LocalIndexDir
argument_list|>
name|idxDirs
init|=
name|idxRoot
operator|.
name|getAllLocalIndexes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|idxDirs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|bundling
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentNodeStoreBuilder
argument_list|<
name|?
argument_list|>
name|docBuilder
init|=
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMongoDB
argument_list|(
name|getConnection
argument_list|()
operator|.
name|getDB
argument_list|()
argument_list|)
decl_stmt|;
name|DocumentNodeStore
name|store
init|=
name|docBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
name|Whiteboard
name|wb
init|=
operator|new
name|DefaultWhiteboard
argument_list|()
decl_stmt|;
name|MongoDocumentStore
name|ds
init|=
operator|(
name|MongoDocumentStore
operator|)
name|docBuilder
operator|.
name|getDocumentStore
argument_list|()
decl_stmt|;
name|Registration
name|r1
init|=
name|wb
operator|.
name|register
argument_list|(
name|MongoDocumentStore
operator|.
name|class
argument_list|,
name|ds
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|StatisticsProvider
operator|.
name|class
argument_list|,
name|StatisticsProvider
operator|.
name|NOOP
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|configureIndex
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|configureBundling
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|appNB
init|=
name|newNode
argument_list|(
literal|"app:Asset"
argument_list|)
decl_stmt|;
name|createChild
argument_list|(
name|appNB
argument_list|,
literal|"jcr:content"
argument_list|,
literal|"jcr:content/comments"
argument_list|,
comment|//not bundled
literal|"jcr:content/metadata"
argument_list|,
literal|"jcr:content/metadata/xmp"
argument_list|,
comment|//not bundled
literal|"jcr:content/renditions"
argument_list|,
comment|//includes all
literal|"jcr:content/renditions/original"
argument_list|,
literal|"jcr:content/renditions/original/jcr:content"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"test"
argument_list|)
operator|.
name|setChildNode
argument_list|(
literal|"book.jpg"
argument_list|,
name|appNB
operator|.
name|getNodeState
argument_list|()
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
comment|//Check that bundling is working
name|assertNull
argument_list|(
name|getNodeDocument
argument_list|(
name|ds
argument_list|,
literal|"/test/book.jpg/jcr:content"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|getNodeDocument
argument_list|(
name|ds
argument_list|,
literal|"/test/book.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|checkpoint
init|=
name|store
operator|.
name|checkpoint
argument_list|(
literal|100000
argument_list|)
decl_stmt|;
comment|//Shut down this store and restart in readOnly mode
name|store
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|r1
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|DocumentNodeStoreBuilder
argument_list|<
name|?
argument_list|>
name|docBuilderRO
init|=
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setReadOnlyMode
argument_list|()
operator|.
name|setMongoDB
argument_list|(
name|connectionFactory
operator|.
name|getConnection
argument_list|()
operator|.
name|getDB
argument_list|()
argument_list|)
decl_stmt|;
name|ds
operator|=
operator|(
name|MongoDocumentStore
operator|)
name|docBuilderRO
operator|.
name|getDocumentStore
argument_list|()
expr_stmt|;
name|store
operator|=
name|docBuilderRO
operator|.
name|build
argument_list|()
expr_stmt|;
name|wb
operator|.
name|register
argument_list|(
name|MongoDocumentStore
operator|.
name|class
argument_list|,
name|ds
argument_list|,
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|IndexHelper
name|helper
init|=
operator|new
name|IndexHelper
argument_list|(
name|store
argument_list|,
name|store
operator|.
name|getBlobStore
argument_list|()
argument_list|,
name|wb
argument_list|,
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
argument_list|,
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
argument_list|,
name|asList
argument_list|(
name|TEST_INDEX_PATH
argument_list|)
argument_list|)
decl_stmt|;
name|IndexerSupport
name|support
init|=
operator|new
name|IndexerSupport
argument_list|(
name|helper
argument_list|,
name|checkpoint
argument_list|)
decl_stmt|;
name|CollectingIndexer
name|testIndexer
init|=
operator|new
name|CollectingIndexer
argument_list|(
name|p
lambda|->
name|p
operator|.
name|startsWith
argument_list|(
literal|"/test"
argument_list|)
argument_list|)
decl_stmt|;
name|DocumentStoreIndexer
name|index
init|=
operator|new
name|DocumentStoreIndexer
argument_list|(
name|helper
argument_list|,
name|support
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|CompositeIndexer
name|prepareIndexers
parameter_list|(
name|NodeStore
name|nodeStore
parameter_list|,
name|NodeBuilder
name|builder
parameter_list|)
block|{
return|return
operator|new
name|CompositeIndexer
argument_list|(
name|asList
argument_list|(
name|testIndexer
argument_list|)
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|index
operator|.
name|reindex
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|testIndexer
operator|.
name|paths
argument_list|,
name|containsInAnyOrder
argument_list|(
literal|"/test"
argument_list|,
literal|"/test/book.jpg"
argument_list|,
literal|"/test/book.jpg/jcr:content"
argument_list|,
literal|"/test/book.jpg/jcr:content/comments"
argument_list|,
literal|"/test/book.jpg/jcr:content/metadata"
argument_list|,
literal|"/test/book.jpg/jcr:content/metadata/xmp"
argument_list|,
literal|"/test/book.jpg/jcr:content/renditions"
argument_list|,
literal|"/test/book.jpg/jcr:content/renditions/original"
argument_list|,
literal|"/test/book.jpg/jcr:content/renditions/original/jcr:content"
argument_list|)
argument_list|)
expr_stmt|;
name|store
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|configureIndex
parameter_list|(
name|DocumentNodeStore
name|store
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|idxb
init|=
name|childBuilder
argument_list|(
name|builder
argument_list|,
name|TEST_INDEX_PATH
argument_list|)
decl_stmt|;
name|IndexDefinitionBuilder
name|defnb
init|=
operator|new
name|IndexDefinitionBuilder
argument_list|(
name|idxb
argument_list|)
decl_stmt|;
name|defnb
operator|.
name|indexRule
argument_list|(
literal|"nt:base"
argument_list|)
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|propertyIndex
argument_list|()
expr_stmt|;
name|defnb
operator|.
name|build
argument_list|()
expr_stmt|;
name|merge
argument_list|(
name|store
argument_list|,
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DocumentNodeStore
name|getNodeStore
parameter_list|()
block|{
return|return
name|builderProvider
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMongoDB
argument_list|(
name|getConnection
argument_list|()
operator|.
name|getDB
argument_list|()
argument_list|)
operator|.
name|getNodeStore
argument_list|()
return|;
block|}
specifier|private
name|MongoConnection
name|getConnection
parameter_list|()
block|{
name|MongoConnection
name|conn
init|=
name|connectionFactory
operator|.
name|getConnection
argument_list|()
decl_stmt|;
name|assumeNotNull
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|MongoUtils
operator|.
name|dropCollections
argument_list|(
name|conn
operator|.
name|getDB
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|conn
return|;
block|}
specifier|private
specifier|static
name|void
name|configureBundling
parameter_list|(
name|DocumentNodeStore
name|store
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|NodeState
name|registryState
init|=
name|BundledTypesRegistry
operator|.
name|builder
argument_list|()
operator|.
name|forType
argument_list|(
literal|"app:Asset"
argument_list|)
operator|.
name|include
argument_list|(
literal|"jcr:content"
argument_list|)
operator|.
name|include
argument_list|(
literal|"jcr:content/metadata"
argument_list|)
operator|.
name|include
argument_list|(
literal|"jcr:content/renditions"
argument_list|)
operator|.
name|include
argument_list|(
literal|"jcr:content/renditions/**"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
operator|new
name|InitialContent
argument_list|()
operator|.
name|initialize
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|BundlingConfigInitializer
operator|.
name|INSTANCE
operator|.
name|initialize
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|getChildNode
argument_list|(
literal|"jcr:system"
argument_list|)
operator|.
name|getChildNode
argument_list|(
name|DOCUMENT_NODE_STORE
argument_list|)
operator|.
name|getChildNode
argument_list|(
name|BUNDLOR
argument_list|)
operator|.
name|setChildNode
argument_list|(
literal|"app:Asset"
argument_list|,
name|registryState
operator|.
name|getChildNode
argument_list|(
literal|"app:Asset"
argument_list|)
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
block|}
specifier|private
name|NodeDocument
name|getNodeDocument
parameter_list|(
name|DocumentStore
name|ds
parameter_list|,
name|String
name|path
parameter_list|)
block|{
return|return
name|ds
operator|.
name|find
argument_list|(
name|Collection
operator|.
name|NODES
argument_list|,
name|Utils
operator|.
name|getIdFromPath
argument_list|(
name|path
argument_list|)
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|NodeBuilder
name|newNode
parameter_list|(
name|String
name|typeName
parameter_list|)
block|{
name|NodeBuilder
name|builder
init|=
name|EMPTY_NODE
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|typeName
argument_list|)
expr_stmt|;
return|return
name|builder
return|;
block|}
specifier|private
specifier|static
class|class
name|CollectingIndexer
implements|implements
name|NodeStateIndexer
block|{
specifier|private
specifier|final
name|Predicate
argument_list|<
name|String
argument_list|>
name|p
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|paths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|CollectingIndexer
parameter_list|(
name|Predicate
argument_list|<
name|String
argument_list|>
name|p
parameter_list|)
block|{
name|this
operator|.
name|p
operator|=
name|p
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|shouldInclude
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|shouldInclude
parameter_list|(
name|NodeDocument
name|doc
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|index
parameter_list|(
name|NodeStateEntry
name|entry
parameter_list|)
throws|throws
name|IOException
throws|,
name|CommitFailedException
block|{
if|if
condition|(
name|p
operator|.
name|test
argument_list|(
name|entry
operator|.
name|getPath
argument_list|()
argument_list|)
condition|)
block|{
name|paths
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|indexesRelativeNodes
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getRelativeIndexedNodeNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptySet
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{          }
block|}
block|}
end_class

end_unit

