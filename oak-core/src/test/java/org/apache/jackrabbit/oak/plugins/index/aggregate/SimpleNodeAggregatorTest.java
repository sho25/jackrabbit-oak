begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|aggregate
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_CONTENT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|NT_FILE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|NT_FOLDER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|aggregate
operator|.
name|SimpleNodeAggregator
operator|.
name|INCLUDE_ALL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|SimpleNodeAggregatorTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testNodeName
parameter_list|()
block|{
name|NodeState
name|root
init|=
operator|new
name|MemoryNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|file
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"file"
argument_list|)
decl_stmt|;
name|file
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FILE
argument_list|)
expr_stmt|;
name|file
operator|.
name|child
argument_list|(
name|JCR_CONTENT
argument_list|)
expr_stmt|;
name|SimpleNodeAggregator
name|agg
init|=
operator|new
name|SimpleNodeAggregator
argument_list|()
operator|.
name|newRuleWithName
argument_list|(
name|NT_FILE
argument_list|,
name|newArrayList
argument_list|(
name|JCR_CONTENT
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|path
init|=
literal|"/file/jcr:content"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actual
init|=
name|newArrayList
argument_list|(
name|agg
operator|.
name|getParents
argument_list|(
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|newArrayList
argument_list|(
literal|"/file"
argument_list|)
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNodeNameWrongParentType
parameter_list|()
block|{
name|NodeState
name|root
init|=
operator|new
name|MemoryNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|file
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"file"
argument_list|)
decl_stmt|;
name|file
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FILE
operator|+
literal|"_"
argument_list|)
expr_stmt|;
name|file
operator|.
name|child
argument_list|(
name|JCR_CONTENT
argument_list|)
expr_stmt|;
name|SimpleNodeAggregator
name|agg
init|=
operator|new
name|SimpleNodeAggregator
argument_list|()
operator|.
name|newRuleWithName
argument_list|(
name|NT_FILE
argument_list|,
name|newArrayList
argument_list|(
name|JCR_CONTENT
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|path
init|=
literal|"/file/jcr:content"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actual
init|=
name|newArrayList
argument_list|(
name|agg
operator|.
name|getParents
argument_list|(
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|actual
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStarName
parameter_list|()
block|{
name|NodeState
name|root
init|=
operator|new
name|MemoryNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|file
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"file"
argument_list|)
decl_stmt|;
name|file
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FILE
argument_list|)
expr_stmt|;
name|file
operator|.
name|child
argument_list|(
name|JCR_CONTENT
argument_list|)
expr_stmt|;
name|SimpleNodeAggregator
name|agg
init|=
operator|new
name|SimpleNodeAggregator
argument_list|()
operator|.
name|newRuleWithName
argument_list|(
name|NT_FILE
argument_list|,
name|newArrayList
argument_list|(
name|INCLUDE_ALL
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|path
init|=
literal|"/file/jcr:content"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actual
init|=
name|newArrayList
argument_list|(
name|agg
operator|.
name|getParents
argument_list|(
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|newArrayList
argument_list|(
literal|"/file"
argument_list|)
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStarNameMoreLevels
parameter_list|()
block|{
name|NodeState
name|root
init|=
operator|new
name|MemoryNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|file
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"file"
argument_list|)
decl_stmt|;
name|file
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FILE
argument_list|)
expr_stmt|;
name|file
operator|.
name|child
argument_list|(
name|JCR_CONTENT
argument_list|)
expr_stmt|;
name|SimpleNodeAggregator
name|agg
init|=
operator|new
name|SimpleNodeAggregator
argument_list|()
operator|.
name|newRuleWithName
argument_list|(
name|NT_FILE
argument_list|,
name|newArrayList
argument_list|(
literal|"*"
argument_list|,
literal|"*/*"
argument_list|,
literal|"*/*/*"
argument_list|,
literal|"*/*/*/*"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|path
init|=
literal|"/file/jcr:content"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actual
init|=
name|newArrayList
argument_list|(
name|agg
operator|.
name|getParents
argument_list|(
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|newArrayList
argument_list|(
literal|"/file"
argument_list|)
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStarNameWrongParentType
parameter_list|()
block|{
name|NodeState
name|root
init|=
operator|new
name|MemoryNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|file
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"file"
argument_list|)
decl_stmt|;
name|file
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FILE
operator|+
literal|"_"
argument_list|)
expr_stmt|;
name|file
operator|.
name|child
argument_list|(
name|JCR_CONTENT
argument_list|)
expr_stmt|;
name|SimpleNodeAggregator
name|agg
init|=
operator|new
name|SimpleNodeAggregator
argument_list|()
operator|.
name|newRuleWithName
argument_list|(
name|NT_FILE
argument_list|,
name|newArrayList
argument_list|(
name|INCLUDE_ALL
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|path
init|=
literal|"/file/jcr:content"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actual
init|=
name|newArrayList
argument_list|(
name|agg
operator|.
name|getParents
argument_list|(
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|actual
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCascadingStarName
parameter_list|()
block|{
name|NodeState
name|root
init|=
operator|new
name|MemoryNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|folder
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"folder"
argument_list|)
decl_stmt|;
name|folder
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FOLDER
argument_list|)
expr_stmt|;
name|NodeBuilder
name|file
init|=
name|folder
operator|.
name|child
argument_list|(
literal|"file"
argument_list|)
decl_stmt|;
name|file
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FILE
argument_list|)
expr_stmt|;
name|file
operator|.
name|child
argument_list|(
name|JCR_CONTENT
argument_list|)
expr_stmt|;
name|SimpleNodeAggregator
name|agg
init|=
operator|new
name|SimpleNodeAggregator
argument_list|()
operator|.
name|newRuleWithName
argument_list|(
name|NT_FOLDER
argument_list|,
name|newArrayList
argument_list|(
literal|"file"
argument_list|)
argument_list|)
operator|.
name|newRuleWithName
argument_list|(
name|NT_FILE
argument_list|,
name|newArrayList
argument_list|(
name|INCLUDE_ALL
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|path
init|=
literal|"/folder/file/jcr:content"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actual
init|=
name|newArrayList
argument_list|(
name|agg
operator|.
name|getParents
argument_list|(
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|newArrayList
argument_list|(
literal|"/folder/file"
argument_list|,
literal|"/folder"
argument_list|)
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCascadingNodeName
parameter_list|()
block|{
name|NodeState
name|root
init|=
operator|new
name|MemoryNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|builder
init|=
name|root
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|folder
init|=
name|builder
operator|.
name|child
argument_list|(
literal|"folder"
argument_list|)
decl_stmt|;
name|folder
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FOLDER
argument_list|)
expr_stmt|;
name|NodeBuilder
name|file
init|=
name|folder
operator|.
name|child
argument_list|(
literal|"file"
argument_list|)
decl_stmt|;
name|file
operator|.
name|setProperty
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|,
name|NT_FILE
argument_list|)
expr_stmt|;
name|file
operator|.
name|child
argument_list|(
name|JCR_CONTENT
argument_list|)
expr_stmt|;
name|SimpleNodeAggregator
name|agg
init|=
operator|new
name|SimpleNodeAggregator
argument_list|()
operator|.
name|newRuleWithName
argument_list|(
name|NT_FOLDER
argument_list|,
name|newArrayList
argument_list|(
literal|"file"
argument_list|)
argument_list|)
operator|.
name|newRuleWithName
argument_list|(
name|NT_FILE
argument_list|,
name|newArrayList
argument_list|(
name|JCR_CONTENT
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|path
init|=
literal|"/folder/file/jcr:content"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actual
init|=
name|newArrayList
argument_list|(
name|agg
operator|.
name|getParents
argument_list|(
name|builder
operator|.
name|getNodeState
argument_list|()
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|newArrayList
argument_list|(
literal|"/folder/file"
argument_list|,
literal|"/folder"
argument_list|)
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

