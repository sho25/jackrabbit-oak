begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|authorization
operator|.
name|PrivilegeManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NamePathMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|restriction
operator|.
name|RestrictionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeBitsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
specifier|public
class|class
name|MgrProviderImplTest
extends|extends
name|AbstractPrincipalBasedTest
block|{
specifier|private
name|MgrProviderImpl
name|mgrProvider
decl_stmt|;
annotation|@
name|Before
annotation|@
name|Override
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|mgrProvider
operator|=
operator|(
name|MgrProviderImpl
operator|)
name|getMgrProvider
argument_list|(
name|root
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetContext
parameter_list|()
block|{
name|assertSame
argument_list|(
name|getConfig
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetNamePathMapper
parameter_list|()
block|{
name|assertSame
argument_list|(
name|getNamePathMapper
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetNamePathMapper2
parameter_list|()
block|{
name|MgrProvider
name|mp
init|=
operator|new
name|MgrProviderImpl
argument_list|(
name|mock
argument_list|(
name|PrincipalBasedAuthorizationConfiguration
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|NamePathMapper
operator|.
name|DEFAULT
argument_list|,
name|mp
operator|.
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetRoot
parameter_list|()
block|{
name|assertSame
argument_list|(
name|root
argument_list|,
name|mgrProvider
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalStateException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRootNotInitialized
parameter_list|()
block|{
name|MgrProvider
name|mp
init|=
operator|new
name|MgrProviderImpl
argument_list|(
name|mock
argument_list|(
name|PrincipalBasedAuthorizationConfiguration
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|mp
operator|.
name|getRoot
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReset
parameter_list|()
block|{
name|MgrProvider
name|mp
init|=
operator|new
name|MgrProviderImpl
argument_list|(
name|mock
argument_list|(
name|PrincipalBasedAuthorizationConfiguration
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|Root
name|r
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|NamePathMapper
name|mapper
init|=
name|mock
argument_list|(
name|NamePathMapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|mp
operator|.
name|reset
argument_list|(
name|r
argument_list|,
name|mapper
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|r
argument_list|,
name|mp
operator|.
name|getRoot
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|mapper
argument_list|,
name|mp
operator|.
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPrincipalManager
parameter_list|()
block|{
name|PrincipalManager
name|pm
init|=
name|mgrProvider
operator|.
name|getPrincipalManager
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|pm
argument_list|,
name|mgrProvider
operator|.
name|getPrincipalManager
argument_list|()
argument_list|)
expr_stmt|;
name|mgrProvider
operator|.
name|reset
argument_list|(
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|pm
argument_list|,
name|mgrProvider
operator|.
name|getPrincipalManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPrivilegeManager
parameter_list|()
block|{
name|PrivilegeManager
name|pm
init|=
name|mgrProvider
operator|.
name|getPrivilegeManager
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|pm
argument_list|,
name|mgrProvider
operator|.
name|getPrivilegeManager
argument_list|()
argument_list|)
expr_stmt|;
name|mgrProvider
operator|.
name|reset
argument_list|(
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|pm
argument_list|,
name|mgrProvider
operator|.
name|getPrivilegeManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPrivilegeBitsProvider
parameter_list|()
block|{
name|PrivilegeBitsProvider
name|pbp
init|=
name|mgrProvider
operator|.
name|getPrivilegeBitsProvider
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|pbp
argument_list|,
name|mgrProvider
operator|.
name|getPrivilegeBitsProvider
argument_list|()
argument_list|)
expr_stmt|;
name|mgrProvider
operator|.
name|reset
argument_list|(
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|pbp
argument_list|,
name|mgrProvider
operator|.
name|getPrivilegeBitsProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetRestrictionProvider
parameter_list|()
block|{
name|RestrictionProvider
name|rp
init|=
name|mgrProvider
operator|.
name|getRestrictionProvider
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|rp
argument_list|,
name|mgrProvider
operator|.
name|getRestrictionProvider
argument_list|()
argument_list|)
expr_stmt|;
name|mgrProvider
operator|.
name|reset
argument_list|(
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|rp
argument_list|,
name|mgrProvider
operator|.
name|getRestrictionProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetSecurityProvider
parameter_list|()
block|{
name|assertSame
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getSecurityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|mgrProvider
operator|.
name|getSecurityProvider
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getSecurityProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetTreeProvider
parameter_list|()
block|{
name|assertSame
argument_list|(
name|getTreeProvider
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getTreeProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|mgrProvider
operator|.
name|getTreeProvider
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getTreeProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetRootProvider
parameter_list|()
block|{
name|assertSame
argument_list|(
name|getRootProvider
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getRootProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|mgrProvider
operator|.
name|getRootProvider
argument_list|()
argument_list|,
name|mgrProvider
operator|.
name|getRootProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

