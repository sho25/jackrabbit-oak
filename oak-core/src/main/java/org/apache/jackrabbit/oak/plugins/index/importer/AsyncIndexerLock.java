begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_comment
comment|/**  * Lock used to prevent AsyncIndexUpdate from running when Index import  * is in progress  */
end_comment

begin_interface
interface|interface
name|AsyncIndexerLock
parameter_list|<
name|T
extends|extends
name|AsyncIndexerLock
operator|.
name|LockToken
parameter_list|>
block|{
name|AsyncIndexerLock
name|NOOP_LOCK
init|=
operator|new
name|AsyncIndexerLock
argument_list|()
block|{
specifier|private
specifier|final
name|LockToken
name|noopToken
init|=
operator|new
name|LockToken
argument_list|()
block|{}
decl_stmt|;
annotation|@
name|Override
specifier|public
name|LockToken
name|lock
parameter_list|(
name|String
name|asyncIndexerLane
parameter_list|)
block|{
return|return
name|noopToken
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unlock
parameter_list|(
name|LockToken
name|token
parameter_list|)
block|{          }
block|}
decl_stmt|;
comment|/**      * Marker interface. The implementation can return any      * opaque implementation which would be handed back in unlock      * call      */
interface|interface
name|LockToken
block|{      }
name|T
name|lock
parameter_list|(
name|String
name|asyncIndexerLane
parameter_list|)
throws|throws
name|CommitFailedException
function_decl|;
name|void
name|unlock
parameter_list|(
name|T
name|token
parameter_list|)
throws|throws
name|CommitFailedException
function_decl|;
block|}
end_interface

end_unit

