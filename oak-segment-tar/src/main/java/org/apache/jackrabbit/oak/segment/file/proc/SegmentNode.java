begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|proc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|proc
operator|.
name|Proc
operator|.
name|Backend
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|proc
operator|.
name|Proc
operator|.
name|Backend
operator|.
name|Segment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_class
class|class
name|SegmentNode
block|{
specifier|private
name|SegmentNode
parameter_list|()
block|{
comment|// Prevent instantiation.
block|}
specifier|static
name|NodeState
name|newSegmentNode
parameter_list|(
name|Backend
name|backend
parameter_list|,
name|String
name|segmentId
parameter_list|)
block|{
return|return
name|backend
operator|.
name|getSegment
argument_list|(
name|segmentId
argument_list|)
operator|.
name|map
argument_list|(
name|segment
lambda|->
name|newSegmentNode
argument_list|(
name|backend
argument_list|,
name|segmentId
argument_list|,
name|segment
argument_list|)
argument_list|)
operator|.
name|orElseGet
argument_list|(
parameter_list|()
lambda|->
name|newMissingSegment
argument_list|(
name|segmentId
argument_list|)
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|NodeState
name|newSegmentNode
parameter_list|(
name|Backend
name|backend
parameter_list|,
name|String
name|segmentId
parameter_list|,
name|Segment
name|segment
parameter_list|)
block|{
if|if
condition|(
name|segment
operator|.
name|isDataSegment
argument_list|()
condition|)
block|{
return|return
operator|new
name|DataSegmentNode
argument_list|(
name|backend
argument_list|,
name|segmentId
argument_list|,
name|segment
argument_list|)
return|;
block|}
return|return
operator|new
name|BulkSegmentNode
argument_list|(
name|backend
argument_list|,
name|segmentId
argument_list|,
name|segment
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|NodeState
name|newMissingSegment
parameter_list|(
name|String
name|segmentId
parameter_list|)
block|{
return|return
operator|new
name|MissingSegmentNode
argument_list|(
name|segmentId
argument_list|)
return|;
block|}
block|}
end_class

end_unit

