begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|basic
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncedIdentity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|TestIdentityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultSyncedIdentityTest
block|{
specifier|private
specifier|final
name|ExternalIdentityProvider
name|idp
init|=
operator|new
name|TestIdentityProvider
argument_list|()
decl_stmt|;
specifier|private
name|ExternalUser
name|externalUser
decl_stmt|;
specifier|private
name|ExternalGroup
name|externalGroup
decl_stmt|;
specifier|private
name|SyncedIdentity
name|si
decl_stmt|;
specifier|private
name|SyncedIdentity
name|siGroup
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|externalUser
operator|=
name|idp
operator|.
name|getUser
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|externalUser
argument_list|)
expr_stmt|;
name|si
operator|=
operator|new
name|DefaultSyncedIdentity
argument_list|(
name|externalUser
operator|.
name|getId
argument_list|()
argument_list|,
name|externalUser
operator|.
name|getExternalId
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|234
argument_list|)
expr_stmt|;
name|externalGroup
operator|=
name|idp
operator|.
name|listGroups
argument_list|()
operator|.
name|next
argument_list|()
expr_stmt|;
name|siGroup
operator|=
operator|new
name|DefaultSyncedIdentity
argument_list|(
name|externalGroup
operator|.
name|getId
argument_list|()
argument_list|,
name|externalGroup
operator|.
name|getExternalId
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|234
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetId
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|externalUser
operator|.
name|getId
argument_list|()
argument_list|,
name|si
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|externalGroup
operator|.
name|getId
argument_list|()
argument_list|,
name|siGroup
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|SyncedIdentity
name|siOtherId
init|=
operator|new
name|DefaultSyncedIdentity
argument_list|(
literal|"otherId"
argument_list|,
name|externalUser
operator|.
name|getExternalId
argument_list|()
argument_list|,
literal|false
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"otherId"
argument_list|,
name|siOtherId
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetExternalIdRef
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|externalUser
operator|.
name|getExternalId
argument_list|()
argument_list|,
name|si
operator|.
name|getExternalIdRef
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|externalGroup
operator|.
name|getExternalId
argument_list|()
argument_list|,
name|siGroup
operator|.
name|getExternalIdRef
argument_list|()
argument_list|)
expr_stmt|;
name|SyncedIdentity
name|siNullExtRef
init|=
operator|new
name|DefaultSyncedIdentity
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|234
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|siNullExtRef
operator|.
name|getExternalIdRef
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsGroup
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|si
operator|.
name|isGroup
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|siGroup
operator|.
name|isGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLastSynced
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|234
argument_list|,
name|si
operator|.
name|lastSynced
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|234
argument_list|,
name|siGroup
operator|.
name|lastSynced
argument_list|()
argument_list|)
expr_stmt|;
name|SyncedIdentity
name|siNeverSynced
init|=
operator|new
name|DefaultSyncedIdentity
argument_list|(
name|TestIdentityProvider
operator|.
name|ID_TEST_USER
argument_list|,
name|externalUser
operator|.
name|getExternalId
argument_list|()
argument_list|,
literal|false
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|siNeverSynced
operator|.
name|lastSynced
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

