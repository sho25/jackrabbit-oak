begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|impl
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|model
operator|.
name|Commit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|api
operator|.
name|model
operator|.
name|Instruction
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link Commit}.  *  * @author<a href="mailto:pmarx@adobe.com>Philipp Marx</a>  */
end_comment

begin_class
specifier|public
class|class
name|CommitImpl
implements|implements
name|Commit
block|{
specifier|private
specifier|final
name|String
name|diff
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Instruction
argument_list|>
name|instructions
decl_stmt|;
specifier|private
specifier|final
name|String
name|message
decl_stmt|;
specifier|private
specifier|final
name|String
name|path
decl_stmt|;
specifier|private
specifier|final
name|long
name|timestamp
decl_stmt|;
specifier|private
name|Long
name|revisionId
decl_stmt|;
comment|/**      * Constructs a new {@code CommitImpl}.      *      * @param path The path.      * @param diff The diff.      * @param message The message.      */
specifier|public
name|CommitImpl
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|diff
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|this
argument_list|(
name|path
argument_list|,
name|diff
argument_list|,
name|message
argument_list|,
operator|new
name|LinkedList
argument_list|<
name|Instruction
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructs a new {@code CommitImpl}.      *      * @param path The path.      * @param diff The diff.      * @param message The message.      * @param instructions The {@link Instruction}s.      */
specifier|public
name|CommitImpl
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|diff
parameter_list|,
name|String
name|message
parameter_list|,
name|List
argument_list|<
name|Instruction
argument_list|>
name|instructions
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|diff
operator|=
name|diff
expr_stmt|;
name|this
operator|.
name|message
operator|=
name|message
expr_stmt|;
name|this
operator|.
name|instructions
operator|=
name|instructions
expr_stmt|;
name|timestamp
operator|=
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
expr_stmt|;
block|}
comment|/**      * Adds the given {@link Instruction}.      *      * @param instruction The {@code Instruction}.      */
specifier|public
name|void
name|addInstruction
parameter_list|(
name|Instruction
name|instruction
parameter_list|)
block|{
name|instructions
operator|.
name|add
argument_list|(
name|instruction
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getDiff
parameter_list|()
block|{
return|return
name|diff
return|;
block|}
specifier|public
name|List
argument_list|<
name|Instruction
argument_list|>
name|getInstructions
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructions
argument_list|)
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|message
return|;
block|}
specifier|public
name|String
name|getPath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
specifier|public
name|Long
name|getRevisionId
parameter_list|()
block|{
return|return
name|revisionId
return|;
block|}
specifier|public
name|void
name|setRevisionId
parameter_list|(
name|Long
name|revisionId
parameter_list|)
block|{
name|this
operator|.
name|revisionId
operator|=
name|revisionId
expr_stmt|;
block|}
specifier|public
name|long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
block|}
end_class

end_unit

