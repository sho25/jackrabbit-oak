begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|autosave
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|util
operator|.
name|UserUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * Implementation of the user management that allows to set the autosave flag.  * Since OAK does no longer support the auto-save flag out of the box and this  * part of the user management is targeted for deprecation, this {@code UserManager}  * implementation should only be used for those cases where strict backwards  * compatibility is really required.  *  *<p>In general any consumer of the Jackrabbit user management API should stick  * to the API contract and verify that the autosave flag is enabled before  * relying on the implementation to have it turned on:</p>  *  *<pre>  *     JackrabbitSession session = ...;  *     UserManager userManager = session.getUserManager();  *  *     // modify some user related content  *  *     if (!userManager#isAutosave()) {  *         session.save();  *     }  *</pre>  */
end_comment

begin_class
specifier|public
class|class
name|AutoSaveEnabledManager
implements|implements
name|UserManager
block|{
specifier|private
specifier|final
name|UserManager
name|dlg
decl_stmt|;
specifier|private
specifier|final
name|Root
name|root
decl_stmt|;
specifier|private
name|boolean
name|autosave
init|=
literal|true
decl_stmt|;
specifier|public
name|AutoSaveEnabledManager
parameter_list|(
name|UserManager
name|dlg
parameter_list|,
name|Root
name|root
parameter_list|)
block|{
name|this
operator|.
name|dlg
operator|=
name|dlg
expr_stmt|;
name|this
operator|.
name|root
operator|=
name|root
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Authorizable
name|getAuthorizable
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|getAuthorizable
argument_list|(
name|id
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
extends|extends
name|Authorizable
parameter_list|>
name|T
name|getAuthorizable
parameter_list|(
name|String
name|id
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|authorizableClass
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|UserUtil
operator|.
name|castAuthorizable
argument_list|(
name|wrap
argument_list|(
name|dlg
operator|.
name|getAuthorizable
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|,
name|authorizableClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Authorizable
name|getAuthorizable
parameter_list|(
name|Principal
name|principal
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|getAuthorizable
argument_list|(
name|principal
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Authorizable
name|getAuthorizableByPath
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|getAuthorizableByPath
argument_list|(
name|path
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|Authorizable
argument_list|>
name|findAuthorizables
parameter_list|(
name|String
name|relPath
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|AuthorizableWrapper
operator|.
name|createIterator
argument_list|(
name|dlg
operator|.
name|findAuthorizables
argument_list|(
name|relPath
argument_list|,
name|value
argument_list|)
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|Authorizable
argument_list|>
name|findAuthorizables
parameter_list|(
name|String
name|relPath
parameter_list|,
name|String
name|value
parameter_list|,
name|int
name|searchType
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|AuthorizableWrapper
operator|.
name|createIterator
argument_list|(
name|dlg
operator|.
name|findAuthorizables
argument_list|(
name|relPath
argument_list|,
name|value
argument_list|,
name|searchType
argument_list|)
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|Authorizable
argument_list|>
name|findAuthorizables
parameter_list|(
name|Query
name|query
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|AuthorizableWrapper
operator|.
name|createIterator
argument_list|(
name|dlg
operator|.
name|findAuthorizables
argument_list|(
name|query
argument_list|)
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|User
name|createUser
parameter_list|(
name|String
name|userID
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|createUser
argument_list|(
name|userID
argument_list|,
name|password
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|User
name|createUser
parameter_list|(
name|String
name|userID
parameter_list|,
name|String
name|password
parameter_list|,
name|Principal
name|principal
parameter_list|,
annotation|@
name|Nullable
name|String
name|intermediatePath
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|createUser
argument_list|(
name|userID
argument_list|,
name|password
argument_list|,
name|principal
argument_list|,
name|intermediatePath
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|User
name|createSystemUser
parameter_list|(
name|String
name|userID
parameter_list|,
name|String
name|intermediatePath
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|createUser
argument_list|(
name|userID
argument_list|,
name|intermediatePath
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Group
name|createGroup
parameter_list|(
name|String
name|groupId
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|createGroup
argument_list|(
name|groupId
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Group
name|createGroup
parameter_list|(
name|Principal
name|principal
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|createGroup
argument_list|(
name|principal
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Group
name|createGroup
parameter_list|(
name|Principal
name|principal
parameter_list|,
name|String
name|groupId
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|createGroup
argument_list|(
name|principal
argument_list|,
name|groupId
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Group
name|createGroup
parameter_list|(
name|String
name|groupID
parameter_list|,
name|Principal
name|principal
parameter_list|,
annotation|@
name|Nullable
name|String
name|intermediatePath
parameter_list|)
throws|throws
name|RepositoryException
block|{
try|try
block|{
return|return
name|wrap
argument_list|(
name|dlg
operator|.
name|createGroup
argument_list|(
name|groupID
argument_list|,
name|principal
argument_list|,
name|intermediatePath
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|autosave
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isAutoSave
parameter_list|()
block|{
return|return
name|autosave
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|autoSave
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|autosave
operator|=
name|enable
expr_stmt|;
block|}
comment|//--------------------------------------------------------------------------
name|void
name|autosave
parameter_list|()
throws|throws
name|RepositoryException
block|{
if|if
condition|(
name|autosave
condition|)
block|{
try|try
block|{
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|asRepositoryException
argument_list|()
throw|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Nullable
name|Authorizable
name|wrap
parameter_list|(
annotation|@
name|Nullable
name|Authorizable
name|authorizable
parameter_list|)
block|{
if|if
condition|(
name|authorizable
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
name|authorizable
operator|.
name|isGroup
argument_list|()
condition|)
block|{
return|return
name|wrap
argument_list|(
operator|(
name|Group
operator|)
name|authorizable
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|wrap
argument_list|(
operator|(
name|User
operator|)
name|authorizable
argument_list|)
return|;
block|}
block|}
annotation|@
name|NotNull
name|User
name|wrap
parameter_list|(
annotation|@
name|NotNull
name|User
name|user
parameter_list|)
block|{
return|return
operator|new
name|UserImpl
argument_list|(
name|user
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|NotNull
name|Group
name|wrap
parameter_list|(
annotation|@
name|NotNull
name|Group
name|group
parameter_list|)
block|{
return|return
operator|new
name|GroupImpl
argument_list|(
name|group
argument_list|,
name|this
argument_list|)
return|;
block|}
block|}
end_class

end_unit

