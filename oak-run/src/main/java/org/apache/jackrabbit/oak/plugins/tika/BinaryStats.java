begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tika
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ComparisonChain
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|groovy
operator|.
name|runtime
operator|.
name|StringGroovyMethods
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|IOUtils
operator|.
name|humanReadableByteCount
import|;
end_import

begin_class
class|class
name|BinaryStats
block|{
specifier|private
specifier|final
name|TikaHelper
name|tika
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|MimeTypeStats
argument_list|>
name|stats
decl_stmt|;
specifier|private
name|long
name|totalSize
decl_stmt|;
specifier|private
name|long
name|totalCount
decl_stmt|;
specifier|private
name|long
name|indexedSize
decl_stmt|;
specifier|private
name|long
name|indexedCount
decl_stmt|;
specifier|public
name|BinaryStats
parameter_list|(
name|File
name|tikaConfig
parameter_list|,
name|BinaryResourceProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|tika
operator|=
operator|new
name|TikaHelper
argument_list|(
name|tikaConfig
argument_list|)
expr_stmt|;
name|this
operator|.
name|stats
operator|=
name|collectStats
argument_list|(
name|provider
argument_list|)
expr_stmt|;
block|}
specifier|public
name|long
name|getTotalSize
parameter_list|()
block|{
return|return
name|totalSize
return|;
block|}
specifier|public
name|long
name|getTotalCount
parameter_list|()
block|{
return|return
name|totalCount
return|;
block|}
specifier|public
name|long
name|getIndexedSize
parameter_list|()
block|{
return|return
name|indexedSize
return|;
block|}
specifier|public
name|long
name|getIndexedCount
parameter_list|()
block|{
return|return
name|indexedCount
return|;
block|}
specifier|public
name|String
name|getSummary
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|getSummary
argument_list|(
name|stats
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|MimeTypeStats
argument_list|>
name|collectStats
parameter_list|(
name|BinaryResourceProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|MimeTypeStats
argument_list|>
name|stats
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
for|for
control|(
name|BinaryResource
name|binary
range|:
name|provider
operator|.
name|getBinaries
argument_list|(
literal|"/"
argument_list|)
control|)
block|{
name|String
name|mimeType
init|=
name|binary
operator|.
name|getMimeType
argument_list|()
decl_stmt|;
if|if
condition|(
name|mimeType
operator|!=
literal|null
condition|)
block|{
name|MimeTypeStats
name|mimeStats
init|=
name|stats
operator|.
name|get
argument_list|(
name|mimeType
argument_list|)
decl_stmt|;
if|if
condition|(
name|mimeStats
operator|==
literal|null
condition|)
block|{
name|mimeStats
operator|=
name|createStat
argument_list|(
name|mimeType
argument_list|)
expr_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|mimeType
argument_list|,
name|mimeStats
argument_list|)
expr_stmt|;
block|}
name|long
name|size
init|=
name|binary
operator|.
name|getByteSource
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|mimeStats
operator|.
name|addSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|totalSize
operator|+=
name|size
expr_stmt|;
name|totalCount
operator|++
expr_stmt|;
if|if
condition|(
name|mimeStats
operator|.
name|isIndexed
argument_list|()
condition|)
block|{
name|indexedSize
operator|+=
name|size
expr_stmt|;
name|indexedCount
operator|++
expr_stmt|;
block|}
block|}
block|}
name|List
argument_list|<
name|MimeTypeStats
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|MimeTypeStats
argument_list|>
argument_list|(
name|stats
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|result
argument_list|,
name|Collections
operator|.
name|reverseOrder
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|String
name|getSummary
parameter_list|(
name|List
argument_list|<
name|MimeTypeStats
argument_list|>
name|stats
parameter_list|)
block|{
name|int
name|maxWidth
init|=
literal|0
decl_stmt|;
for|for
control|(
name|MimeTypeStats
name|s
range|:
name|stats
control|)
block|{
name|maxWidth
operator|=
name|Math
operator|.
name|max
argument_list|(
name|maxWidth
argument_list|,
name|s
operator|.
name|getName
argument_list|()
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|maxWidth
operator|+=
literal|5
expr_stmt|;
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
decl_stmt|;
name|pw
operator|.
name|println
argument_list|(
literal|"MimeType Stats"
argument_list|)
expr_stmt|;
name|pw
operator|.
name|printf
argument_list|(
literal|"\tTotal size          : %s%n"
argument_list|,
name|humanReadableByteCount
argument_list|(
name|totalSize
argument_list|)
argument_list|)
expr_stmt|;
name|pw
operator|.
name|printf
argument_list|(
literal|"\tTotal indexed size  : %s%n"
argument_list|,
name|humanReadableByteCount
argument_list|(
name|indexedSize
argument_list|)
argument_list|)
expr_stmt|;
name|pw
operator|.
name|printf
argument_list|(
literal|"\tTotal count         : %d%n"
argument_list|,
name|totalCount
argument_list|)
expr_stmt|;
name|pw
operator|.
name|printf
argument_list|(
literal|"\tTotal indexed count : %d%n"
argument_list|,
name|indexedCount
argument_list|)
expr_stmt|;
name|pw
operator|.
name|println
argument_list|()
expr_stmt|;
name|String
name|header
init|=
name|center
argument_list|(
literal|"Type"
argument_list|,
name|maxWidth
argument_list|)
operator|+
literal|" "
operator|+
name|center
argument_list|(
literal|"Indexed"
argument_list|,
literal|10
argument_list|)
operator|+
literal|" "
operator|+
name|center
argument_list|(
literal|"Supported"
argument_list|,
literal|10
argument_list|)
operator|+
literal|" "
operator|+
name|center
argument_list|(
literal|"Count"
argument_list|,
literal|10
argument_list|)
operator|+
literal|" "
operator|+
name|center
argument_list|(
literal|"Size"
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|pw
operator|.
name|println
argument_list|(
name|header
argument_list|)
expr_stmt|;
name|pw
operator|.
name|println
argument_list|(
name|Strings
operator|.
name|repeat
argument_list|(
literal|"_"
argument_list|,
name|header
operator|.
name|length
argument_list|()
operator|+
literal|5
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|MimeTypeStats
name|s
range|:
name|stats
control|)
block|{
name|pw
operator|.
name|printf
argument_list|(
literal|"%-"
operator|+
name|maxWidth
operator|+
literal|"s|%10s|%10s|  %-8d|%10s%n"
argument_list|,
name|s
operator|.
name|getName
argument_list|()
argument_list|,
name|s
operator|.
name|isIndexed
argument_list|()
argument_list|,
name|s
operator|.
name|isSupported
argument_list|()
argument_list|,
name|s
operator|.
name|getCount
argument_list|()
argument_list|,
name|humanReadableByteCount
argument_list|(
name|s
operator|.
name|getTotalSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|sw
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|MimeTypeStats
name|createStat
parameter_list|(
name|String
name|mimeType
parameter_list|)
block|{
name|MimeTypeStats
name|stats
init|=
operator|new
name|MimeTypeStats
argument_list|(
name|mimeType
argument_list|)
decl_stmt|;
name|stats
operator|.
name|setIndexed
argument_list|(
name|tika
operator|.
name|isIndexed
argument_list|(
name|mimeType
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|setSupported
argument_list|(
name|tika
operator|.
name|isSupportedMediaType
argument_list|(
name|mimeType
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
specifier|private
specifier|static
name|String
name|center
parameter_list|(
name|String
name|s
parameter_list|,
name|int
name|width
parameter_list|)
block|{
return|return
name|StringGroovyMethods
operator|.
name|center
argument_list|(
name|s
argument_list|,
name|width
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|MimeTypeStats
implements|implements
name|Comparable
argument_list|<
name|MimeTypeStats
argument_list|>
block|{
specifier|private
specifier|final
name|String
name|mimeType
decl_stmt|;
specifier|private
name|int
name|count
decl_stmt|;
specifier|private
name|long
name|totalSize
decl_stmt|;
specifier|private
name|boolean
name|supported
decl_stmt|;
specifier|private
name|boolean
name|indexed
decl_stmt|;
specifier|public
name|MimeTypeStats
parameter_list|(
name|String
name|mimeType
parameter_list|)
block|{
name|this
operator|.
name|mimeType
operator|=
name|mimeType
expr_stmt|;
block|}
specifier|public
name|void
name|addSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{
name|count
operator|++
expr_stmt|;
name|totalSize
operator|+=
name|size
expr_stmt|;
block|}
specifier|public
name|void
name|setSupported
parameter_list|(
name|boolean
name|supported
parameter_list|)
block|{
name|this
operator|.
name|supported
operator|=
name|supported
expr_stmt|;
block|}
specifier|public
name|void
name|setIndexed
parameter_list|(
name|boolean
name|indexed
parameter_list|)
block|{
name|this
operator|.
name|indexed
operator|=
name|indexed
expr_stmt|;
block|}
specifier|public
name|long
name|getTotalSize
parameter_list|()
block|{
return|return
name|totalSize
return|;
block|}
specifier|public
name|int
name|getCount
parameter_list|()
block|{
return|return
name|count
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|mimeType
return|;
block|}
specifier|public
name|boolean
name|isIndexed
parameter_list|()
block|{
return|return
name|indexed
return|;
block|}
specifier|public
name|boolean
name|isSupported
parameter_list|()
block|{
return|return
name|supported
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|MimeTypeStats
name|o
parameter_list|)
block|{
return|return
name|ComparisonChain
operator|.
name|start
argument_list|()
operator|.
name|compareFalseFirst
argument_list|(
name|indexed
argument_list|,
name|o
operator|.
name|indexed
argument_list|)
operator|.
name|compare
argument_list|(
name|totalSize
argument_list|,
name|o
operator|.
name|totalSize
argument_list|)
operator|.
name|result
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

