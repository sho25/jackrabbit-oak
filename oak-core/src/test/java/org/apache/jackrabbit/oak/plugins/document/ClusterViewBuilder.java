begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Test helper class that is capable to simply creating ClusterView and  * ClusterViewDocument objs  **/
end_comment

begin_class
class|class
name|ClusterViewBuilder
block|{
specifier|private
specifier|final
name|Set
argument_list|<
name|Integer
argument_list|>
name|activeIds
init|=
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|Integer
argument_list|>
name|recoveringIds
init|=
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|Integer
argument_list|>
name|backlogIds
init|=
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|Integer
argument_list|>
name|inactiveIds
init|=
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|long
name|viewSeqNum
decl_stmt|;
specifier|private
specifier|final
name|String
name|clusterViewId
decl_stmt|;
specifier|private
specifier|final
name|int
name|myId
decl_stmt|;
name|ClusterViewBuilder
parameter_list|(
name|long
name|viewSeqNum
parameter_list|,
name|String
name|clusterViewId
parameter_list|,
name|int
name|myId
parameter_list|)
block|{
name|this
operator|.
name|viewSeqNum
operator|=
name|viewSeqNum
expr_stmt|;
name|this
operator|.
name|clusterViewId
operator|=
name|clusterViewId
expr_stmt|;
name|this
operator|.
name|myId
operator|=
name|myId
expr_stmt|;
block|}
specifier|public
name|ClusterViewBuilder
name|active
parameter_list|(
name|int
modifier|...
name|instanceIds
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instanceIds
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|int
name|anId
init|=
name|instanceIds
index|[
name|i
index|]
decl_stmt|;
name|activeIds
operator|.
name|add
argument_list|(
name|anId
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|ClusterViewBuilder
name|recovering
parameter_list|(
name|int
modifier|...
name|instanceIds
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instanceIds
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|int
name|anId
init|=
name|instanceIds
index|[
name|i
index|]
decl_stmt|;
name|recoveringIds
operator|.
name|add
argument_list|(
name|anId
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|ClusterViewBuilder
name|backlogs
parameter_list|(
name|int
modifier|...
name|instanceIds
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instanceIds
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|int
name|anId
init|=
name|instanceIds
index|[
name|i
index|]
decl_stmt|;
name|backlogIds
operator|.
name|add
argument_list|(
name|anId
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|ClusterViewBuilder
name|inactive
parameter_list|(
name|int
modifier|...
name|instanceIds
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instanceIds
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|int
name|anId
init|=
name|instanceIds
index|[
name|i
index|]
decl_stmt|;
name|inactiveIds
operator|.
name|add
argument_list|(
name|anId
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|ClusterViewDocument
name|asDoc
parameter_list|()
block|{
comment|/*          * "_id" : "clusterView", "seqNum" : NumberLong(1), "inactive" : null,          * "clusterViewHistory" : {          *           * }, "deactivating" : null, "created" : "2015-06-30T08:21:29.393+0200",          * "clusterViewId" : "882f8926-1112-493a-81a0-f946087b2986", "active" :          * "1", "creator" : 1, "_modCount" : NumberLong(1)          */
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|put
argument_list|(
name|ClusterViewDocument
operator|.
name|VIEW_SEQ_NUM_KEY
argument_list|,
name|viewSeqNum
argument_list|)
expr_stmt|;
name|doc
operator|.
name|put
argument_list|(
name|ClusterViewDocument
operator|.
name|INACTIVE_KEY
argument_list|,
name|asArrayStr
argument_list|(
name|inactiveIds
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|put
argument_list|(
name|ClusterViewDocument
operator|.
name|RECOVERING_KEY
argument_list|,
name|asArrayStr
argument_list|(
name|recoveringIds
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|put
argument_list|(
name|ClusterViewDocument
operator|.
name|ACTIVE_KEY
argument_list|,
name|asArrayStr
argument_list|(
name|activeIds
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|put
argument_list|(
name|ClusterViewDocument
operator|.
name|CLUSTER_VIEW_ID_KEY
argument_list|,
name|clusterViewId
argument_list|)
expr_stmt|;
name|ClusterViewDocument
name|clusterViewDoc
init|=
operator|new
name|ClusterViewDocument
argument_list|(
name|doc
argument_list|)
decl_stmt|;
return|return
name|clusterViewDoc
return|;
block|}
specifier|public
name|ClusterView
name|asView
parameter_list|()
block|{
return|return
name|ClusterView
operator|.
name|fromDocument
argument_list|(
name|myId
argument_list|,
name|asDoc
argument_list|()
argument_list|,
name|backlogIds
argument_list|)
return|;
block|}
specifier|private
name|String
name|asArrayStr
parameter_list|(
name|Set
argument_list|<
name|Integer
argument_list|>
name|ids
parameter_list|)
block|{
return|return
name|ClusterViewDocument
operator|.
name|arrayToCsv
argument_list|(
name|asArray
argument_list|(
name|ids
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Integer
index|[]
name|asArray
parameter_list|(
name|Set
argument_list|<
name|Integer
argument_list|>
name|set
parameter_list|)
block|{
if|if
condition|(
name|set
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
return|return
name|set
operator|.
name|toArray
argument_list|(
operator|new
name|Integer
index|[
name|set
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

