begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
operator|.
name|NODES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|TestUtils
operator|.
name|NO_BINARY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|SplitOperationsTest
extends|extends
name|BaseDocumentMKTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ROOT_ID
init|=
name|Utils
operator|.
name|getIdFromPath
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|initDocumentMK
parameter_list|()
block|{
comment|// prevent automatic background operations
name|mk
operator|=
operator|new
name|DocumentMK
operator|.
name|Builder
argument_list|()
operator|.
name|setAsyncDelay
argument_list|(
literal|0
argument_list|)
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|malformedStalePrev
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentNodeStore
name|ns
init|=
name|getDocumentMK
argument_list|()
operator|.
name|getNodeStore
argument_list|()
decl_stmt|;
name|DocumentStore
name|ds
init|=
name|ns
operator|.
name|getDocumentStore
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|NodeBuilder
name|nb
init|=
name|ns
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|nb
operator|.
name|setProperty
argument_list|(
literal|"p"
argument_list|,
literal|"v"
operator|+
name|i
argument_list|)
expr_stmt|;
name|ns
operator|.
name|merge
argument_list|(
name|nb
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
block|}
comment|// add a dangling _stalePrev
name|UpdateOp
name|op
init|=
operator|new
name|UpdateOp
argument_list|(
name|ROOT_ID
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|NodeDocument
operator|.
name|setStalePrevious
argument_list|(
name|op
argument_list|,
name|ns
operator|.
name|newRevision
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ds
operator|.
name|findAndUpdate
argument_list|(
name|NODES
argument_list|,
name|op
argument_list|)
argument_list|)
expr_stmt|;
name|NodeDocument
name|doc
init|=
name|ds
operator|.
name|find
argument_list|(
name|NODES
argument_list|,
name|ROOT_ID
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|doc
argument_list|)
expr_stmt|;
for|for
control|(
name|UpdateOp
name|updateOp
range|:
name|SplitOperations
operator|.
name|forDocument
argument_list|(
name|doc
argument_list|,
name|ns
argument_list|,
name|ns
operator|.
name|getHeadRevision
argument_list|()
argument_list|,
name|NO_BINARY
argument_list|,
literal|3
argument_list|)
control|)
block|{
name|ds
operator|.
name|createOrUpdate
argument_list|(
name|NODES
argument_list|,
name|updateOp
argument_list|)
expr_stmt|;
block|}
name|doc
operator|=
name|ds
operator|.
name|find
argument_list|(
name|NODES
argument_list|,
name|ROOT_ID
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// now _stalePrev entry must be gone
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|doc
operator|.
name|getStalePrev
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

