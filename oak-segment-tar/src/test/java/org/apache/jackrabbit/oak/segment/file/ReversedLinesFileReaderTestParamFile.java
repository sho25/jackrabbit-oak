begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|GBK_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|WINDOWS_31J_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|X_WINDOWS_949_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|X_WINDOWS_950_BIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|ReversedLinesReaderTestData
operator|.
name|createFile
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Stack
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_comment
comment|/**  * Test checks symmetric behaviour with  BufferedReader  * FIXME: this is mostly taken from a copy of org.apache.commons.io.input  * with a fix for IO-471. Replace again once commons-io has released a fixed version.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|ReversedLinesFileReaderTestParamFile
block|{
annotation|@
name|Parameters
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|blockSizes
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Object
index|[]
index|[]
block|{
block|{
name|WINDOWS_31J_BIN
block|,
literal|"windows-31j"
block|,
literal|null
block|}
block|,
block|{
name|GBK_BIN
block|,
literal|"gbk"
block|,
literal|null
block|}
block|,
block|{
name|X_WINDOWS_949_BIN
block|,
literal|"x-windows-949"
block|,
literal|null
block|}
block|,
block|{
name|X_WINDOWS_950_BIN
block|,
literal|"x-windows-950"
block|,
literal|null
block|}
block|,             }
argument_list|)
return|;
block|}
specifier|private
name|ReversedLinesFileReader
name|reversedLinesFileReader
decl_stmt|;
specifier|private
name|BufferedReader
name|bufferedReader
decl_stmt|;
specifier|private
specifier|final
name|byte
index|[]
name|data
decl_stmt|;
specifier|private
specifier|final
name|String
name|encoding
decl_stmt|;
specifier|private
specifier|final
name|int
name|buffSize
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
name|ReversedLinesFileReaderTestParamFile
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|String
name|encoding
parameter_list|,
name|Integer
name|buffSize
parameter_list|)
block|{
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|encoding
operator|=
name|encoding
expr_stmt|;
name|this
operator|.
name|buffSize
operator|=
name|buffSize
operator|==
literal|null
condition|?
literal|4096
else|:
name|buffSize
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDataIntegrityWithBufferedReader
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|File
name|testFileIso
init|=
name|createFile
argument_list|(
name|folder
operator|.
name|newFile
argument_list|()
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|reversedLinesFileReader
operator|=
operator|new
name|ReversedLinesFileReader
argument_list|(
name|testFileIso
argument_list|,
name|buffSize
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|Stack
argument_list|<
name|String
argument_list|>
name|lineStack
init|=
operator|new
name|Stack
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|bufferedReader
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|testFileIso
argument_list|)
argument_list|,
name|encoding
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|line
decl_stmt|;
comment|// read all lines in normal order
while|while
condition|(
operator|(
name|line
operator|=
name|bufferedReader
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|lineStack
operator|.
name|push
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
comment|// read in reverse order and compare with lines from stack
while|while
condition|(
operator|(
name|line
operator|=
name|reversedLinesFileReader
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|String
name|lineFromBufferedReader
init|=
name|lineStack
operator|.
name|pop
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|lineFromBufferedReader
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|After
specifier|public
name|void
name|closeReader
parameter_list|()
block|{
try|try
block|{
name|bufferedReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
try|try
block|{
name|reversedLinesFileReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
block|}
end_class

end_unit

