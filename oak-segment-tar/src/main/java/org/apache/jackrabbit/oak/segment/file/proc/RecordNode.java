begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|proc
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|PropertyStates
operator|.
name|createProperty
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|MemoryChildNodeEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|proc
operator|.
name|Proc
operator|.
name|Backend
operator|.
name|Record
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|ChildNodeEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_class
class|class
name|RecordNode
extends|extends
name|AbstractNode
block|{
specifier|private
specifier|final
name|Record
name|record
decl_stmt|;
name|RecordNode
parameter_list|(
name|Record
name|record
parameter_list|)
block|{
name|this
operator|.
name|record
operator|=
name|record
expr_stmt|;
block|}
annotation|@
name|NotNull
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|?
extends|extends
name|PropertyState
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|createProperty
argument_list|(
literal|"number"
argument_list|,
operator|(
name|long
operator|)
name|record
operator|.
name|getNumber
argument_list|()
argument_list|,
name|Type
operator|.
name|LONG
argument_list|)
argument_list|,
name|createProperty
argument_list|(
literal|"segmentId"
argument_list|,
name|record
operator|.
name|getSegmentId
argument_list|()
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
argument_list|,
name|createProperty
argument_list|(
literal|"offset"
argument_list|,
operator|(
name|long
operator|)
name|record
operator|.
name|getOffset
argument_list|()
argument_list|,
name|Type
operator|.
name|LONG
argument_list|)
argument_list|,
name|createProperty
argument_list|(
literal|"address"
argument_list|,
operator|(
name|long
operator|)
name|record
operator|.
name|getAddress
argument_list|()
argument_list|,
name|Type
operator|.
name|LONG
argument_list|)
argument_list|,
name|createProperty
argument_list|(
literal|"type"
argument_list|,
name|record
operator|.
name|getType
argument_list|()
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|NotNull
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|?
extends|extends
name|ChildNodeEntry
argument_list|>
name|getChildNodeEntries
parameter_list|()
block|{
return|return
name|record
operator|.
name|getRoot
argument_list|()
operator|.
name|map
argument_list|(
name|root
lambda|->
operator|new
name|MemoryChildNodeEntry
argument_list|(
literal|"root"
argument_list|,
name|root
argument_list|)
argument_list|)
operator|.
name|map
argument_list|(
name|Collections
operator|::
name|singletonList
argument_list|)
operator|.
name|orElseGet
argument_list|(
name|Collections
operator|::
name|emptyList
argument_list|)
return|;
block|}
block|}
end_class

end_unit

