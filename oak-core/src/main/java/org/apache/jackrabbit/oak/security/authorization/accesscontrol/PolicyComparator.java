begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|accesscontrol
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|Ints
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|JackrabbitAccessControlPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_class
specifier|final
class|class
name|PolicyComparator
implements|implements
name|Comparator
argument_list|<
name|JackrabbitAccessControlPolicy
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|JackrabbitAccessControlPolicy
name|policy1
parameter_list|,
name|JackrabbitAccessControlPolicy
name|policy2
parameter_list|)
block|{
if|if
condition|(
name|policy1
operator|.
name|equals
argument_list|(
name|policy2
argument_list|)
condition|)
block|{
return|return
literal|0
return|;
block|}
else|else
block|{
name|String
name|p1
init|=
name|policy1
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|String
name|p2
init|=
name|policy2
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|p1
operator|==
literal|null
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
elseif|else
if|if
condition|(
name|p2
operator|==
literal|null
condition|)
block|{
return|return
literal|1
return|;
block|}
else|else
block|{
name|int
name|depth1
init|=
name|PathUtils
operator|.
name|getDepth
argument_list|(
name|p1
argument_list|)
decl_stmt|;
name|int
name|depth2
init|=
name|PathUtils
operator|.
name|getDepth
argument_list|(
name|p2
argument_list|)
decl_stmt|;
return|return
operator|(
name|depth1
operator|==
name|depth2
operator|)
condition|?
name|p1
operator|.
name|compareTo
argument_list|(
name|p2
argument_list|)
else|:
name|Ints
operator|.
name|compare
argument_list|(
name|depth1
argument_list|,
name|depth2
argument_list|)
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

