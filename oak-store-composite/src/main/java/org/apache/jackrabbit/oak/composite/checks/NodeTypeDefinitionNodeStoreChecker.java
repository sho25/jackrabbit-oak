begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|composite
operator|.
name|checks
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_MIXINTYPES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
operator|.
name|JCR_SYSTEM
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|EmptyNodeState
operator|.
name|MISSING_NODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|nodetype
operator|.
name|NodeTypeConstants
operator|.
name|JCR_NODE_TYPES
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|composite
operator|.
name|MountedNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|nodetype
operator|.
name|TypeEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|nodetype
operator|.
name|TypeEditor
operator|.
name|ConstraintViolationCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Editor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|VisibleEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|MountInfoProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|ChildNodeEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|ReadOnlyBuilder
import|;
end_import

begin_comment
comment|/**  * Checks that nodes present in a mount are consistent with the global node type definitions  */
end_comment

begin_class
annotation|@
name|Component
annotation|@
name|Service
argument_list|(
name|MountedNodeStoreChecker
operator|.
name|class
argument_list|)
specifier|public
class|class
name|NodeTypeDefinitionNodeStoreChecker
implements|implements
name|MountedNodeStoreChecker
argument_list|<
name|NodeTypeDefinitionNodeStoreChecker
operator|.
name|Context
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Context
name|createContext
parameter_list|(
name|NodeStore
name|globalStore
parameter_list|,
name|MountInfoProvider
name|mip
parameter_list|)
block|{
name|NodeState
name|nodeTypes
init|=
name|globalStore
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
name|JCR_SYSTEM
argument_list|)
operator|.
name|getChildNode
argument_list|(
name|JCR_NODE_TYPES
argument_list|)
decl_stmt|;
return|return
operator|new
name|Context
argument_list|(
name|nodeTypes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|check
parameter_list|(
name|MountedNodeStore
name|mountedStore
parameter_list|,
name|Tree
name|tree
parameter_list|,
name|ErrorHolder
name|errorHolder
parameter_list|,
name|Context
name|context
parameter_list|)
block|{
name|ConstraintViolationCallback
name|callback
init|=
operator|new
name|ConstraintViolationCallback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onConstraintViolation
parameter_list|(
name|String
name|path
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|typeNames
parameter_list|,
name|int
name|code
parameter_list|,
name|String
name|message
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|errorHolder
operator|.
name|report
argument_list|(
name|mountedStore
argument_list|,
name|path
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|NodeState
name|root
init|=
name|mountedStore
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
decl_stmt|;
name|NodeBuilder
name|rootBuilder
init|=
operator|new
name|ReadOnlyBuilder
argument_list|(
name|root
argument_list|)
decl_stmt|;
comment|// prevent accidental changes
name|String
name|primary
init|=
name|root
operator|.
name|getName
argument_list|(
name|JCR_PRIMARYTYPE
argument_list|)
decl_stmt|;
name|Iterable
argument_list|<
name|String
argument_list|>
name|mixins
init|=
name|root
operator|.
name|getNames
argument_list|(
name|JCR_MIXINTYPES
argument_list|)
decl_stmt|;
try|try
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|checkNodeTypeNames
init|=
name|context
operator|.
name|getAllNodeTypeNames
argument_list|()
decl_stmt|;
comment|// apparently index definitions are not valid in a JCR sense but
comment|// the editor still tries to process them, so avoid that
name|checkNodeTypeNames
operator|.
name|remove
argument_list|(
name|IndexConstants
operator|.
name|INDEX_DEFINITIONS_NODE_TYPE
argument_list|)
expr_stmt|;
name|Editor
name|editor
init|=
operator|new
name|VisibleEditor
argument_list|(
name|TypeEditor
operator|.
name|create
argument_list|(
name|callback
argument_list|,
name|checkNodeTypeNames
argument_list|,
name|context
operator|.
name|nodeTypes
argument_list|,
name|primary
argument_list|,
name|mixins
argument_list|,
name|rootBuilder
argument_list|)
argument_list|)
decl_stmt|;
comment|// errors already propagated via the ConstraintViolationCallback so
comment|// no need to look at the CommitException
name|EditorDiff
operator|.
name|process
argument_list|(
name|editor
argument_list|,
name|MISSING_NODE
argument_list|,
name|root
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|errorHolder
operator|.
name|report
argument_list|(
name|mountedStore
argument_list|,
literal|"/"
argument_list|,
literal|"Unexpected error : "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// the VisibleEditor does its own traversal so we only run one check
return|return
literal|false
return|;
block|}
specifier|static
class|class
name|Context
block|{
specifier|private
specifier|final
name|NodeState
name|nodeTypes
decl_stmt|;
specifier|private
name|Context
parameter_list|(
name|NodeState
name|nodeTypes
parameter_list|)
block|{
name|this
operator|.
name|nodeTypes
operator|=
name|nodeTypes
expr_stmt|;
block|}
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|getAllNodeTypeNames
parameter_list|()
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|modifiedTypes
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|ChildNodeEntry
name|child
range|:
name|nodeTypes
operator|.
name|getChildNodeEntries
argument_list|()
control|)
block|{
name|modifiedTypes
operator|.
name|add
argument_list|(
name|child
operator|.
name|getNodeState
argument_list|()
operator|.
name|getName
argument_list|(
name|JcrConstants
operator|.
name|JCR_NODETYPENAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|modifiedTypes
return|;
block|}
block|}
block|}
end_class

end_unit

