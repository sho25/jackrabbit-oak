begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|query
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|MongoConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mongomk
operator|.
name|model
operator|.
name|CommitMongo
import|;
end_import

begin_comment
comment|/**  * An query for fetching valid revisions.  *  * @author<a href="mailto:pmarx@adobe.com>Philipp Marx</a>  */
end_comment

begin_class
specifier|public
class|class
name|FetchValidRevisionsQuery
extends|extends
name|AbstractQuery
argument_list|<
name|List
argument_list|<
name|Long
argument_list|>
argument_list|>
block|{
specifier|private
specifier|final
name|String
name|maxRevisionId
decl_stmt|;
comment|/**      * Constructs a new {@code FetchValidRevisionsQuery}.      *      * @param mongoConnection      *            The {@link MongoConnection}.      * @param maxRevisionId      *            The max revision id which should be fetched.      */
specifier|public
name|FetchValidRevisionsQuery
parameter_list|(
name|MongoConnection
name|mongoConnection
parameter_list|,
name|String
name|maxRevisionId
parameter_list|)
block|{
name|super
argument_list|(
name|mongoConnection
argument_list|)
expr_stmt|;
name|this
operator|.
name|maxRevisionId
operator|=
name|maxRevisionId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|execute
parameter_list|()
block|{
name|List
argument_list|<
name|CommitMongo
argument_list|>
name|validCommits
init|=
name|fetchValidCommits
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|validRevisions
init|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|(
name|validCommits
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|CommitMongo
name|commitMongo
range|:
name|validCommits
control|)
block|{
name|validRevisions
operator|.
name|add
argument_list|(
name|commitMongo
operator|.
name|getRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|validRevisions
return|;
block|}
specifier|private
name|List
argument_list|<
name|CommitMongo
argument_list|>
name|fetchValidCommits
parameter_list|()
block|{
return|return
operator|new
name|FetchValidCommitsQuery
argument_list|(
name|mongoConnection
argument_list|,
name|maxRevisionId
argument_list|)
operator|.
name|execute
argument_list|()
return|;
block|}
block|}
end_class

end_unit

