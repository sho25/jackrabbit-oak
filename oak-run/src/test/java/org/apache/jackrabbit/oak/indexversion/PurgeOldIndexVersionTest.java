begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|indexversion
package|;
end_package

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|junit
operator|.
name|LogCustomizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
operator|.
name|AbstractIndexCommandTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
operator|.
name|RepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|IndexDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|PurgeOldIndexVersionCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|JcrUtils
operator|.
name|getOrCreateByPath
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|PurgeOldIndexVersionTest
extends|extends
name|AbstractIndexCommandTest
block|{
specifier|private
specifier|final
specifier|static
name|String
name|FOO1_INDEX_PATH
init|=
literal|"/oak:index/fooIndex1"
decl_stmt|;
specifier|private
name|void
name|createCustomIndex
parameter_list|(
name|String
name|path
parameter_list|,
name|int
name|ootbVersion
parameter_list|,
name|int
name|customVersion
parameter_list|,
name|boolean
name|asyncIndex
parameter_list|)
throws|throws
name|IOException
throws|,
name|RepositoryException
block|{
name|IndexDefinitionBuilder
name|idxBuilder
init|=
operator|new
name|IndexDefinitionBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|asyncIndex
condition|)
block|{
name|idxBuilder
operator|.
name|noAsync
argument_list|()
expr_stmt|;
block|}
name|idxBuilder
operator|.
name|indexRule
argument_list|(
literal|"nt:base"
argument_list|)
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|propertyIndex
argument_list|()
expr_stmt|;
name|Session
name|session
init|=
name|fixture
operator|.
name|getAdminSession
argument_list|()
decl_stmt|;
name|String
name|indexName
init|=
name|customVersion
operator|!=
literal|0
condition|?
name|path
operator|+
literal|"-"
operator|+
name|ootbVersion
operator|+
literal|"-custom-"
operator|+
name|customVersion
else|:
name|path
operator|+
literal|"-"
operator|+
name|ootbVersion
decl_stmt|;
name|Node
name|fooIndex
init|=
name|getOrCreateByPath
argument_list|(
name|indexName
argument_list|,
literal|"oak:QueryIndexDefinition"
argument_list|,
name|session
argument_list|)
decl_stmt|;
name|idxBuilder
operator|.
name|build
argument_list|(
name|fooIndex
argument_list|)
expr_stmt|;
name|session
operator|.
name|save
argument_list|()
expr_stmt|;
name|session
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/*         All indexes have reindexCompletionTime present (Reindexing is done after creating all indexes)      */
annotation|@
name|Test
specifier|public
name|void
name|deleteOldIndexCompletely
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|getAsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|PurgeOldIndexVersionCommand
name|command
init|=
operator|new
name|PurgeOldIndexVersionCommand
argument_list|()
decl_stmt|;
name|File
name|storeDir
init|=
name|fixture
operator|.
name|getDir
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
name|storeDir
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--read-write"
block|,
literal|"--threshold=1"
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|storeDir
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"type"
argument_list|)
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRING
argument_list|)
argument_list|,
literal|"disabled"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|isHiddenChildNodePresent
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|invalidIndexOperationVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|LogCustomizer
name|custom
init|=
name|LogCustomizer
operator|.
name|forLogger
argument_list|(
literal|"org.apache.jackrabbit.oak.indexversion.IndexVersionOperation"
argument_list|)
operator|.
name|enable
argument_list|(
name|Level
operator|.
name|INFO
argument_list|)
operator|.
name|create
argument_list|()
decl_stmt|;
try|try
block|{
name|custom
operator|.
name|starting
argument_list|()
expr_stmt|;
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|getAsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|PurgeOldIndexVersionCommand
name|command
init|=
operator|new
name|PurgeOldIndexVersionCommand
argument_list|()
decl_stmt|;
comment|// File outDir = temporaryFolder.newFolder();
name|File
name|storeDir
init|=
name|fixture
operator|.
name|getDir
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
name|storeDir
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--read-write"
block|,
literal|"--threshold=1"
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|storeDir
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|logs
init|=
name|custom
operator|.
name|getLogs
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"custom fooIndex don't have product version "
argument_list|,
name|logs
operator|.
name|toString
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"IndexVersionOperation List is not valid for index"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|custom
operator|.
name|finished
argument_list|()
expr_stmt|;
block|}
block|}
comment|/*     Not all indexes have reIndexCompletionTime present (Reindexing is done before creating all indexes)     We are deleting hidden nodes for indexes fooIndex-4-custom-2 and fooIndex-3-custom-2     Now according to logic because   fooIndex-4-custom-1 will have reindexCompletionTimestamp all index     versions previous to this will get be marked for deletion or deleting hidden node operation.  */
annotation|@
name|Test
specifier|public
name|void
name|deleteOldIndexPartially
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|getAsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|PurgeOldIndexVersionCommand
name|command
init|=
operator|new
name|PurgeOldIndexVersionCommand
argument_list|()
decl_stmt|;
name|PurgeOldVersionUtils
operator|.
name|recursiveDeleteHiddenChildNodes
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
argument_list|,
literal|"/oak:index/fooIndex-4-custom-2"
argument_list|)
expr_stmt|;
name|PurgeOldVersionUtils
operator|.
name|recursiveDeleteHiddenChildNodes
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
argument_list|,
literal|"/oak:index/fooIndex-3-custom-2"
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|storeDir
init|=
name|fixture
operator|.
name|getDir
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
name|storeDir
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--read-write"
block|,
literal|"--threshold=1"
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|storeDir
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"type"
argument_list|)
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRING
argument_list|)
argument_list|,
literal|"disabled"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|isHiddenChildNodePresent
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|donotDeleteDisabledIndexes
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|NodeStore
name|store
init|=
name|fixture
operator|.
name|getNodeStore
argument_list|()
decl_stmt|;
name|NodeBuilder
name|rootBuilder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|NodeBuilder
name|nodeBuilder
init|=
name|rootBuilder
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-1"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
literal|"disabled"
argument_list|)
decl_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|rootBuilder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|PurgeOldIndexVersionCommand
name|command
init|=
operator|new
name|PurgeOldIndexVersionCommand
argument_list|()
decl_stmt|;
name|File
name|storeDir
init|=
name|fixture
operator|.
name|getDir
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
name|storeDir
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--read-write"
block|,
literal|"--threshold=1"
block|,
literal|"--index-paths=/oak:index/fooIndex,/oak:index"
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|storeDir
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"type"
argument_list|)
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRING
argument_list|)
argument_list|,
literal|"disabled"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|isHiddenChildNodePresent
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|onlyDeleteVersionIndexesMentionedUnderIndexPaths
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|FOO1_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|FOO1_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|FOO1_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|FOO1_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|FOO1_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|getAsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|PurgeOldIndexVersionCommand
name|command
init|=
operator|new
name|PurgeOldIndexVersionCommand
argument_list|()
decl_stmt|;
name|File
name|storeDir
init|=
name|fixture
operator|.
name|getDir
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
name|storeDir
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--read-write"
block|,
literal|"--threshold=1"
block|,
literal|"--index-paths=/oak:index/fooIndex"
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|storeDir
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-2-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-2-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-3-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-3-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
operator|.
name|getProperty
argument_list|(
literal|"type"
argument_list|)
operator|.
name|getValue
argument_list|(
name|Type
operator|.
name|STRING
argument_list|)
argument_list|,
literal|"disabled"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|isHiddenChildNodePresent
argument_list|(
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex-4-custom-2"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex-4-custom-2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Index:"
operator|+
literal|"fooIndex1-3-custom-1"
operator|+
literal|" deleted"
argument_list|,
name|fixture
operator|.
name|getNodeStore
argument_list|()
operator|.
name|getRoot
argument_list|()
operator|.
name|getChildNode
argument_list|(
literal|"oak:index"
argument_list|)
operator|.
name|getChildNode
argument_list|(
literal|"fooIndex1-3-custom-1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|donotDeleteNonReadWriteMode
parameter_list|()
throws|throws
name|Exception
block|{
name|LogCustomizer
name|custom
init|=
name|LogCustomizer
operator|.
name|forLogger
argument_list|(
literal|"org.apache.jackrabbit.oak.indexversion.PurgeOldIndexVersion"
argument_list|)
operator|.
name|enable
argument_list|(
name|Level
operator|.
name|INFO
argument_list|)
operator|.
name|create
argument_list|()
decl_stmt|;
try|try
block|{
name|custom
operator|.
name|starting
argument_list|()
expr_stmt|;
name|createTestData
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createCustomIndex
argument_list|(
name|TEST_INDEX_PATH
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|getAsyncIndexUpdate
argument_list|(
literal|"async"
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|PurgeOldIndexVersionCommand
name|command
init|=
operator|new
name|PurgeOldIndexVersionCommand
argument_list|()
decl_stmt|;
name|File
name|storeDir
init|=
name|fixture
operator|.
name|getDir
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
name|storeDir
operator|.
name|getAbsolutePath
argument_list|()
block|}
decl_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|fixture
operator|=
operator|new
name|RepositoryFixture
argument_list|(
name|storeDir
argument_list|)
expr_stmt|;
name|fixture
operator|.
name|close
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|logs
init|=
name|custom
operator|.
name|getLogs
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
literal|"repository is opened in read only mode "
argument_list|,
name|logs
operator|.
name|toString
argument_list|()
argument_list|,
name|containsString
argument_list|(
literal|"Repository is opened in read-only mode"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|custom
operator|.
name|finished
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|isHiddenChildNodePresent
parameter_list|(
name|NodeState
name|nodeState
parameter_list|)
block|{
name|boolean
name|isHiddenChildNodePresent
init|=
literal|false
decl_stmt|;
for|for
control|(
name|String
name|childNodeName
range|:
name|nodeState
operator|.
name|getChildNodeNames
argument_list|()
control|)
block|{
if|if
condition|(
name|childNodeName
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|':'
condition|)
block|{
name|isHiddenChildNodePresent
operator|=
literal|true
expr_stmt|;
block|}
block|}
return|return
name|isHiddenChildNodePresent
return|;
block|}
block|}
end_class

end_unit

