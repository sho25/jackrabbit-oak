begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|ldap
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityRef
import|;
end_import

begin_comment
comment|/**  * Implements an identity that is provided by the {@link LdapIdentityProvider}.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|LdapIdentity
implements|implements
name|ExternalIdentity
block|{
specifier|protected
specifier|final
name|LdapIdentityProvider
name|provider
decl_stmt|;
specifier|protected
specifier|final
name|ExternalIdentityRef
name|ref
decl_stmt|;
specifier|protected
specifier|final
name|String
name|id
decl_stmt|;
specifier|protected
specifier|final
name|String
name|path
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|ExternalIdentityRef
argument_list|>
name|groups
decl_stmt|;
specifier|private
specifier|final
name|LdapIdentityProperties
name|properties
init|=
operator|new
name|LdapIdentityProperties
argument_list|()
decl_stmt|;
specifier|protected
name|LdapIdentity
parameter_list|(
name|LdapIdentityProvider
name|provider
parameter_list|,
name|ExternalIdentityRef
name|ref
parameter_list|,
name|String
name|id
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|provider
operator|=
name|provider
expr_stmt|;
name|this
operator|.
name|ref
operator|=
name|ref
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
comment|/**      * {@inheritDoc}      */
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|ExternalIdentityRef
name|getExternalId
parameter_list|()
block|{
return|return
name|ref
return|;
block|}
comment|/**      * {@inheritDoc}      */
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
comment|/**      * Returns the DN as principal name.      * @return the DN      */
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|String
name|getPrincipalName
parameter_list|()
block|{
return|return
name|ref
operator|.
name|getId
argument_list|()
return|;
block|}
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
specifier|public
name|String
name|getIntermediatePath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
comment|/**      * {@inheritDoc}      */
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|ExternalIdentityRef
argument_list|>
name|getDeclaredGroups
parameter_list|()
throws|throws
name|ExternalIdentityException
block|{
if|if
condition|(
name|groups
operator|==
literal|null
condition|)
block|{
name|groups
operator|=
name|provider
operator|.
name|getDeclaredGroupRefs
argument_list|(
name|ref
argument_list|)
expr_stmt|;
block|}
return|return
name|groups
operator|.
name|values
argument_list|()
return|;
block|}
comment|/**      * {@inheritDoc}      */
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"LdapIdentity{"
operator|+
literal|"ref="
operator|+
name|ref
operator|+
literal|", id='"
operator|+
name|id
operator|+
literal|'\''
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

