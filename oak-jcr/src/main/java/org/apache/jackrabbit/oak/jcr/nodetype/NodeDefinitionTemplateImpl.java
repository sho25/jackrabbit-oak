begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|nodetype
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|NodeDefinitionTemplate
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|NodeType
import|;
end_import

begin_class
class|class
name|NodeDefinitionTemplateImpl
extends|extends
name|ItemDefinitionTemplateImpl
implements|implements
name|NodeDefinitionTemplate
block|{
specifier|private
name|String
name|defaultPrimaryTypeName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
index|[]
name|requiredPrimaryTypeNames
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|allowSameNameSiblings
init|=
literal|false
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|getDefaultPrimaryTypeName
parameter_list|()
block|{
return|return
name|defaultPrimaryTypeName
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDefaultPrimaryTypeName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|defaultPrimaryTypeName
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|NodeType
name|getDefaultPrimaryType
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getRequiredPrimaryTypeNames
parameter_list|()
block|{
return|return
name|requiredPrimaryTypeNames
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setRequiredPrimaryTypeNames
parameter_list|(
name|String
index|[]
name|names
parameter_list|)
block|{
name|this
operator|.
name|requiredPrimaryTypeNames
operator|=
name|names
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|NodeType
index|[]
name|getRequiredPrimaryTypes
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|allowsSameNameSiblings
parameter_list|()
block|{
return|return
name|allowSameNameSiblings
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSameNameSiblings
parameter_list|(
name|boolean
name|allowSameNameSiblings
parameter_list|)
block|{
name|this
operator|.
name|allowSameNameSiblings
operator|=
name|allowSameNameSiblings
expr_stmt|;
block|}
block|}
end_class

end_unit

