begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|CompositeIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|counter
operator|.
name|NodeCounterEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|property
operator|.
name|PropertyIndexEditorProvider
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_class
class|class
name|ReIndexer
block|{
specifier|private
specifier|final
name|IndexHelper
name|indexHelper
decl_stmt|;
specifier|public
name|ReIndexer
parameter_list|(
name|IndexHelper
name|indexHelper
parameter_list|)
block|{
name|this
operator|.
name|indexHelper
operator|=
name|checkNotNull
argument_list|(
name|indexHelper
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|reindex
parameter_list|()
throws|throws
name|IOException
throws|,
name|CommitFailedException
block|{
operator|new
name|SimpleAsyncReindexer
argument_list|(
name|indexHelper
argument_list|,
name|indexHelper
operator|.
name|getIndexPaths
argument_list|()
argument_list|,
name|createIndexEditorProvider
argument_list|()
argument_list|)
operator|.
name|reindex
argument_list|()
expr_stmt|;
block|}
specifier|private
name|IndexEditorProvider
name|createIndexEditorProvider
parameter_list|()
throws|throws
name|IOException
block|{
comment|//Need to list all used editors otherwise async index run fails with
comment|//MissingIndexEditor exception. Better approach would be to change lane for
comment|//those indexes and then do reindexing
name|NodeCounterEditorProvider
name|counter
init|=
operator|new
name|NodeCounterEditorProvider
argument_list|()
decl_stmt|;
name|IndexEditorProvider
name|lucene
init|=
name|indexHelper
operator|.
name|getLuceneIndexHelper
argument_list|()
operator|.
name|createEditorProvider
argument_list|()
decl_stmt|;
name|IndexEditorProvider
name|property
init|=
operator|new
name|PropertyIndexEditorProvider
argument_list|()
operator|.
name|with
argument_list|(
name|indexHelper
operator|.
name|getMountInfoProvider
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|CompositeIndexEditorProvider
operator|.
name|compose
argument_list|(
name|asList
argument_list|(
name|lucene
argument_list|,
name|property
argument_list|,
name|counter
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

