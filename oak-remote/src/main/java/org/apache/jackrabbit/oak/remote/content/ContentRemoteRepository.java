begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|content
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteCredentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteLoginException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteSession
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
specifier|public
class|class
name|ContentRemoteRepository
implements|implements
name|RemoteRepository
block|{
specifier|private
specifier|final
name|ContentRepository
name|contentRepository
decl_stmt|;
specifier|private
specifier|final
name|ContentRemoteRevisions
name|contentRemoteRevisions
decl_stmt|;
specifier|private
specifier|final
name|ContentRemoteBinaries
name|contentRemoteBinaries
decl_stmt|;
specifier|public
name|ContentRemoteRepository
parameter_list|(
name|ContentRepository
name|contentRepository
parameter_list|)
block|{
name|this
operator|.
name|contentRemoteRevisions
operator|=
operator|new
name|ContentRemoteRevisions
argument_list|()
expr_stmt|;
name|this
operator|.
name|contentRemoteBinaries
operator|=
operator|new
name|ContentRemoteBinaries
argument_list|()
expr_stmt|;
name|this
operator|.
name|contentRepository
operator|=
name|contentRepository
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RemoteCredentials
name|createBasicCredentials
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|char
index|[]
name|password
parameter_list|)
block|{
return|return
operator|new
name|BasicContentRemoteCredentials
argument_list|(
name|user
argument_list|,
name|password
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RemoteCredentials
name|createImpersonationCredentials
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|principals
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"not implemented"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|RemoteSession
name|login
parameter_list|(
name|RemoteCredentials
name|remoteCredentials
parameter_list|)
throws|throws
name|RemoteLoginException
block|{
name|ContentRemoteCredentials
name|contentRemoteCredentials
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|remoteCredentials
operator|instanceof
name|ContentRemoteCredentials
condition|)
block|{
name|contentRemoteCredentials
operator|=
operator|(
name|ContentRemoteCredentials
operator|)
name|remoteCredentials
expr_stmt|;
block|}
if|if
condition|(
name|contentRemoteCredentials
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"invalid credentials"
argument_list|)
throw|;
block|}
name|Thread
name|thread
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
decl_stmt|;
name|ClassLoader
name|loader
init|=
name|thread
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
name|thread
operator|.
name|setContextClassLoader
argument_list|(
name|Oak
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|ContentSession
name|session
decl_stmt|;
try|try
block|{
name|session
operator|=
name|contentRemoteCredentials
operator|.
name|login
argument_list|(
name|contentRepository
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|thread
operator|.
name|setContextClassLoader
argument_list|(
name|loader
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|ContentRemoteSession
argument_list|(
name|session
argument_list|,
name|contentRemoteRevisions
argument_list|,
name|contentRemoteBinaries
argument_list|)
return|;
block|}
block|}
end_class

end_unit

