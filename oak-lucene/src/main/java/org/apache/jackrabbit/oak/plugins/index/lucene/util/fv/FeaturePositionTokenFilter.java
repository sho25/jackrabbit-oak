begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|fv
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|TokenFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|TokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|CharTermAttribute
import|;
end_import

begin_comment
comment|/**  * {@link TokenFilter} which prepends the token / feature position plus underscore to the token itself  */
end_comment

begin_class
specifier|final
class|class
name|FeaturePositionTokenFilter
extends|extends
name|TokenFilter
block|{
specifier|private
specifier|final
name|CharTermAttribute
name|termAttribute
init|=
name|addAttribute
argument_list|(
name|CharTermAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|int
name|tokenCount
init|=
literal|0
decl_stmt|;
name|FeaturePositionTokenFilter
parameter_list|(
name|TokenStream
name|stream
parameter_list|)
block|{
name|super
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|incrementToken
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|input
operator|.
name|incrementToken
argument_list|()
condition|)
block|{
name|tokenCount
operator|++
expr_stmt|;
name|String
name|token
init|=
operator|new
name|String
argument_list|(
name|termAttribute
operator|.
name|buffer
argument_list|()
argument_list|,
literal|0
argument_list|,
name|termAttribute
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|termAttribute
operator|.
name|setEmpty
argument_list|()
expr_stmt|;
name|termAttribute
operator|.
name|append
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|tokenCount
argument_list|)
argument_list|)
expr_stmt|;
name|termAttribute
operator|.
name|append
argument_list|(
literal|"_"
argument_list|)
expr_stmt|;
name|termAttribute
operator|.
name|append
argument_list|(
name|token
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|reset
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|reset
argument_list|()
expr_stmt|;
name|tokenCount
operator|=
literal|0
expr_stmt|;
block|}
block|}
end_class

end_unit

