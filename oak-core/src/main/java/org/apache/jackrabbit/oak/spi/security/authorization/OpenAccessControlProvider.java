begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|ValidatorProvider
import|;
end_import

begin_comment
comment|/**  * This class implements an {@link AccessControlProvider} which grants  * full access to any {@link Subject} passed to {@link #createAccessControlContext(Subject)}.  */
end_comment

begin_class
specifier|public
class|class
name|OpenAccessControlProvider
implements|implements
name|AccessControlProvider
block|{
annotation|@
name|Override
specifier|public
name|AccessControlContext
name|createAccessControlContext
parameter_list|(
name|Subject
name|subject
parameter_list|)
block|{
return|return
operator|new
name|AccessControlContext
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CompiledPermissions
name|getPermissions
parameter_list|()
block|{
return|return
name|AllPermissions
operator|.
name|INSTANCE
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ValidatorProvider
argument_list|>
name|getValidatorProviders
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
specifier|private
specifier|static
specifier|final
class|class
name|AllPermissions
implements|implements
name|CompiledPermissions
block|{
specifier|private
specifier|static
specifier|final
name|CompiledPermissions
name|INSTANCE
init|=
operator|new
name|AllPermissions
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|canRead
parameter_list|(
name|String
name|path
parameter_list|,
name|boolean
name|isProperty
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isGranted
parameter_list|(
name|int
name|permissions
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isGranted
parameter_list|(
name|Tree
name|tree
parameter_list|,
name|int
name|permissions
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isGranted
parameter_list|(
name|Tree
name|parent
parameter_list|,
name|PropertyState
name|property
parameter_list|,
name|int
name|permissions
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
end_class

end_unit

