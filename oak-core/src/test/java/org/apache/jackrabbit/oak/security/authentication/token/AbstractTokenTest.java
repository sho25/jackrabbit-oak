begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|AccessDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|identifier
operator|.
name|IdentifierManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|credentials
operator|.
name|CredentialsSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|credentials
operator|.
name|SimpleCredentialsSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|TokenConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|TokenInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|TokenProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_comment
comment|/**  * AbstractTokenTest...  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractTokenTest
extends|extends
name|AbstractSecurityTest
implements|implements
name|TokenConstants
block|{
name|TokenProviderImpl
name|tokenProvider
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|root
operator|=
name|adminSession
operator|.
name|getLatestRoot
argument_list|()
expr_stmt|;
name|tokenProvider
operator|=
name|createTokenProvider
argument_list|(
name|root
argument_list|,
name|getUserConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|NotNull
name|TokenProviderImpl
name|createTokenProvider
parameter_list|(
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|UserConfiguration
name|userConfiguration
parameter_list|)
block|{
return|return
name|createTokenProvider
argument_list|(
name|root
argument_list|,
name|getTokenConfig
argument_list|()
argument_list|,
name|userConfiguration
argument_list|,
name|SimpleCredentialsSupport
operator|.
name|getInstance
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|NotNull
name|TokenProviderImpl
name|createTokenProvider
parameter_list|(
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|ConfigurationParameters
name|options
parameter_list|,
annotation|@
name|NotNull
name|UserConfiguration
name|userConfiguration
parameter_list|,
annotation|@
name|NotNull
name|CredentialsSupport
name|credentialsSupport
parameter_list|)
block|{
return|return
operator|new
name|TokenProviderImpl
argument_list|(
name|root
argument_list|,
name|options
argument_list|,
name|userConfiguration
argument_list|,
name|credentialsSupport
argument_list|)
return|;
block|}
annotation|@
name|NotNull
name|ConfigurationParameters
name|getTokenConfig
parameter_list|()
block|{
return|return
name|ConfigurationParameters
operator|.
name|EMPTY
return|;
block|}
annotation|@
name|NotNull
name|Tree
name|getTokenTree
parameter_list|(
annotation|@
name|NotNull
name|TokenInfo
name|info
parameter_list|)
block|{
name|String
name|token
init|=
name|info
operator|.
name|getToken
argument_list|()
decl_stmt|;
name|int
name|pos
init|=
name|token
operator|.
name|indexOf
argument_list|(
literal|'_'
argument_list|)
decl_stmt|;
name|String
name|nodeId
init|=
operator|(
name|pos
operator|==
operator|-
literal|1
operator|)
condition|?
name|token
else|:
name|token
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
decl_stmt|;
name|Tree
name|t
init|=
operator|new
name|IdentifierManager
argument_list|(
name|root
argument_list|)
operator|.
name|getTree
argument_list|(
name|nodeId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|t
argument_list|)
expr_stmt|;
return|return
name|t
return|;
block|}
annotation|@
name|NotNull
name|Tree
name|replaceTokenTree
parameter_list|(
annotation|@
name|NotNull
name|TokenInfo
name|base
parameter_list|,
annotation|@
name|NotNull
name|Tree
name|parent
parameter_list|,
annotation|@
name|NotNull
name|String
name|ntName
parameter_list|)
throws|throws
name|AccessDeniedException
block|{
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|base
argument_list|)
decl_stmt|;
name|Tree
name|tree
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|parent
argument_list|,
literal|"token"
argument_list|,
name|ntName
argument_list|)
decl_stmt|;
name|tree
operator|.
name|setProperty
argument_list|(
name|tokenTree
operator|.
name|getProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_UUID
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setProperty
argument_list|(
name|tokenTree
operator|.
name|getProperty
argument_list|(
name|TOKEN_ATTRIBUTE_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setProperty
argument_list|(
name|tokenTree
operator|.
name|getProperty
argument_list|(
name|TOKEN_ATTRIBUTE_EXPIRY
argument_list|)
argument_list|)
expr_stmt|;
name|tokenTree
operator|.
name|remove
argument_list|()
expr_stmt|;
return|return
name|tree
return|;
block|}
annotation|@
name|NotNull
specifier|static
name|TokenInfo
name|createTokenInfo
parameter_list|(
annotation|@
name|NotNull
name|TokenProvider
name|tp
parameter_list|,
annotation|@
name|NotNull
name|String
name|userId
parameter_list|)
block|{
name|TokenInfo
name|info
init|=
name|tp
operator|.
name|createToken
argument_list|(
name|userId
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|info
argument_list|)
expr_stmt|;
return|return
name|info
return|;
block|}
specifier|static
name|void
name|waitUntilExpired
parameter_list|(
annotation|@
name|NotNull
name|TokenInfo
name|info
parameter_list|)
block|{
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
while|while
condition|(
operator|!
name|info
operator|.
name|isExpired
argument_list|(
name|now
argument_list|)
condition|)
block|{
name|now
operator|=
name|waitForSystemTimeIncrement
argument_list|(
name|now
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

