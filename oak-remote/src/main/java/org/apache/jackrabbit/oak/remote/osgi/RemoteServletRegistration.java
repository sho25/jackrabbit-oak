begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|content
operator|.
name|ContentRemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|RemoteServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|http
operator|.
name|HttpService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|ConfigurationPolicy
operator|.
name|REQUIRE
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|metatype
operator|=
literal|true
argument_list|,
name|immediate
operator|=
literal|true
argument_list|,
name|label
operator|=
literal|"Apache Jackrabbit Oak Remote HTTP API"
argument_list|,
name|description
operator|=
literal|"The HTTP binding of the Remote API for a Jackrabbit Oak repository"
argument_list|)
annotation|@
name|Properties
argument_list|(
block|{
annotation|@
name|Property
argument_list|(
name|name
operator|=
literal|"url"
argument_list|,
name|value
operator|=
block|{
literal|"/api"
block|}
argument_list|,
name|label
operator|=
literal|"Mount URL"
argument_list|,
name|description
operator|=
literal|"Where the root application is exposed in the URL namespace"
argument_list|)
block|}
argument_list|)
specifier|public
class|class
name|RemoteServletRegistration
block|{
annotation|@
name|Reference
specifier|private
name|HttpService
name|httpService
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|ContentRepository
name|contentRepository
decl_stmt|;
annotation|@
name|Activate
specifier|public
name|void
name|activate
parameter_list|(
name|Map
name|properties
parameter_list|)
block|{
name|registerServlet
argument_list|(
name|getUrl
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deactivate
specifier|public
name|void
name|deactivate
parameter_list|(
name|Map
name|properties
parameter_list|)
block|{
name|unregisterServlet
argument_list|(
name|getUrl
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|registerServlet
parameter_list|(
name|String
name|url
parameter_list|)
block|{
try|try
block|{
name|httpService
operator|.
name|registerServlet
argument_list|(
name|url
argument_list|,
name|getRemoteServlet
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|unregisterServlet
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|httpService
operator|.
name|unregister
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getUrl
parameter_list|(
name|Map
name|properties
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"url"
argument_list|)
return|;
block|}
specifier|private
name|RemoteServlet
name|getRemoteServlet
parameter_list|()
block|{
return|return
operator|new
name|RemoteServlet
argument_list|(
name|getRemoteRepository
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|RemoteRepository
name|getRemoteRepository
parameter_list|()
block|{
return|return
operator|new
name|ContentRemoteRepository
argument_list|(
name|contentRepository
argument_list|)
return|;
block|}
block|}
end_class

end_unit

