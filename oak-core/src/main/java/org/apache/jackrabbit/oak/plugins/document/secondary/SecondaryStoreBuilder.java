begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|secondary
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|NodeStateDiffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|PathFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonList
import|;
end_import

begin_class
specifier|public
class|class
name|SecondaryStoreBuilder
block|{
specifier|private
specifier|final
name|NodeStore
name|store
decl_stmt|;
specifier|private
name|PathFilter
name|pathFilter
init|=
operator|new
name|PathFilter
argument_list|(
name|singletonList
argument_list|(
literal|"/"
argument_list|)
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|NodeStateDiffer
name|differ
init|=
name|NodeStateDiffer
operator|.
name|DEFAULT_DIFFER
decl_stmt|;
specifier|private
name|StatisticsProvider
name|statsProvider
init|=
name|StatisticsProvider
operator|.
name|NOOP
decl_stmt|;
specifier|public
name|SecondaryStoreBuilder
parameter_list|(
name|NodeStore
name|nodeStore
parameter_list|)
block|{
name|this
operator|.
name|store
operator|=
name|nodeStore
expr_stmt|;
block|}
specifier|public
name|SecondaryStoreBuilder
name|pathFilter
parameter_list|(
name|PathFilter
name|filter
parameter_list|)
block|{
name|this
operator|.
name|pathFilter
operator|=
name|filter
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SecondaryStoreBuilder
name|differ
parameter_list|(
name|NodeStateDiffer
name|differ
parameter_list|)
block|{
name|this
operator|.
name|differ
operator|=
name|differ
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SecondaryStoreBuilder
name|statisticsProvider
parameter_list|(
name|StatisticsProvider
name|statisticsProvider
parameter_list|)
block|{
name|this
operator|.
name|statsProvider
operator|=
name|statisticsProvider
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SecondaryStoreCache
name|buildCache
parameter_list|()
block|{
return|return
operator|new
name|SecondaryStoreCache
argument_list|(
name|store
argument_list|,
name|differ
argument_list|,
name|pathFilter
argument_list|,
name|statsProvider
argument_list|)
return|;
block|}
specifier|public
name|SecondaryStoreObserver
name|buildObserver
parameter_list|()
block|{
return|return
name|buildObserver
argument_list|(
name|SecondaryStoreRootObserver
operator|.
name|NOOP
argument_list|)
return|;
block|}
specifier|public
name|SecondaryStoreObserver
name|buildObserver
parameter_list|(
name|SecondaryStoreRootObserver
name|secondaryStoreRootObserver
parameter_list|)
block|{
return|return
operator|new
name|SecondaryStoreObserver
argument_list|(
name|store
argument_list|,
name|differ
argument_list|,
name|pathFilter
argument_list|,
name|statsProvider
argument_list|,
name|secondaryStoreRootObserver
argument_list|)
return|;
block|}
block|}
end_class

end_unit

