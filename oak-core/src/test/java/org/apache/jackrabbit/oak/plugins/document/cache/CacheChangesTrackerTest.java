begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|cache
operator|.
name|CacheLIRS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|cache
operator|.
name|CacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|cache
operator|.
name|CacheValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|DocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|NodeDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|locks
operator|.
name|NodeDocumentLocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|locks
operator|.
name|StripedNodeDocumentLocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|memory
operator|.
name|MemoryDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
operator|.
name|StringValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|CacheChangesTrackerTest
block|{
specifier|private
name|DocumentStore
name|ds
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|createDS
parameter_list|()
block|{
name|ds
operator|=
operator|new
name|MemoryDocumentStore
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTracker
parameter_list|()
block|{
name|List
argument_list|<
name|CacheChangesTracker
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|CacheChangesTracker
argument_list|>
argument_list|()
decl_stmt|;
name|CacheChangesTracker
name|tracker
init|=
operator|new
name|CacheChangesTracker
argument_list|(
operator|new
name|Predicate
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|apply
parameter_list|(
annotation|@
name|Nullable
name|String
name|input
parameter_list|)
block|{
return|return
operator|!
literal|"ignored"
operator|.
name|equals
argument_list|(
name|input
argument_list|)
return|;
block|}
block|}
argument_list|,
name|list
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|putDocument
argument_list|(
literal|"xyz"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|invalidateDocument
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|putDocument
argument_list|(
literal|"ignored"
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|invalidateDocument
argument_list|(
literal|"ignored"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"ignored"
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|list
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegisterChildrenTracker
parameter_list|()
block|{
name|NodeDocumentCache
name|cache
init|=
name|createCache
argument_list|()
decl_stmt|;
name|CacheChangesTracker
name|tracker
init|=
name|cache
operator|.
name|registerTracker
argument_list|(
literal|"1:/parent"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/abc"
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|createDoc
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|invalidate
argument_list|(
literal|"2:/parent/abc"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/abc"
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|invalidate
argument_list|(
literal|"2:/other-parent/abc"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/other-parent/abc"
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|cache
operator|.
name|invalidate
argument_list|(
literal|"2:/parent/123"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/123"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetLoaderAffectsTracker
parameter_list|()
throws|throws
name|ExecutionException
block|{
name|NodeDocumentCache
name|cache
init|=
name|createCache
argument_list|()
decl_stmt|;
name|CacheChangesTracker
name|tracker
init|=
name|cache
operator|.
name|registerTracker
argument_list|(
literal|"1:/parent"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|getIfPresent
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|get
argument_list|(
literal|"2:/parent/xyz"
argument_list|,
operator|new
name|Callable
argument_list|<
name|NodeDocument
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|NodeDocument
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|createDoc
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tracker
operator|.
name|mightBeenAffected
argument_list|(
literal|"2:/parent/xyz"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|NodeDocumentCache
name|createCache
parameter_list|()
block|{
name|Cache
argument_list|<
name|CacheValue
argument_list|,
name|NodeDocument
argument_list|>
name|nodeDocumentsCache
init|=
operator|new
name|CacheLIRS
argument_list|<
name|CacheValue
argument_list|,
name|NodeDocument
argument_list|>
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|Cache
argument_list|<
name|StringValue
argument_list|,
name|NodeDocument
argument_list|>
name|prevDocumentsCache
init|=
operator|new
name|CacheLIRS
argument_list|<
name|StringValue
argument_list|,
name|NodeDocument
argument_list|>
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|CacheStats
name|nodeDocumentsCacheStats
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|CacheStats
operator|.
name|class
argument_list|)
decl_stmt|;
name|CacheStats
name|prevDocumentsCacheStats
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|CacheStats
operator|.
name|class
argument_list|)
decl_stmt|;
name|NodeDocumentLocks
name|locks
init|=
operator|new
name|StripedNodeDocumentLocks
argument_list|()
decl_stmt|;
return|return
operator|new
name|NodeDocumentCache
argument_list|(
name|nodeDocumentsCache
argument_list|,
name|nodeDocumentsCacheStats
argument_list|,
name|prevDocumentsCache
argument_list|,
name|prevDocumentsCacheStats
argument_list|,
name|locks
argument_list|)
return|;
block|}
specifier|private
name|NodeDocument
name|createDoc
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|NodeDocument
name|doc
init|=
name|Collection
operator|.
name|NODES
operator|.
name|newDocument
argument_list|(
name|ds
argument_list|)
decl_stmt|;
name|doc
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
name|id
argument_list|)
expr_stmt|;
return|return
name|doc
return|;
block|}
block|}
end_class

end_unit

