begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|authentication
operator|.
name|external
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|CheckForNull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
operator|.
name|AbstractTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|JcrCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakRepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|RepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|internal
operator|.
name|SecurityProviderBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityProviderManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|PrincipalNameResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|basic
operator|.
name|DefaultSyncConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|DefaultSyncConfigImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|DefaultSyncHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|ExternalIDPManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|SyncHandlerMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|SyncManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|principal
operator|.
name|ExternalPrincipalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|CompositePrincipalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|Whiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|WhiteboardUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|context
operator|.
name|OsgiContextImpl
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkState
import|;
end_import

begin_comment
comment|/**  * Base benchmark test for external authentication.  *  * The setup currently defines the following configuration options:  *  * - {@code numberOfUsers} : number of user accounts that are 'known' to the IDP  * - {@code numberOfGroups}: number of groups 'known' to the IDP and equally used to define the membershipSize of each user.  * - {@code expirationTime}: expiration time as set with  *   {@link DefaultSyncConfig.Authorizable#setExpirationTime(long)}, used for both users and groups  * - {@code dynamicMembership}: boolean flag to enable dynamic membership (see OAK-4101)  *  * Note: by default the {@link DefaultSyncConfig.User#setMembershipNestingDepth(long)}  * is set to 1 and each user will become member of each of the groups as defined  * by {@code numberOfGroups}.  */
end_comment

begin_class
specifier|abstract
class|class
name|AbstractExternalTest
extends|extends
name|AbstractTest
argument_list|<
name|RepositoryFixture
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
literal|"pathPrefix"
decl_stmt|;
specifier|private
specifier|final
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|ExternalPrincipalConfiguration
name|externalPrincipalConfiguration
init|=
operator|new
name|ExternalPrincipalConfiguration
argument_list|()
decl_stmt|;
specifier|private
name|ContentRepository
name|contentRepository
decl_stmt|;
specifier|private
specifier|final
name|SecurityProvider
name|securityProvider
init|=
name|newTestSecurityProvider
argument_list|(
name|externalPrincipalConfiguration
argument_list|)
decl_stmt|;
specifier|final
name|DefaultSyncConfig
name|syncConfig
init|=
operator|new
name|DefaultSyncConfig
argument_list|()
decl_stmt|;
specifier|final
name|SyncHandler
name|syncHandler
init|=
operator|new
name|DefaultSyncHandler
argument_list|(
name|syncConfig
argument_list|)
decl_stmt|;
specifier|final
name|ExternalIdentityProvider
name|idp
decl_stmt|;
specifier|final
name|long
name|delay
decl_stmt|;
name|SyncManagerImpl
name|syncManager
decl_stmt|;
name|ExternalIdentityProviderManager
name|idpManager
decl_stmt|;
specifier|protected
name|AbstractExternalTest
parameter_list|(
name|int
name|numberOfUsers
parameter_list|,
name|int
name|numberOfGroups
parameter_list|,
name|long
name|expTime
parameter_list|,
name|boolean
name|dynamicMembership
parameter_list|,
annotation|@
name|Nonnull
name|List
argument_list|<
name|String
argument_list|>
name|autoMembership
parameter_list|)
block|{
name|this
argument_list|(
name|numberOfUsers
argument_list|,
name|numberOfGroups
argument_list|,
name|expTime
argument_list|,
name|dynamicMembership
argument_list|,
name|autoMembership
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|AbstractExternalTest
parameter_list|(
name|int
name|numberOfUsers
parameter_list|,
name|int
name|numberOfGroups
parameter_list|,
name|long
name|expTime
parameter_list|,
name|boolean
name|dynamicMembership
parameter_list|,
annotation|@
name|Nonnull
name|List
argument_list|<
name|String
argument_list|>
name|autoMembership
parameter_list|,
name|int
name|roundtripDelay
parameter_list|)
block|{
name|idp
operator|=
operator|(
name|roundtripDelay
operator|<
literal|0
operator|)
condition|?
operator|new
name|PrincipalResolvingProvider
argument_list|(
name|numberOfUsers
argument_list|,
name|numberOfGroups
argument_list|)
else|:
operator|new
name|TestIdentityProvider
argument_list|(
name|numberOfUsers
argument_list|,
name|numberOfGroups
argument_list|)
expr_stmt|;
name|delay
operator|=
name|roundtripDelay
expr_stmt|;
name|syncConfig
operator|.
name|user
argument_list|()
operator|.
name|setMembershipNestingDepth
argument_list|(
literal|1
argument_list|)
operator|.
name|setDynamicMembership
argument_list|(
name|dynamicMembership
argument_list|)
operator|.
name|setAutoMembership
argument_list|(
name|autoMembership
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|autoMembership
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
operator|.
name|setExpirationTime
argument_list|(
name|expTime
argument_list|)
operator|.
name|setPathPrefix
argument_list|(
name|PATH_PREFIX
argument_list|)
expr_stmt|;
name|syncConfig
operator|.
name|group
argument_list|()
operator|.
name|setExpirationTime
argument_list|(
name|expTime
argument_list|)
operator|.
name|setPathPrefix
argument_list|(
name|PATH_PREFIX
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|Configuration
name|createConfiguration
parameter_list|()
function_decl|;
specifier|protected
name|ContentRepository
name|getContentRepository
parameter_list|()
block|{
name|checkState
argument_list|(
name|contentRepository
operator|!=
literal|null
argument_list|)
expr_stmt|;
return|return
name|contentRepository
return|;
block|}
specifier|protected
name|SecurityProvider
name|getSecurityProvider
parameter_list|()
block|{
return|return
name|securityProvider
return|;
block|}
specifier|protected
name|String
name|getRandomUserId
parameter_list|()
block|{
name|int
name|index
init|=
name|random
operator|.
name|nextInt
argument_list|(
operator|(
operator|(
name|TestIdentityProvider
operator|)
name|idp
operator|)
operator|.
name|numberOfUsers
argument_list|)
decl_stmt|;
return|return
literal|"u"
operator|+
name|index
return|;
block|}
specifier|protected
name|String
name|getRandomGroupId
parameter_list|()
block|{
name|int
name|index
init|=
name|random
operator|.
name|nextInt
argument_list|(
operator|(
operator|(
name|TestIdentityProvider
operator|)
name|idp
operator|)
operator|.
name|membershipSize
argument_list|)
decl_stmt|;
return|return
literal|"g"
operator|+
name|index
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|(
name|Iterable
argument_list|<
name|RepositoryFixture
argument_list|>
name|fixtures
parameter_list|,
name|List
argument_list|<
name|Integer
argument_list|>
name|concurrencyLevels
parameter_list|)
block|{
comment|// make sure the desired JAAS config is set
name|Configuration
operator|.
name|setConfiguration
argument_list|(
name|createConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|run
argument_list|(
name|fixtures
argument_list|,
name|concurrencyLevels
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|beforeSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|autoMembership
init|=
name|syncConfig
operator|.
name|user
argument_list|()
operator|.
name|getAutoMembership
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|autoMembership
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Session
name|s
init|=
name|systemLogin
argument_list|()
decl_stmt|;
name|UserManager
name|userManager
init|=
operator|(
operator|(
name|JackrabbitSession
operator|)
name|s
operator|)
operator|.
name|getUserManager
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|groupId
range|:
name|autoMembership
control|)
block|{
name|userManager
operator|.
name|createGroup
argument_list|(
name|groupId
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|groupId
argument_list|)
argument_list|,
name|PATH_PREFIX
argument_list|)
expr_stmt|;
block|}
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Remove any user/group accounts that have been synchronized into the repo.      *      * @throws Exception      */
annotation|@
name|Override
specifier|protected
name|void
name|afterSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|systemLogin
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|creationRoot
range|:
operator|new
name|String
index|[]
block|{
name|UserConstants
operator|.
name|DEFAULT_USER_PATH
block|,
name|UserConstants
operator|.
name|DEFAULT_GROUP_PATH
block|}
control|)
block|{
name|String
name|path
init|=
name|creationRoot
operator|+
literal|"/"
operator|+
name|PATH_PREFIX
decl_stmt|;
if|if
condition|(
name|s
operator|.
name|nodeExists
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|s
operator|.
name|getNode
argument_list|(
name|path
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Repository
index|[]
name|createRepository
parameter_list|(
name|RepositoryFixture
name|fixture
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|fixture
operator|instanceof
name|OakRepositoryFixture
condition|)
block|{
return|return
operator|(
operator|(
name|OakRepositoryFixture
operator|)
name|fixture
operator|)
operator|.
name|setUpCluster
argument_list|(
literal|1
argument_list|,
operator|new
name|JcrCreator
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Jcr
name|customize
parameter_list|(
name|Oak
name|oak
parameter_list|)
block|{
name|Whiteboard
name|whiteboard
init|=
name|oak
operator|.
name|getWhiteboard
argument_list|()
decl_stmt|;
name|syncManager
operator|=
operator|new
name|SyncManagerImpl
argument_list|(
name|whiteboard
argument_list|)
expr_stmt|;
name|whiteboard
operator|.
name|register
argument_list|(
name|SyncManager
operator|.
name|class
argument_list|,
name|syncManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|idpManager
operator|=
operator|new
name|ExternalIDPManagerImpl
argument_list|(
name|whiteboard
argument_list|)
expr_stmt|;
name|whiteboard
operator|.
name|register
argument_list|(
name|ExternalIdentityProviderManager
operator|.
name|class
argument_list|,
name|idpManager
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|whiteboard
operator|.
name|register
argument_list|(
name|ExternalIdentityProvider
operator|.
name|class
argument_list|,
name|idp
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
name|whiteboard
operator|.
name|register
argument_list|(
name|SyncHandler
operator|.
name|class
argument_list|,
name|syncHandler
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
comment|// assert proper init of the 'externalPrincipalConfiguration' if dynamic membership is enabled
if|if
condition|(
name|syncConfig
operator|.
name|user
argument_list|()
operator|.
name|getDynamicMembership
argument_list|()
condition|)
block|{
name|OsgiContextImpl
name|context
init|=
operator|new
name|OsgiContextImpl
argument_list|()
decl_stmt|;
comment|// register the ExternalPrincipal configuration in order to have it's
comment|// activate method invoked.
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|externalPrincipalConfiguration
argument_list|)
expr_stmt|;
comment|// now register the sync-handler with the dynamic membership config
comment|// in order to enable dynamic membership with the external principal configuration
name|Map
name|props
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DefaultSyncConfigImpl
operator|.
name|PARAM_USER_DYNAMIC_MEMBERSHIP
argument_list|,
name|syncConfig
operator|.
name|user
argument_list|()
operator|.
name|getDynamicMembership
argument_list|()
argument_list|,
name|DefaultSyncConfigImpl
operator|.
name|PARAM_GROUP_AUTO_MEMBERSHIP
argument_list|,
name|syncConfig
operator|.
name|user
argument_list|()
operator|.
name|getAutoMembership
argument_list|()
argument_list|)
decl_stmt|;
name|context
operator|.
name|registerService
argument_list|(
name|SyncHandler
operator|.
name|class
argument_list|,
name|WhiteboardUtils
operator|.
name|getService
argument_list|(
name|whiteboard
argument_list|,
name|SyncHandler
operator|.
name|class
argument_list|)
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|Map
name|shMappingProps
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|SyncHandlerMapping
operator|.
name|PARAM_IDP_NAME
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|,
name|SyncHandlerMapping
operator|.
name|PARAM_SYNC_HANDLER_NAME
argument_list|,
name|syncConfig
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|context
operator|.
name|registerService
argument_list|(
name|SyncHandlerMapping
operator|.
name|class
argument_list|,
operator|new
name|SyncHandlerMapping
argument_list|()
block|{}
argument_list|,
name|shMappingProps
argument_list|)
expr_stmt|;
block|}
name|Jcr
name|jcr
init|=
operator|new
name|Jcr
argument_list|(
name|oak
argument_list|)
operator|.
name|with
argument_list|(
name|securityProvider
argument_list|)
decl_stmt|;
name|contentRepository
operator|=
name|jcr
operator|.
name|createContentRepository
argument_list|()
expr_stmt|;
return|return
name|jcr
return|;
block|}
block|}
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"unsupported fixture"
operator|+
name|fixture
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|SecurityProvider
name|newTestSecurityProvider
parameter_list|(
name|ExternalPrincipalConfiguration
name|externalPrincipalConfiguration
parameter_list|)
block|{
name|SecurityProvider
name|delegate
init|=
name|SecurityProviderBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|PrincipalConfiguration
name|principalConfiguration
init|=
name|delegate
operator|.
name|getConfiguration
argument_list|(
name|PrincipalConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|principalConfiguration
operator|instanceof
name|CompositePrincipalConfiguration
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|()
throw|;
block|}
else|else
block|{
name|externalPrincipalConfiguration
operator|.
name|setSecurityProvider
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
name|CompositePrincipalConfiguration
name|composite
init|=
operator|(
name|CompositePrincipalConfiguration
operator|)
name|principalConfiguration
decl_stmt|;
name|PrincipalConfiguration
name|defConfig
init|=
name|composite
operator|.
name|getDefaultConfig
argument_list|()
decl_stmt|;
name|composite
operator|.
name|addConfiguration
argument_list|(
name|externalPrincipalConfiguration
argument_list|)
expr_stmt|;
name|composite
operator|.
name|addConfiguration
argument_list|(
name|defConfig
argument_list|)
expr_stmt|;
block|}
return|return
name|delegate
return|;
block|}
class|class
name|TestIdentityProvider
implements|implements
name|ExternalIdentityProvider
block|{
specifier|private
specifier|final
name|int
name|numberOfUsers
decl_stmt|;
specifier|private
specifier|final
name|int
name|membershipSize
decl_stmt|;
name|TestIdentityProvider
parameter_list|(
name|int
name|numberOfUsers
parameter_list|,
name|int
name|membershipSize
parameter_list|)
block|{
name|this
operator|.
name|numberOfUsers
operator|=
name|numberOfUsers
expr_stmt|;
name|this
operator|.
name|membershipSize
operator|=
name|membershipSize
expr_stmt|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"test"
return|;
block|}
annotation|@
name|CheckForNull
annotation|@
name|Override
specifier|public
name|ExternalIdentity
name|getIdentity
parameter_list|(
annotation|@
name|Nonnull
name|ExternalIdentityRef
name|ref
parameter_list|)
block|{
name|String
name|id
init|=
name|ref
operator|.
name|getId
argument_list|()
decl_stmt|;
name|long
name|index
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|id
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|'u'
condition|)
block|{
return|return
operator|new
name|TestUser
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
if|if
condition|(
name|delay
operator|>
literal|0
condition|)
block|{
try|try
block|{
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|sleep
argument_list|(
name|delay
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
return|return
operator|new
name|TestGroup
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
annotation|@
name|CheckForNull
annotation|@
name|Override
specifier|public
name|ExternalUser
name|getUser
parameter_list|(
annotation|@
name|Nonnull
name|String
name|userId
parameter_list|)
block|{
return|return
operator|new
name|TestUser
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|userId
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|CheckForNull
annotation|@
name|Override
specifier|public
name|ExternalUser
name|authenticate
parameter_list|(
annotation|@
name|Nonnull
name|Credentials
name|credentials
parameter_list|)
block|{
return|return
name|getUser
argument_list|(
operator|(
operator|(
name|SimpleCredentials
operator|)
name|credentials
operator|)
operator|.
name|getUserID
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|CheckForNull
annotation|@
name|Override
specifier|public
name|ExternalGroup
name|getGroup
parameter_list|(
annotation|@
name|Nonnull
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|TestGroup
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|ExternalUser
argument_list|>
name|listUsers
parameter_list|()
block|{
name|Set
argument_list|<
name|ExternalUser
argument_list|>
name|all
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numberOfUsers
condition|;
name|i
operator|++
control|)
block|{
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestUser
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|all
operator|.
name|iterator
argument_list|()
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|ExternalGroup
argument_list|>
name|listGroups
parameter_list|()
block|{
name|Set
argument_list|<
name|ExternalGroup
argument_list|>
name|all
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|i
init|=
literal|0
init|;
name|i
operator|<
name|membershipSize
condition|;
name|i
operator|++
control|)
block|{
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestGroup
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|all
operator|.
name|iterator
argument_list|()
return|;
block|}
name|Iterable
argument_list|<
name|ExternalIdentityRef
argument_list|>
name|getDeclaredGroupRefs
parameter_list|(
name|String
name|userId
parameter_list|)
block|{
if|if
condition|(
name|userId
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|'u'
condition|)
block|{
name|Set
argument_list|<
name|ExternalIdentityRef
argument_list|>
name|groupRefs
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|i
init|=
literal|0
init|;
name|i
operator|<
name|membershipSize
condition|;
name|i
operator|++
control|)
block|{
name|groupRefs
operator|.
name|add
argument_list|(
operator|new
name|ExternalIdentityRef
argument_list|(
literal|"g"
operator|+
name|i
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|groupRefs
return|;
block|}
else|else
block|{
return|return
name|ImmutableSet
operator|.
name|of
argument_list|()
return|;
block|}
block|}
block|}
specifier|private
specifier|final
class|class
name|PrincipalResolvingProvider
extends|extends
name|TestIdentityProvider
implements|implements
name|PrincipalNameResolver
block|{
name|PrincipalResolvingProvider
parameter_list|(
name|int
name|numberOfUsers
parameter_list|,
name|int
name|membershipSize
parameter_list|)
block|{
name|super
argument_list|(
name|numberOfUsers
argument_list|,
name|membershipSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|String
name|fromExternalIdentityRef
parameter_list|(
annotation|@
name|Nonnull
name|ExternalIdentityRef
name|externalIdentityRef
parameter_list|)
block|{
return|return
literal|"p_"
operator|+
name|externalIdentityRef
operator|.
name|getId
argument_list|()
return|;
block|}
block|}
specifier|private
class|class
name|TestIdentity
implements|implements
name|ExternalIdentity
block|{
specifier|private
specifier|final
name|String
name|userId
decl_stmt|;
specifier|private
specifier|final
name|String
name|principalName
decl_stmt|;
specifier|private
specifier|final
name|ExternalIdentityRef
name|id
decl_stmt|;
specifier|public
name|TestIdentity
parameter_list|(
annotation|@
name|Nonnull
name|String
name|userId
parameter_list|)
block|{
name|this
operator|.
name|userId
operator|=
name|userId
expr_stmt|;
name|this
operator|.
name|principalName
operator|=
literal|"p_"
operator|+
name|userId
expr_stmt|;
name|id
operator|=
operator|new
name|ExternalIdentityRef
argument_list|(
name|userId
argument_list|,
name|idp
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|userId
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|String
name|getPrincipalName
parameter_list|()
block|{
return|return
name|principalName
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|ExternalIdentityRef
name|getExternalId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getIntermediatePath
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|ExternalIdentityRef
argument_list|>
name|getDeclaredGroups
parameter_list|()
block|{
return|return
operator|(
operator|(
name|TestIdentityProvider
operator|)
name|idp
operator|)
operator|.
name|getDeclaredGroupRefs
argument_list|(
name|userId
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|ImmutableMap
operator|.
name|of
argument_list|()
return|;
block|}
block|}
specifier|private
class|class
name|TestUser
extends|extends
name|TestIdentity
implements|implements
name|ExternalUser
block|{
specifier|public
name|TestUser
parameter_list|(
name|long
name|index
parameter_list|)
block|{
name|super
argument_list|(
literal|"u"
operator|+
name|index
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|TestGroup
extends|extends
name|TestIdentity
implements|implements
name|ExternalGroup
block|{
specifier|public
name|TestGroup
parameter_list|(
name|long
name|index
parameter_list|)
block|{
name|super
argument_list|(
literal|"g"
operator|+
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|ExternalIdentityRef
argument_list|>
name|getDeclaredMembers
parameter_list|()
throws|throws
name|ExternalIdentityException
block|{
return|return
name|ImmutableSet
operator|.
name|of
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

