begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|json
operator|.
name|JsonUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncedIdentity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|final
class|class
name|ResultMessages
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ResultMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|messages
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|ResultMessages
parameter_list|()
block|{}
name|String
index|[]
name|getMessages
parameter_list|()
block|{
return|return
name|messages
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
return|;
block|}
name|void
name|append
parameter_list|(
annotation|@
name|NotNull
name|List
argument_list|<
name|SyncResult
argument_list|>
name|results
parameter_list|)
block|{
for|for
control|(
name|SyncResult
name|result
range|:
name|results
control|)
block|{
name|append
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|append
parameter_list|(
annotation|@
name|NotNull
name|List
argument_list|<
name|SyncResult
argument_list|>
name|results
parameter_list|,
annotation|@
name|NotNull
name|Exception
name|e
parameter_list|)
block|{
for|for
control|(
name|SyncResult
name|result
range|:
name|results
control|)
block|{
if|if
condition|(
name|result
operator|instanceof
name|ErrorSyncResult
condition|)
block|{
name|append
argument_list|(
name|result
operator|.
name|getIdentity
argument_list|()
argument_list|,
operator|(
operator|(
name|ErrorSyncResult
operator|)
name|result
operator|)
operator|.
name|getException
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|SyncResult
operator|.
name|Status
name|st
init|=
name|result
operator|.
name|getStatus
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|st
condition|)
block|{
case|case
name|ADD
case|:
case|case
name|DELETE
case|:
case|case
name|UPDATE
case|:
case|case
name|ENABLE
case|:
case|case
name|DISABLE
case|:
name|append
argument_list|(
name|result
operator|.
name|getIdentity
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
break|break;
default|default:
name|append
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|append
parameter_list|(
annotation|@
name|NotNull
name|SyncResult
name|r
parameter_list|)
block|{
if|if
condition|(
name|r
operator|instanceof
name|ErrorSyncResult
condition|)
block|{
name|append
argument_list|(
name|r
operator|.
name|getIdentity
argument_list|()
argument_list|,
operator|(
operator|(
name|ErrorSyncResult
operator|)
name|r
operator|)
operator|.
name|getException
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|append
argument_list|(
name|r
operator|.
name|getIdentity
argument_list|()
argument_list|,
name|getOperationFromStatus
argument_list|(
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|append
parameter_list|(
annotation|@
name|Nullable
name|SyncedIdentity
name|syncedIdentity
parameter_list|,
annotation|@
name|NotNull
name|Exception
name|e
parameter_list|)
block|{
name|append
argument_list|(
name|syncedIdentity
argument_list|,
literal|"ERR"
argument_list|,
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|append
parameter_list|(
annotation|@
name|Nullable
name|SyncedIdentity
name|syncedIdentity
parameter_list|,
annotation|@
name|NotNull
name|String
name|op
parameter_list|,
annotation|@
name|Nullable
name|String
name|msg
parameter_list|)
block|{
name|String
name|uid
init|=
name|JsonUtil
operator|.
name|getJsonString
argument_list|(
operator|(
name|syncedIdentity
operator|==
literal|null
condition|?
literal|null
else|:
name|syncedIdentity
operator|.
name|getId
argument_list|()
operator|)
argument_list|)
decl_stmt|;
name|ExternalIdentityRef
name|externalIdentityRef
init|=
operator|(
name|syncedIdentity
operator|==
literal|null
operator|)
condition|?
literal|null
else|:
name|syncedIdentity
operator|.
name|getExternalIdRef
argument_list|()
decl_stmt|;
name|String
name|eid
init|=
operator|(
name|externalIdentityRef
operator|==
literal|null
operator|)
condition|?
literal|"\"\""
else|:
name|JsonUtil
operator|.
name|getJsonString
argument_list|(
name|externalIdentityRef
operator|.
name|getString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|msg
operator|==
literal|null
condition|)
block|{
name|messages
operator|.
name|add
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"{op:\"%s\",uid:%s,eid:%s}"
argument_list|,
name|op
argument_list|,
name|uid
argument_list|,
name|eid
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|messages
operator|.
name|add
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"{op:\"%s\",uid:%s,eid:%s,msg:%s}"
argument_list|,
name|op
argument_list|,
name|uid
argument_list|,
name|eid
argument_list|,
name|JsonUtil
operator|.
name|getJsonString
argument_list|(
name|msg
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|String
name|getOperationFromStatus
parameter_list|(
annotation|@
name|NotNull
name|SyncResult
operator|.
name|Status
name|syncStatus
parameter_list|)
block|{
name|String
name|op
decl_stmt|;
switch|switch
condition|(
name|syncStatus
condition|)
block|{
case|case
name|ADD
case|:
name|op
operator|=
literal|"add"
expr_stmt|;
break|break;
case|case
name|UPDATE
case|:
name|op
operator|=
literal|"upd"
expr_stmt|;
break|break;
case|case
name|DELETE
case|:
name|op
operator|=
literal|"del"
expr_stmt|;
break|break;
case|case
name|ENABLE
case|:
name|op
operator|=
literal|"ena"
expr_stmt|;
break|break;
case|case
name|DISABLE
case|:
name|op
operator|=
literal|"dis"
expr_stmt|;
break|break;
case|case
name|NO_SUCH_AUTHORIZABLE
case|:
name|op
operator|=
literal|"nsa"
expr_stmt|;
break|break;
case|case
name|NO_SUCH_IDENTITY
case|:
name|op
operator|=
literal|"nsi"
expr_stmt|;
break|break;
case|case
name|MISSING
case|:
name|op
operator|=
literal|"mis"
expr_stmt|;
break|break;
case|case
name|FOREIGN
case|:
name|op
operator|=
literal|"for"
expr_stmt|;
break|break;
default|default:
comment|// Status.NOP
name|op
operator|=
literal|"nop"
expr_stmt|;
block|}
return|return
name|op
return|;
block|}
block|}
end_class

end_unit

