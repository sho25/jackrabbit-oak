begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|NoSuchWorkspaceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|api
operator|.
name|MicroKernel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|mk
operator|.
name|core
operator|.
name|MicroKernelImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|nodetype
operator|.
name|InitialContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|lifecycle
operator|.
name|CompositeMicroKernelTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|lifecycle
operator|.
name|MicroKernelTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|OpenSecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_comment
comment|/**  * AbstractOakTest is the base class for oak test execution.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractOakTest
block|{
specifier|private
name|ContentRepository
name|contentRepository
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|contentRepository
operator|=
name|createRepository
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|MicroKernel
name|createMicroKernelWithInitialContent
parameter_list|()
block|{
name|MicroKernel
name|mk
init|=
operator|new
name|MicroKernelImpl
argument_list|()
decl_stmt|;
operator|new
name|InitialContent
argument_list|()
operator|.
name|available
argument_list|(
name|mk
argument_list|)
expr_stmt|;
return|return
name|mk
return|;
block|}
specifier|protected
specifier|abstract
name|ContentRepository
name|createRepository
parameter_list|()
function_decl|;
specifier|protected
specifier|static
name|ContentRepository
name|createEmptyRepository
parameter_list|()
block|{
return|return
operator|new
name|Oak
argument_list|()
operator|.
name|with
argument_list|(
operator|new
name|OpenSecurityProvider
argument_list|()
argument_list|)
operator|.
name|createContentRepository
argument_list|()
return|;
block|}
specifier|protected
name|ContentRepository
name|getContentRepository
parameter_list|()
block|{
return|return
name|contentRepository
return|;
block|}
specifier|protected
name|ContentSession
name|createAdminSession
parameter_list|()
throws|throws
name|LoginException
throws|,
name|NoSuchWorkspaceException
block|{
return|return
name|getContentRepository
argument_list|()
operator|.
name|login
argument_list|(
name|getAdminCredentials
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|Credentials
name|getAdminCredentials
parameter_list|()
block|{
comment|// TODO retrieve from config
return|return
operator|new
name|SimpleCredentials
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
operator|.
name|toCharArray
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|MicroKernelTracker
name|createDefaultKernelTracker
parameter_list|()
block|{
name|List
argument_list|<
name|MicroKernelTracker
argument_list|>
name|hooks
init|=
operator|new
name|ArrayList
argument_list|<
name|MicroKernelTracker
argument_list|>
argument_list|()
decl_stmt|;
name|hooks
operator|.
name|add
argument_list|(
operator|new
name|InitialContent
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|CompositeMicroKernelTracker
argument_list|(
name|hooks
argument_list|)
return|;
block|}
block|}
end_class

end_unit

