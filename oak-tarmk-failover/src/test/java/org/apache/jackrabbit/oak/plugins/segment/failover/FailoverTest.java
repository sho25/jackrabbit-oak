begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|failover
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|io
operator|.
name|File
operator|.
name|createTempFile
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|SegmentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|failover
operator|.
name|client
operator|.
name|FailoverClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|failover
operator|.
name|server
operator|.
name|FailoverServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EmptyHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|FailoverTest
block|{
specifier|private
name|int
name|port
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"failover.server.port"
argument_list|,
literal|"52808"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|File
name|directoryS
decl_stmt|;
specifier|private
name|FileStore
name|storeS
decl_stmt|;
specifier|private
name|File
name|directoryC
decl_stmt|;
specifier|private
name|FileStore
name|storeC
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|target
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
decl_stmt|;
comment|// server
name|directoryS
operator|=
name|createTempFile
argument_list|(
literal|"FailoverServerTest"
argument_list|,
literal|"dir"
argument_list|,
name|target
argument_list|)
expr_stmt|;
name|directoryS
operator|.
name|delete
argument_list|()
expr_stmt|;
name|directoryS
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|storeS
operator|=
operator|new
name|FileStore
argument_list|(
name|directoryS
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// client
name|directoryC
operator|=
name|createTempFile
argument_list|(
literal|"FailoverClientTest"
argument_list|,
literal|"dir"
argument_list|,
name|target
argument_list|)
expr_stmt|;
name|directoryC
operator|.
name|delete
argument_list|()
expr_stmt|;
name|directoryC
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|storeC
operator|=
operator|new
name|FileStore
argument_list|(
name|directoryC
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
block|{
name|storeS
operator|.
name|close
argument_list|()
expr_stmt|;
name|storeC
operator|.
name|close
argument_list|()
expr_stmt|;
try|try
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|directoryS
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|directoryC
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{         }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFailover
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeStore
name|store
init|=
operator|new
name|SegmentNodeStore
argument_list|(
name|storeS
argument_list|)
decl_stmt|;
specifier|final
name|FailoverServer
name|server
init|=
operator|new
name|FailoverServer
argument_list|(
name|port
argument_list|,
name|storeS
argument_list|)
decl_stmt|;
name|Thread
name|s
init|=
operator|new
name|Thread
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
name|addTestContent
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|FailoverClient
name|cl
init|=
operator|new
name|FailoverClient
argument_list|(
literal|"127.0.0.1"
argument_list|,
name|port
argument_list|,
name|storeC
argument_list|)
decl_stmt|;
name|cl
operator|.
name|run
argument_list|()
expr_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
name|storeS
operator|.
name|getHead
argument_list|()
argument_list|,
name|storeC
operator|.
name|getHead
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|server
operator|.
name|close
argument_list|()
expr_stmt|;
name|cl
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|addTestContent
parameter_list|(
name|NodeStore
name|store
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|NodeBuilder
name|builder
init|=
name|store
operator|.
name|getRoot
argument_list|()
operator|.
name|builder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|child
argument_list|(
literal|"server"
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"ts"
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|store
operator|.
name|merge
argument_list|(
name|builder
argument_list|,
name|EmptyHook
operator|.
name|INSTANCE
argument_list|,
name|CommitInfo
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
block|}
specifier|static
name|void
name|assertEqualStores
parameter_list|(
name|File
name|d1
parameter_list|,
name|File
name|d2
parameter_list|)
throws|throws
name|IOException
block|{
name|FileStore
name|f1
init|=
operator|new
name|FileStore
argument_list|(
name|d1
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|FileStore
name|f2
init|=
operator|new
name|FileStore
argument_list|(
name|d2
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
name|f1
operator|.
name|getHead
argument_list|()
argument_list|,
name|f2
operator|.
name|getHead
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|f1
operator|.
name|close
argument_list|()
expr_stmt|;
name|f2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|d
init|=
name|createTempFile
argument_list|(
literal|"FailoverLiveTest"
argument_list|,
literal|"dir"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
name|d
operator|.
name|delete
argument_list|()
expr_stmt|;
name|d
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|FileStore
name|s
init|=
operator|new
name|FileStore
argument_list|(
name|d
argument_list|,
literal|256
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|FailoverClient
name|cl
init|=
operator|new
name|FailoverClient
argument_list|(
literal|"127.0.0.1"
argument_list|,
literal|8023
argument_list|,
name|s
argument_list|)
decl_stmt|;
try|try
block|{
name|cl
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
name|cl
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

