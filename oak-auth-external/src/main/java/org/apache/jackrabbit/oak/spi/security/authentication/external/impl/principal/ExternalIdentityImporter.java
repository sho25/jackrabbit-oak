begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|principal
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|PropertyDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NamePathMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|impl
operator|.
name|ExternalIdentityConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|SystemPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|PropInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ProtectedPropertyImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ReferenceChangeTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Implementation of the {@link ProtectedPropertyImporter} interface to properly  * handle reserved system maintained properties defined by this module.  *  * @since Oak 1.5.3  */
end_comment

begin_class
class|class
name|ExternalIdentityImporter
implements|implements
name|ProtectedPropertyImporter
implements|,
name|ExternalIdentityConstants
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ExternalIdentityImporter
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|boolean
name|isSystemSession
decl_stmt|;
comment|//----------------------------------------------< ProtectedItemImporter>---
annotation|@
name|Override
specifier|public
name|boolean
name|init
parameter_list|(
annotation|@
name|NotNull
name|Session
name|session
parameter_list|,
annotation|@
name|NotNull
name|Root
name|root
parameter_list|,
annotation|@
name|NotNull
name|NamePathMapper
name|namePathMapper
parameter_list|,
name|boolean
name|isWorkspaceImport
parameter_list|,
name|int
name|uuidBehavior
parameter_list|,
annotation|@
name|NotNull
name|ReferenceChangeTracker
name|referenceTracker
parameter_list|,
annotation|@
name|NotNull
name|SecurityProvider
name|securityProvider
parameter_list|)
block|{
name|isSystemSession
operator|=
name|root
operator|.
name|getContentSession
argument_list|()
operator|.
name|getAuthInfo
argument_list|()
operator|.
name|getPrincipals
argument_list|()
operator|.
name|contains
argument_list|(
name|SystemPrincipal
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|processReferences
parameter_list|()
block|{
comment|// nothing to
block|}
comment|//------------------------------------------< ProtectedPropertyImporter>---
comment|/**      * Due to the fact that the reserved external-identity properties are      * not protected from a JCR (item definition) point of view, the handling      * of the system maintained properties needs to be postpone to the {@link #propertiesCompleted} call.      *      * @param parent The affected parent node.      * @param protectedPropInfo The {@code PropInfo} to be imported.      * @param def The property definition determined by the importer that      * calls this method.      * @return Always returns false.      */
annotation|@
name|Override
specifier|public
name|boolean
name|handlePropInfo
parameter_list|(
annotation|@
name|NotNull
name|Tree
name|parent
parameter_list|,
annotation|@
name|NotNull
name|PropInfo
name|protectedPropInfo
parameter_list|,
annotation|@
name|NotNull
name|PropertyDefinition
name|def
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
comment|/**      * Prevent 'rep:externalPrincipalNames' properties from being imported with a      * non-system session.      * Note: in order to make sure those properties are synchronized again upon      * the next login, 'rep:lastSynced' property gets removed as well.      *      * @param protectedParent The protected parent tree.      */
annotation|@
name|Override
specifier|public
name|void
name|propertiesCompleted
parameter_list|(
annotation|@
name|NotNull
name|Tree
name|protectedParent
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isSystemSession
condition|)
block|{
if|if
condition|(
name|protectedParent
operator|.
name|hasProperty
argument_list|(
name|REP_EXTERNAL_PRINCIPAL_NAMES
argument_list|)
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Found reserved property {} managed by the system => Removed from imported scope."
argument_list|,
name|REP_EXTERNAL_PRINCIPAL_NAMES
argument_list|)
expr_stmt|;
name|protectedParent
operator|.
name|removeProperty
argument_list|(
name|REP_EXTERNAL_PRINCIPAL_NAMES
argument_list|)
expr_stmt|;
comment|// force creation of rep:externalPrincipalNames by removing the
comment|// rep:lastSynced property as well.
name|protectedParent
operator|.
name|removeProperty
argument_list|(
name|REP_LAST_SYNCED
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

