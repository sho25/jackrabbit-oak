begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|basic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|ExternalIdentityRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
operator|.
name|SyncResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultSyncResultImplTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testGetIdentityFromNull
parameter_list|()
block|{
name|SyncResult
name|res
init|=
operator|new
name|DefaultSyncResultImpl
argument_list|(
literal|null
argument_list|,
name|SyncResult
operator|.
name|Status
operator|.
name|NOP
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|res
operator|.
name|getIdentity
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetIdentity
parameter_list|()
block|{
name|List
argument_list|<
name|DefaultSyncedIdentity
argument_list|>
name|l
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|l
operator|.
name|add
argument_list|(
operator|new
name|DefaultSyncedIdentity
argument_list|(
literal|"id"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|.
name|add
argument_list|(
operator|new
name|DefaultSyncedIdentity
argument_list|(
literal|"id"
argument_list|,
operator|new
name|ExternalIdentityRef
argument_list|(
literal|"id"
argument_list|,
literal|"idp"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|DefaultSyncedIdentity
name|si
range|:
name|l
control|)
block|{
name|assertEquals
argument_list|(
name|si
argument_list|,
operator|new
name|DefaultSyncResultImpl
argument_list|(
name|si
argument_list|,
name|SyncResult
operator|.
name|Status
operator|.
name|NOP
argument_list|)
operator|.
name|getIdentity
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetStatus
parameter_list|()
block|{
for|for
control|(
name|SyncResult
operator|.
name|Status
name|s
range|:
name|SyncResult
operator|.
name|Status
operator|.
name|values
argument_list|()
control|)
block|{
name|assertSame
argument_list|(
name|s
argument_list|,
operator|new
name|DefaultSyncResultImpl
argument_list|(
literal|null
argument_list|,
name|s
argument_list|)
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetStatus
parameter_list|()
block|{
name|DefaultSyncResultImpl
name|res
init|=
operator|new
name|DefaultSyncResultImpl
argument_list|(
literal|null
argument_list|,
name|SyncResult
operator|.
name|Status
operator|.
name|NOP
argument_list|)
decl_stmt|;
for|for
control|(
name|SyncResult
operator|.
name|Status
name|s
range|:
name|SyncResult
operator|.
name|Status
operator|.
name|values
argument_list|()
control|)
block|{
name|res
operator|.
name|setStatus
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|s
argument_list|,
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

