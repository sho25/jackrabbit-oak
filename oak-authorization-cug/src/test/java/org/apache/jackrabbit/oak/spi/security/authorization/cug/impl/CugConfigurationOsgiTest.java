begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|cug
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|composite
operator|.
name|MountInfoProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|impl
operator|.
name|RootProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|impl
operator|.
name|TreeProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|EmptyPermissionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|PermissionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|AdminPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|SystemPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|SystemUserPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|ReferenceViolationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|junit
operator|.
name|OsgiContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|CugConfigurationOsgiTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|EXCLUDED_PRINCIPAL_NAME
init|=
literal|"excludedPrincipal"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ANY_PRINCIPAL_NAME
init|=
literal|"anyPrincipal"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|PROPERTIES
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|CugConstants
operator|.
name|PARAM_CUG_ENABLED
argument_list|,
literal|true
argument_list|,
name|CugConstants
operator|.
name|PARAM_CUG_SUPPORTED_PATHS
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"/"
block|}
argument_list|)
decl_stmt|;
annotation|@
name|Rule
specifier|public
specifier|final
name|OsgiContext
name|context
init|=
operator|new
name|OsgiContext
argument_list|()
decl_stmt|;
specifier|private
name|CugConfiguration
name|cugConfiguration
decl_stmt|;
specifier|private
name|CugExcludeImpl
name|cugExclude
decl_stmt|;
specifier|private
name|String
name|wspName
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|wspName
operator|=
name|root
operator|.
name|getContentSession
argument_list|()
operator|.
name|getWorkspaceName
argument_list|()
expr_stmt|;
name|cugConfiguration
operator|=
operator|new
name|CugConfiguration
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|cugConfiguration
operator|.
name|setRootProvider
argument_list|(
operator|new
name|RootProviderService
argument_list|()
argument_list|)
expr_stmt|;
name|cugConfiguration
operator|.
name|setTreeProvider
argument_list|(
operator|new
name|TreeProviderService
argument_list|()
argument_list|)
expr_stmt|;
name|cugExclude
operator|=
operator|new
name|CugExcludeImpl
argument_list|()
expr_stmt|;
name|MountInfoProviderService
name|mip
init|=
operator|new
name|MountInfoProviderService
argument_list|()
decl_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|mip
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ReferenceViolationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingCugExclude
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugConfiguration
argument_list|,
name|PROPERTIES
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCugExcludeExcludedDefault
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugExclude
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugConfiguration
argument_list|,
name|PROPERTIES
argument_list|)
expr_stmt|;
comment|// default exclusion
name|AdminPrincipal
name|admin
init|=
parameter_list|()
lambda|->
literal|"name"
decl_stmt|;
name|SystemUserPrincipal
name|suPrincipal
init|=
parameter_list|()
lambda|->
literal|"name"
decl_stmt|;
name|AuthorizationConfiguration
name|config
init|=
name|context
operator|.
name|getService
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|Principal
name|p
range|:
operator|new
name|Principal
index|[]
block|{
name|SystemPrincipal
operator|.
name|INSTANCE
block|,
name|admin
block|,
name|suPrincipal
block|}
control|)
block|{
name|PermissionProvider
name|permissionProvider
init|=
name|config
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|wspName
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|p
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|EmptyPermissionProvider
operator|.
name|getInstance
argument_list|()
argument_list|,
name|permissionProvider
argument_list|)
expr_stmt|;
block|}
comment|// however, other principals must not be excluded
name|PermissionProvider
name|permissionProvider
init|=
name|config
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|wspName
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
name|EXCLUDED_PRINCIPAL_NAME
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|permissionProvider
operator|instanceof
name|CugPermissionProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCugExcludeExcludedPrincipal
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugExclude
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"principalNames"
argument_list|,
operator|new
name|String
index|[]
block|{
name|EXCLUDED_PRINCIPAL_NAME
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugConfiguration
argument_list|,
name|PROPERTIES
argument_list|)
expr_stmt|;
name|AuthorizationConfiguration
name|config
init|=
name|context
operator|.
name|getService
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|PermissionProvider
name|permissionProvider
init|=
name|config
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|wspName
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
name|EXCLUDED_PRINCIPAL_NAME
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|EmptyPermissionProvider
operator|.
name|getInstance
argument_list|()
argument_list|,
name|permissionProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCugExcludeAnyPrincipal
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugExclude
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"principalNames"
argument_list|,
operator|new
name|String
index|[]
block|{
name|EXCLUDED_PRINCIPAL_NAME
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugConfiguration
argument_list|,
name|PROPERTIES
argument_list|)
expr_stmt|;
name|AuthorizationConfiguration
name|config
init|=
name|context
operator|.
name|getService
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|PermissionProvider
name|permissionProvider
init|=
name|config
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|wspName
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
name|ANY_PRINCIPAL_NAME
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|permissionProvider
operator|instanceof
name|CugPermissionProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotEnabled
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugExclude
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"principalNames"
argument_list|,
operator|new
name|String
index|[]
block|{
name|ANY_PRINCIPAL_NAME
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugConfiguration
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|CugConstants
operator|.
name|PARAM_CUG_ENABLED
argument_list|,
literal|false
argument_list|,
name|CugConstants
operator|.
name|PARAM_CUG_SUPPORTED_PATHS
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"/"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|AuthorizationConfiguration
name|config
init|=
name|context
operator|.
name|getService
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|PermissionProvider
name|permissionProvider
init|=
name|config
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|wspName
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
name|ANY_PRINCIPAL_NAME
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|EmptyPermissionProvider
operator|.
name|getInstance
argument_list|()
argument_list|,
name|permissionProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoSupportedPaths
parameter_list|()
block|{
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugExclude
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"principalNames"
argument_list|,
operator|new
name|String
index|[]
block|{
name|ANY_PRINCIPAL_NAME
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerInjectActivateService
argument_list|(
name|cugConfiguration
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|CugConstants
operator|.
name|PARAM_CUG_ENABLED
argument_list|,
literal|true
argument_list|,
name|CugConstants
operator|.
name|PARAM_CUG_SUPPORTED_PATHS
argument_list|,
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|AuthorizationConfiguration
name|config
init|=
name|context
operator|.
name|getService
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|PermissionProvider
name|permissionProvider
init|=
name|config
operator|.
name|getPermissionProvider
argument_list|(
name|root
argument_list|,
name|wspName
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
name|ANY_PRINCIPAL_NAME
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|EmptyPermissionProvider
operator|.
name|getInstance
argument_list|()
argument_list|,
name|permissionProvider
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

