begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|datastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|data
operator|.
name|DataStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStoreInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|DataStoreBlobStoreTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testInlineBinary
parameter_list|()
throws|throws
name|DataStoreException
throws|,
name|IOException
block|{
name|int
name|maxInlineSize
init|=
literal|300
decl_stmt|;
name|DataStore
name|mockedDS
init|=
name|mock
argument_list|(
name|DataStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockedDS
operator|.
name|getMinRecordLength
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|maxInlineSize
argument_list|)
expr_stmt|;
name|DataStoreBlobStore
name|ds
init|=
operator|new
name|DataStoreBlobStore
argument_list|(
name|mockedDS
argument_list|)
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
name|maxInlineSize
index|]
decl_stmt|;
operator|new
name|Random
argument_list|()
operator|.
name|nextBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|DataRecord
name|dr
init|=
name|ds
operator|.
name|addRecord
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|InMemoryDataRecord
operator|.
name|isInstance
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|IOUtils
operator|.
name|contentEquals
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|,
name|dr
operator|.
name|getStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|IOUtils
operator|.
name|contentEquals
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|,
operator|new
name|BlobStoreInputStream
argument_list|(
name|ds
argument_list|,
name|dr
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dr
argument_list|,
name|ds
operator|.
name|getRecordIfStored
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dr
argument_list|,
name|ds
operator|.
name|getRecord
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//Check for BlobStore methods
name|assertEquals
argument_list|(
name|maxInlineSize
argument_list|,
name|ds
operator|.
name|getBlobLength
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|ds
operator|.
name|writeBlob
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExternalBinary
parameter_list|()
throws|throws
name|DataStoreException
throws|,
name|IOException
block|{
name|int
name|maxInlineSize
init|=
literal|300
decl_stmt|;
name|int
name|actualSize
init|=
name|maxInlineSize
operator|+
literal|10
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
name|actualSize
index|]
decl_stmt|;
operator|new
name|Random
argument_list|()
operator|.
name|nextBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|DataIdentifier
name|testDI
init|=
operator|new
name|DataIdentifier
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|DataRecord
name|testDR
init|=
operator|new
name|ByteArrayDataRecord
argument_list|(
name|data
argument_list|,
name|testDI
argument_list|,
literal|"testReference"
argument_list|)
decl_stmt|;
name|DataStore
name|mockedDS
init|=
name|mock
argument_list|(
name|DataStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockedDS
operator|.
name|getMinRecordLength
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|maxInlineSize
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedDS
operator|.
name|getRecord
argument_list|(
name|testDI
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|testDR
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedDS
operator|.
name|getRecordIfStored
argument_list|(
name|testDI
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|testDR
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedDS
operator|.
name|addRecord
argument_list|(
name|any
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|testDR
argument_list|)
expr_stmt|;
name|DataStoreBlobStore
name|ds
init|=
operator|new
name|DataStoreBlobStore
argument_list|(
name|mockedDS
argument_list|)
decl_stmt|;
name|DataRecord
name|dr
init|=
name|ds
operator|.
name|addRecord
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|InMemoryDataRecord
operator|.
name|isInstance
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testDI
argument_list|,
name|dr
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|IOUtils
operator|.
name|contentEquals
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|,
name|dr
operator|.
name|getStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|IOUtils
operator|.
name|contentEquals
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|,
operator|new
name|BlobStoreInputStream
argument_list|(
name|ds
argument_list|,
name|dr
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dr
argument_list|,
name|ds
operator|.
name|getRecordIfStored
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dr
argument_list|,
name|ds
operator|.
name|getRecord
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|actualSize
argument_list|,
name|ds
operator|.
name|getBlobLength
argument_list|(
name|dr
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testDI
operator|.
name|toString
argument_list|()
argument_list|,
name|ds
operator|.
name|writeBlob
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReference
parameter_list|()
throws|throws
name|DataStoreException
throws|,
name|IOException
block|{
name|String
name|reference
init|=
literal|"testReference"
decl_stmt|;
name|String
name|blobId
init|=
literal|"test"
decl_stmt|;
name|DataIdentifier
name|testDI
init|=
operator|new
name|DataIdentifier
argument_list|(
name|blobId
argument_list|)
decl_stmt|;
name|DataRecord
name|testDR
init|=
operator|new
name|ByteArrayDataRecord
argument_list|(
literal|"foo"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|testDI
argument_list|,
name|reference
argument_list|)
decl_stmt|;
name|DataStore
name|mockedDS
init|=
name|mock
argument_list|(
name|DataStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockedDS
operator|.
name|getRecordFromReference
argument_list|(
name|reference
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|testDR
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedDS
operator|.
name|getRecord
argument_list|(
name|testDI
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|testDR
argument_list|)
expr_stmt|;
name|DataStoreBlobStore
name|ds
init|=
operator|new
name|DataStoreBlobStore
argument_list|(
name|mockedDS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|reference
argument_list|,
name|ds
operator|.
name|getReference
argument_list|(
name|blobId
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|blobId
argument_list|,
name|ds
operator|.
name|getBlobId
argument_list|(
name|reference
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|inMemBlobId
init|=
name|InMemoryDataRecord
operator|.
name|getInstance
argument_list|(
literal|"foo"
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|.
name|getIdentifier
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|//For in memory record the reference should be null
name|assertNull
argument_list|(
name|ds
operator|.
name|getReference
argument_list|(
name|inMemBlobId
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|ByteArrayDataRecord
implements|implements
name|DataRecord
block|{
specifier|private
specifier|final
name|byte
index|[]
name|data
decl_stmt|;
specifier|private
specifier|final
name|DataIdentifier
name|identifier
decl_stmt|;
specifier|private
specifier|final
name|String
name|reference
decl_stmt|;
specifier|private
name|ByteArrayDataRecord
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|DataIdentifier
name|di
parameter_list|,
name|String
name|reference
parameter_list|)
block|{
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|identifier
operator|=
name|di
expr_stmt|;
name|this
operator|.
name|reference
operator|=
name|reference
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|DataIdentifier
name|getIdentifier
parameter_list|()
block|{
return|return
name|identifier
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReference
parameter_list|()
block|{
return|return
name|reference
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLength
parameter_list|()
throws|throws
name|DataStoreException
block|{
return|return
name|data
operator|.
name|length
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getStream
parameter_list|()
throws|throws
name|DataStoreException
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLastModified
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
end_class

end_unit

