begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|Privilege
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|jackrabbit
operator|.
name|authorization
operator|.
name|AccessControlUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|test
operator|.
name|api
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_comment
comment|/**  * Testing group import with default {@link org.apache.jackrabbit.oak.spi.xml.ImportBehavior}  */
end_comment

begin_class
specifier|public
class|class
name|GroupImportWithoutAdminTest
extends|extends
name|GroupImportTest
block|{
specifier|private
name|String
name|uid
init|=
literal|"testUser"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
specifier|private
name|Session
name|testSession
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|User
name|u
init|=
name|userMgr
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|"pw"
argument_list|)
decl_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|AccessControlUtils
operator|.
name|addAccessControlEntry
argument_list|(
name|adminSession
argument_list|,
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|getTargetPath
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|,
name|u
operator|.
name|getPrincipal
argument_list|()
argument_list|,
operator|new
name|String
index|[]
block|{
name|Privilege
operator|.
name|JCR_ALL
block|}
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|AccessControlUtils
operator|.
name|addAccessControlEntry
argument_list|(
name|adminSession
argument_list|,
literal|null
argument_list|,
name|u
operator|.
name|getPrincipal
argument_list|()
argument_list|,
operator|new
name|String
index|[]
block|{
name|PrivilegeConstants
operator|.
name|JCR_NAMESPACE_MANAGEMENT
block|}
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
name|testSession
operator|=
name|adminSession
operator|.
name|getRepository
argument_list|()
operator|.
name|login
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
name|uid
argument_list|,
literal|"pw"
operator|.
name|toCharArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|testSession
operator|.
name|logout
argument_list|()
expr_stmt|;
name|Authorizable
name|testUser
init|=
name|userMgr
operator|.
name|getAuthorizable
argument_list|(
name|uid
argument_list|)
decl_stmt|;
name|testUser
operator|.
name|remove
argument_list|()
expr_stmt|;
name|adminSession
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|Session
name|getImportSession
parameter_list|()
block|{
return|return
name|testSession
return|;
block|}
block|}
end_class

end_unit

