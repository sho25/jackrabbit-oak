begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
operator|.
name|whiteboard
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|AuthorizableNodeName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AbstractAuthorizableAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AuthorizableAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
operator|.
name|AuthorizableActionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|DefaultWhiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|whiteboard
operator|.
name|Whiteboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|WhiteboardAuthorizableActionProviderTest
block|{
specifier|private
specifier|final
name|Whiteboard
name|whiteboard
init|=
operator|new
name|DefaultWhiteboard
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|WhiteboardAuthorizableActionProvider
name|actionProvider
init|=
operator|new
name|WhiteboardAuthorizableActionProvider
argument_list|()
decl_stmt|;
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
block|{
name|actionProvider
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefault
parameter_list|()
block|{
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|Mockito
operator|.
name|mock
argument_list|(
name|SecurityProvider
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actions
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStarted
parameter_list|()
block|{
name|actionProvider
operator|.
name|start
argument_list|(
name|whiteboard
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|Mockito
operator|.
name|mock
argument_list|(
name|SecurityProvider
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actions
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegisteredImplementation
parameter_list|()
block|{
name|actionProvider
operator|.
name|start
argument_list|(
name|whiteboard
argument_list|)
expr_stmt|;
name|AuthorizableActionProvider
name|registered
init|=
operator|new
name|AuthorizableActionProvider
argument_list|()
block|{
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|getAuthorizableActions
parameter_list|(
annotation|@
name|Nonnull
name|SecurityProvider
name|securityProvider
parameter_list|)
block|{
return|return
name|ImmutableList
operator|.
name|of
argument_list|(
operator|new
name|TestAction
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|whiteboard
operator|.
name|register
argument_list|(
name|AuthorizableActionProvider
operator|.
name|class
argument_list|,
name|registered
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|AuthorizableAction
argument_list|>
name|actions
init|=
name|actionProvider
operator|.
name|getAuthorizableActions
argument_list|(
name|Mockito
operator|.
name|mock
argument_list|(
name|SecurityProvider
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actions
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|actions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|TestAction
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
class|class
name|TestAction
extends|extends
name|AbstractAuthorizableAction
block|{}
block|}
end_class

end_unit

