begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AutoDetectParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|WriteOutContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|PaxExam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|options
operator|.
name|DefaultCompositeOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|spi
operator|.
name|reactors
operator|.
name|ExamReactorStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|spi
operator|.
name|reactors
operator|.
name|PerClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|stream
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|*
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|PaxExam
operator|.
name|class
argument_list|)
annotation|@
name|ExamReactorStrategy
argument_list|(
name|PerClass
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TikaExtractionOsgiIT
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TikaExtractionOsgiIT
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION_PROP_RESOURCE_NAME
init|=
literal|"versions.properties"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TIKA_VERSION
init|=
literal|"tika"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|POI_VERSION
init|=
literal|"poi"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COLLECTIONS4_VERSION
init|=
literal|"commons-collections4"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COMPRESS_VERSION
init|=
literal|"commons-compress"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LANG3_VERSION
init|=
literal|"commons-lang3"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MATH3_VERSION
init|=
literal|"commons-math3"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|VERSION_KEYS
init|=
operator|new
name|String
index|[]
block|{
name|TIKA_VERSION
block|,
name|POI_VERSION
block|,
name|COLLECTIONS4_VERSION
block|,
name|COMPRESS_VERSION
block|,
name|LANG3_VERSION
block|,
name|MATH3_VERSION
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EXPECTED_TEXT_FRAGMENT
init|=
literal|"A sample document"
decl_stmt|;
annotation|@
name|Configuration
specifier|public
name|Option
index|[]
name|configuration
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|CoreOptions
operator|.
name|options
argument_list|(
name|junitBundles
argument_list|()
argument_list|,
name|mavenBundle
argument_list|(
literal|"org.ops4j.pax.logging"
argument_list|,
literal|"pax-logging-api"
argument_list|,
literal|"1.7.2"
argument_list|)
argument_list|,
name|frameworkProperty
argument_list|(
literal|"repository.home"
argument_list|)
operator|.
name|value
argument_list|(
literal|"target"
argument_list|)
argument_list|,
name|setupTikaAndPoi
argument_list|()
argument_list|,
name|jpmsOptions
argument_list|()
comment|// to debug a test, un-comment this and "run" the test which would block due to suspend="y"
comment|// then run debugger on a remote app with specified port
comment|//                , vmOption( "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005" )
argument_list|)
return|;
block|}
specifier|private
name|Option
name|jpmsOptions
parameter_list|()
block|{
name|DefaultCompositeOption
name|composite
init|=
operator|new
name|DefaultCompositeOption
argument_list|()
decl_stmt|;
if|if
condition|(
name|Version
operator|.
name|parseVersion
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.specification.version"
argument_list|)
argument_list|)
operator|.
name|getMajor
argument_list|()
operator|>
literal|1
condition|)
block|{
if|if
condition|(
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
operator|.
name|exists
argument_list|(
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|FileSystems
operator|.
name|getFileSystem
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"jrt:/"
argument_list|)
argument_list|)
operator|.
name|getPath
argument_list|(
literal|"modules"
argument_list|,
literal|"java.se.ee"
argument_list|)
argument_list|)
condition|)
block|{
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-modules=java.se.ee"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.lang=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.lang.invoke=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.io=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.net=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.nio=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.util=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.util.jar=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.util.regex=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/java.util.zip=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
name|composite
operator|.
name|add
argument_list|(
name|vmOption
argument_list|(
literal|"--add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|composite
return|;
block|}
specifier|private
name|Option
name|setupTikaAndPoi
parameter_list|()
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|versions
init|=
name|setupVersions
argument_list|()
decl_stmt|;
return|return
name|composite
argument_list|(
name|composite
argument_list|(
name|mavenBundle
argument_list|(
literal|"org.apache.tika"
argument_list|,
literal|"tika-core"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|TIKA_VERSION
argument_list|)
argument_list|)
argument_list|,
name|mavenBundle
argument_list|(
literal|"org.apache.tika"
argument_list|,
literal|"tika-parsers"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|TIKA_VERSION
argument_list|)
argument_list|)
comment|// poi dependency start
argument_list|,
name|wrappedBundle
argument_list|(
name|mavenBundle
argument_list|(
literal|"org.apache.poi"
argument_list|,
literal|"poi"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|POI_VERSION
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|wrappedBundle
argument_list|(
name|mavenBundle
argument_list|(
literal|"org.apache.poi"
argument_list|,
literal|"poi-scratchpad"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|POI_VERSION
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|wrappedBundle
argument_list|(
name|mavenBundle
argument_list|(
literal|"org.apache.poi"
argument_list|,
literal|"poi-ooxml"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|POI_VERSION
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|wrappedBundle
argument_list|(
name|mavenBundle
argument_list|(
literal|"org.apache.poi"
argument_list|,
literal|"poi-ooxml-schemas"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|POI_VERSION
argument_list|)
argument_list|)
argument_list|)
operator|.
name|instructions
argument_list|(
literal|"DynamicImport-Package=*"
argument_list|)
argument_list|,
name|wrappedBundle
argument_list|(
name|mavenBundle
argument_list|(
literal|"org.apache.poi"
argument_list|,
literal|"ooxml-security"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|,
name|wrappedBundle
argument_list|(
name|mavenBundle
argument_list|(
literal|"org.apache.xmlbeans"
argument_list|,
literal|"xmlbeans"
argument_list|,
literal|"3.1.0"
argument_list|)
argument_list|)
argument_list|,
name|wrappedBundle
argument_list|(
name|mavenBundle
argument_list|(
literal|"com.drewnoakes"
argument_list|,
literal|"metadata-extractor"
argument_list|,
literal|"2.6.2"
argument_list|)
argument_list|)
argument_list|,
name|mavenBundle
argument_list|(
literal|"org.apache.commons"
argument_list|,
literal|"commons-collections4"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|COLLECTIONS4_VERSION
argument_list|)
argument_list|)
argument_list|,
name|mavenBundle
argument_list|(
literal|"org.apache.commons"
argument_list|,
literal|"commons-compress"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|COMPRESS_VERSION
argument_list|)
argument_list|)
argument_list|,
name|mavenBundle
argument_list|(
literal|"org.apache.commons"
argument_list|,
literal|"commons-lang3"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|LANG3_VERSION
argument_list|)
argument_list|)
argument_list|,
name|mavenBundle
argument_list|(
literal|"org.apache.commons"
argument_list|,
literal|"commons-math3"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
name|MATH3_VERSION
argument_list|)
argument_list|)
comment|// poi dependency end
argument_list|)
argument_list|,
name|jarBundles
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|Option
name|jarBundles
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|String
index|[]
name|jarNames
init|=
operator|new
name|String
index|[]
block|{
literal|"commons-io.jar"
block|,
literal|"commons-codec.jar"
block|}
decl_stmt|;
name|File
name|jarDir
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"test-bundles"
argument_list|)
decl_stmt|;
name|DefaultCompositeOption
name|composite
init|=
operator|new
name|DefaultCompositeOption
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|jarFiles
init|=
name|stream
argument_list|(
name|jarNames
argument_list|)
operator|.
name|map
argument_list|(
name|jarName
lambda|->
operator|new
name|File
argument_list|(
name|jarDir
argument_list|,
name|jarName
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|File
name|jar
range|:
name|jarFiles
control|)
block|{
name|composite
operator|.
name|add
argument_list|(
name|bundle
argument_list|(
name|jar
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|composite
return|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|setupVersions
parameter_list|()
throws|throws
name|IOException
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|load
argument_list|(
name|TikaExtractionOsgiIT
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|VERSION_PROP_RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected number of properties found in "
operator|+
name|VERSION_PROP_RESOURCE_NAME
argument_list|,
name|VERSION_KEYS
operator|.
name|length
argument_list|,
name|props
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|versions
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|versionKey
range|:
name|VERSION_KEYS
control|)
block|{
name|String
name|version
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|versionKey
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Version value not found for "
operator|+
name|versionKey
argument_list|,
name|version
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Version (key: "
operator|+
name|versionKey
operator|+
literal|", value: "
operator|+
name|version
operator|+
literal|") didn't get filtered by maven"
argument_list|,
name|version
operator|.
name|contains
argument_list|(
literal|"{"
argument_list|)
argument_list|)
expr_stmt|;
name|versions
operator|.
name|put
argument_list|(
name|versionKey
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
return|return
name|versions
return|;
block|}
annotation|@
name|Inject
specifier|private
name|BundleContext
name|context
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|Parser
name|registeredParser
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|listBundles
parameter_list|()
block|{
for|for
control|(
name|Bundle
name|bundle
range|:
name|context
operator|.
name|getBundles
argument_list|()
control|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Bundle listing :: {} - {}"
argument_list|,
name|bundle
argument_list|,
name|bundle
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|doc
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFileContains
argument_list|(
literal|"test.doc"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|docx
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFileContains
argument_list|(
literal|"test.docx"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|rtf
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFileContains
argument_list|(
literal|"test.rtf"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|text
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFileContains
argument_list|(
literal|"test.txt"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertFileContains
parameter_list|(
name|String
name|resName
parameter_list|)
throws|throws
name|Exception
block|{
name|AutoDetectParser
name|parser
init|=
operator|new
name|AutoDetectParser
argument_list|(
name|registeredParser
argument_list|)
decl_stmt|;
name|ContentHandler
name|handler
init|=
operator|new
name|WriteOutContentHandler
argument_list|()
decl_stmt|;
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|InputStream
name|stream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Input stream must not be null"
argument_list|,
name|stream
argument_list|)
expr_stmt|;
try|try
block|{
name|parser
operator|.
name|parse
argument_list|(
name|stream
argument_list|,
name|handler
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|handler
operator|.
name|toString
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_TEXT_FRAGMENT
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

