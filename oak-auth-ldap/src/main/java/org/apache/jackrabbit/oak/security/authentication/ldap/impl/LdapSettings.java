begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|ldap
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|LdapSettings
block|{
comment|//TODO support autocreate.user.membership
comment|//TODO support autocreate.path
specifier|public
specifier|static
specifier|final
name|String
name|KEY_HOST
init|=
literal|"host"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_PORT
init|=
literal|"port"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_SECURE
init|=
literal|"secure"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AUTHDN
init|=
literal|"authDn"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AUTHPW
init|=
literal|"authPw"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_SEARCHTIMEOUT
init|=
literal|"searchTimeout"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_USERROOT
init|=
literal|"userRoot"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_USERFILTER
init|=
literal|"userFilter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_USERIDATTRIBUTE
init|=
literal|"userIdAttribute"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_GROUPROOT
init|=
literal|"groupRoot"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_GROUPFILTER
init|=
literal|"groupFilter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_GROUPMEMBERSHIPATTRIBUTE
init|=
literal|"groupMembershipAttribute"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_GROUPNAMEATTRIBUTE
init|=
literal|"groupNameAttribute"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AUTOCREATEPATH
init|=
literal|"autocreate.path"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AUTOCREATEUSER
init|=
literal|"autocreate.user."
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AUTOCREATEGROUP
init|=
literal|"autocreate.group."
decl_stmt|;
comment|//Connection settings
specifier|private
name|String
name|host
decl_stmt|;
specifier|private
name|int
name|port
init|=
literal|389
decl_stmt|;
specifier|private
name|boolean
name|secure
init|=
literal|false
decl_stmt|;
specifier|private
name|String
name|authDn
init|=
literal|""
decl_stmt|;
specifier|private
name|String
name|authPw
init|=
literal|""
decl_stmt|;
specifier|private
name|int
name|searchTimeout
init|=
literal|60000
decl_stmt|;
comment|//authentication settings
specifier|private
name|String
name|userRoot
init|=
literal|""
decl_stmt|;
specifier|private
name|String
name|userFilter
init|=
literal|"(objectclass=person)"
decl_stmt|;
specifier|private
name|String
name|userIdAttribute
init|=
literal|"uid"
decl_stmt|;
specifier|private
name|String
name|groupRoot
init|=
literal|""
decl_stmt|;
specifier|private
name|String
name|groupFilter
init|=
literal|"(objectclass=groupOfUniqueNames)"
decl_stmt|;
specifier|private
name|String
name|groupMembershipAttribute
init|=
literal|"uniquemember"
decl_stmt|;
specifier|private
name|String
name|groupNameAttribute
init|=
literal|"cn"
decl_stmt|;
comment|//synchronization
specifier|private
name|boolean
name|splitPath
init|=
literal|false
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|userAttributes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|groupAttributes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|LdapSettings
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|options
parameter_list|)
block|{
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_HOST
argument_list|)
condition|)
block|{
name|host
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_HOST
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_PORT
argument_list|)
condition|)
block|{
name|String
name|s
init|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_PORT
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
operator|&&
name|s
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|port
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_SECURE
argument_list|)
condition|)
block|{
name|String
name|s
init|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_SECURE
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
operator|&&
name|s
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|secure
operator|=
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_AUTHDN
argument_list|)
condition|)
block|{
name|authDn
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_AUTHDN
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_AUTHPW
argument_list|)
condition|)
block|{
name|authPw
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_AUTHPW
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_SEARCHTIMEOUT
argument_list|)
condition|)
block|{
name|String
name|s
init|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_SEARCHTIMEOUT
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
operator|&&
name|s
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|searchTimeout
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_USERROOT
argument_list|)
condition|)
block|{
name|userRoot
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_USERROOT
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_USERFILTER
argument_list|)
condition|)
block|{
name|userFilter
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_USERFILTER
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_USERIDATTRIBUTE
argument_list|)
condition|)
block|{
name|userIdAttribute
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_USERIDATTRIBUTE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_GROUPROOT
argument_list|)
condition|)
block|{
name|groupRoot
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_GROUPROOT
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_GROUPFILTER
argument_list|)
condition|)
block|{
name|groupFilter
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_GROUPFILTER
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_GROUPMEMBERSHIPATTRIBUTE
argument_list|)
condition|)
block|{
name|groupMembershipAttribute
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_GROUPMEMBERSHIPATTRIBUTE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_GROUPNAMEATTRIBUTE
argument_list|)
condition|)
block|{
name|groupNameAttribute
operator|=
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|KEY_GROUPNAMEATTRIBUTE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|options
operator|.
name|containsKey
argument_list|(
name|KEY_AUTOCREATEPATH
argument_list|)
condition|)
block|{
name|splitPath
operator|=
literal|"splitdn"
operator|.
name|equals
argument_list|(
name|options
operator|.
name|get
argument_list|(
name|KEY_AUTOCREATEPATH
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|key
range|:
name|options
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|KEY_AUTOCREATEUSER
argument_list|)
condition|)
block|{
name|userAttributes
operator|.
name|put
argument_list|(
name|key
operator|.
name|substring
argument_list|(
name|KEY_AUTOCREATEUSER
operator|.
name|length
argument_list|()
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|KEY_AUTOCREATEGROUP
argument_list|)
condition|)
block|{
name|groupAttributes
operator|.
name|put
argument_list|(
name|key
operator|.
name|substring
argument_list|(
name|KEY_AUTOCREATEGROUP
operator|.
name|length
argument_list|()
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|options
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
specifier|public
name|boolean
name|isSecure
parameter_list|()
block|{
return|return
name|secure
return|;
block|}
specifier|public
name|String
name|getAuthDn
parameter_list|()
block|{
return|return
name|authDn
return|;
block|}
specifier|public
name|String
name|getAuthPw
parameter_list|()
block|{
return|return
name|authPw
return|;
block|}
specifier|public
name|int
name|getSearchTimeout
parameter_list|()
block|{
return|return
name|searchTimeout
return|;
block|}
specifier|public
name|String
name|getUserRoot
parameter_list|()
block|{
return|return
name|userRoot
return|;
block|}
specifier|public
name|String
name|getUserFilter
parameter_list|()
block|{
return|return
name|userFilter
return|;
block|}
specifier|public
name|String
name|getUserIdAttribute
parameter_list|()
block|{
return|return
name|userIdAttribute
return|;
block|}
specifier|public
name|String
name|getGroupRoot
parameter_list|()
block|{
return|return
name|groupRoot
return|;
block|}
specifier|public
name|String
name|getGroupFilter
parameter_list|()
block|{
return|return
name|groupFilter
return|;
block|}
specifier|public
name|String
name|getGroupMembershipAttribute
parameter_list|()
block|{
return|return
name|groupMembershipAttribute
return|;
block|}
specifier|public
name|String
name|getGroupNameAttribute
parameter_list|()
block|{
return|return
name|groupNameAttribute
return|;
block|}
specifier|public
name|boolean
name|isSplitPath
parameter_list|()
block|{
return|return
name|splitPath
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getUserAttributes
parameter_list|()
block|{
return|return
name|userAttributes
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getGroupAttributes
parameter_list|()
block|{
return|return
name|groupAttributes
return|;
block|}
block|}
end_class

end_unit

