begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|Permissions
import|;
end_import

begin_comment
comment|/**  * Testing {@link Session#hasPermission(String,String)} and {@link JackrabbitSession#hasPermission(String, String...)}  */
end_comment

begin_class
specifier|public
class|class
name|HasPermissionTest
extends|extends
name|AbstractEvaluationTest
block|{
specifier|public
name|void
name|testEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|paths
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"/"
argument_list|,
name|path
argument_list|,
name|childPPath
argument_list|,
name|path
operator|+
literal|"/rep:policy"
argument_list|,
literal|"/nonExisting"
argument_list|,
name|path
operator|+
literal|"/nonExisting"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|p
range|:
name|paths
control|)
block|{
name|assertTrue
argument_list|(
name|testSession
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testSession
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
literal|",,"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
operator|new
name|String
index|[]
block|{
literal|""
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
operator|new
name|String
index|[]
block|{
literal|""
block|,
literal|""
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSingle
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Boolean
argument_list|>
name|map
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"/"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|childPPath
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|path
operator|+
literal|"/rep:policy"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"/nonExisting"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|path
operator|+
literal|"/nonExisting"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|p
range|:
name|map
operator|.
name|keySet
argument_list|()
control|)
block|{
name|boolean
name|expected
init|=
name|map
operator|.
name|get
argument_list|(
name|p
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|p
argument_list|,
name|expected
argument_list|,
name|testSession
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
argument_list|,
name|expected
argument_list|,
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
operator|new
name|String
index|[]
block|{
name|Session
operator|.
name|ACTION_READ
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testDuplicate
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Boolean
argument_list|>
name|map
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"/"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|childPPath
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|path
operator|+
literal|"/rep:policy"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"/nonExisting"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|path
operator|+
literal|"/nonExisting"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|p
range|:
name|map
operator|.
name|keySet
argument_list|()
control|)
block|{
name|boolean
name|expected
init|=
name|map
operator|.
name|get
argument_list|(
name|p
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|p
argument_list|,
name|expected
argument_list|,
name|testSession
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
operator|+
literal|","
operator|+
name|Permissions
operator|.
name|getString
argument_list|(
name|Permissions
operator|.
name|READ
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
argument_list|,
name|expected
argument_list|,
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
operator|new
name|String
index|[]
block|{
name|Session
operator|.
name|ACTION_READ
block|,
name|Session
operator|.
name|ACTION_READ
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
argument_list|,
name|expected
argument_list|,
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
argument_list|,
name|Session
operator|.
name|ACTION_READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
argument_list|,
name|expected
argument_list|,
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
operator|new
name|String
index|[]
block|{
name|Session
operator|.
name|ACTION_READ
block|,
name|Permissions
operator|.
name|PERMISSION_NAMES
operator|.
name|get
argument_list|(
name|Permissions
operator|.
name|READ
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
argument_list|,
name|expected
argument_list|,
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
argument_list|,
name|Permissions
operator|.
name|PERMISSION_NAMES
operator|.
name|get
argument_list|(
name|Permissions
operator|.
name|READ
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testMultiple
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|paths
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"/"
argument_list|,
name|path
argument_list|,
name|childPPath
argument_list|,
name|path
operator|+
literal|"/rep:policy"
argument_list|,
literal|"/nonExisting"
argument_list|,
name|path
operator|+
literal|"/nonExisting"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|p
range|:
name|paths
control|)
block|{
name|assertFalse
argument_list|(
name|testSession
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
operator|+
literal|","
operator|+
name|Session
operator|.
name|ACTION_SET_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|testSession
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
operator|+
literal|","
operator|+
name|Permissions
operator|.
name|getString
argument_list|(
name|Permissions
operator|.
name|ADD_PROPERTY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
argument_list|,
name|Session
operator|.
name|ACTION_SET_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
argument_list|,
name|JackrabbitSession
operator|.
name|ACTION_ADD_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|testSession
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
operator|+
literal|","
operator|+
name|JackrabbitSession
operator|.
name|ACTION_READ_ACCESS_CONTROL
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|JackrabbitSession
operator|)
name|testSession
operator|)
operator|.
name|hasPermission
argument_list|(
name|p
argument_list|,
name|Session
operator|.
name|ACTION_READ
argument_list|,
name|JackrabbitSession
operator|.
name|ACTION_READ_ACCESS_CONTROL
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

