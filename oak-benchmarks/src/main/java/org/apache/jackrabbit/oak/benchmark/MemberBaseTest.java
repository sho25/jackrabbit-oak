begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ObjectArrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|JcrCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakRepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|RepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|internal
operator|.
name|SecurityProviderBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ImportBehavior
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|xml
operator|.
name|ProtectedItemImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_comment
comment|/**  * Abstract test-base for the various membership related operations (isMember, isDeclaredMember, memberOf, declaredMemberOf)  * with the following characteristics an config options:  *  * - 'numberOfGroups' : number of groups, which each member will become member of  * - 'nested' : flag to enforce nesting of groups; in effect each group will then become member of the previous group  * - 'numberOfMembers' : number of users to be created and which will become member of all groups  *  * The test run randomly picks one group and one user and performs the  * member-operation as defined by the subclasses (see 'testMembership')  */
end_comment

begin_class
specifier|abstract
class|class
name|MemberBaseTest
extends|extends
name|AbstractTest
block|{
specifier|private
specifier|static
specifier|final
name|int
name|BATCH_SIZE
init|=
literal|100
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REL_TEST_PATH
init|=
literal|"testPath"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|USER
init|=
literal|"user"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP
init|=
literal|"group"
decl_stmt|;
specifier|private
specifier|final
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|int
name|numberOfGroups
decl_stmt|;
specifier|private
specifier|final
name|int
name|numberOfMembers
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|nested
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|groupPaths
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|memberPaths
decl_stmt|;
specifier|public
name|MemberBaseTest
parameter_list|(
name|int
name|numberOfGroups
parameter_list|,
name|boolean
name|nested
parameter_list|,
name|int
name|numberOfMembers
parameter_list|)
block|{
name|this
operator|.
name|numberOfGroups
operator|=
name|numberOfGroups
expr_stmt|;
name|this
operator|.
name|numberOfMembers
operator|=
name|numberOfMembers
expr_stmt|;
name|this
operator|.
name|nested
operator|=
name|nested
expr_stmt|;
name|groupPaths
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|numberOfGroups
argument_list|)
expr_stmt|;
name|memberPaths
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|numberOfMembers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|beforeSuite
argument_list|()
expr_stmt|;
name|Session
name|s
init|=
name|loginAdministrative
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|String
argument_list|>
name|memberIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|numberOfMembers
argument_list|)
decl_stmt|;
name|UserManager
name|userManager
init|=
operator|(
operator|(
name|JackrabbitSession
operator|)
name|s
operator|)
operator|.
name|getUserManager
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|numberOfMembers
condition|;
name|i
operator|++
control|)
block|{
name|User
name|u
init|=
name|userManager
operator|.
name|createUser
argument_list|(
name|USER
operator|+
name|i
argument_list|,
literal|null
argument_list|,
operator|new
name|PrincipalImpl
argument_list|(
name|USER
operator|+
name|i
argument_list|)
argument_list|,
name|REL_TEST_PATH
argument_list|)
decl_stmt|;
name|memberPaths
operator|.
name|add
argument_list|(
name|u
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|memberIds
operator|.
name|add
argument_list|(
name|USER
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|idArray
init|=
name|memberIds
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|memberIds
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|j
init|=
literal|1
init|;
name|i
operator|<=
name|numberOfGroups
condition|;
name|i
operator|++
operator|,
name|j
operator|++
control|)
block|{
name|Group
name|g
init|=
name|userManager
operator|.
name|createGroup
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
name|GROUP
operator|+
name|i
argument_list|)
argument_list|,
name|REL_TEST_PATH
argument_list|)
decl_stmt|;
name|groupPaths
operator|.
name|add
argument_list|(
name|g
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|nested
condition|)
block|{
name|g
operator|.
name|addMembers
argument_list|(
name|ObjectArrays
operator|.
name|concat
argument_list|(
name|idArray
argument_list|,
name|GROUP
operator|+
name|j
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|g
operator|.
name|addMembers
argument_list|(
name|idArray
argument_list|)
expr_stmt|;
block|}
block|}
block|}
finally|finally
block|{
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
name|s
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"setup done"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
name|loginAdministrative
argument_list|()
decl_stmt|;
try|try
block|{
name|Authorizable
name|authorizable
init|=
operator|(
operator|(
name|JackrabbitSession
operator|)
name|s
operator|)
operator|.
name|getUserManager
argument_list|()
operator|.
name|getAuthorizable
argument_list|(
name|GROUP
operator|+
literal|"0"
argument_list|)
decl_stmt|;
if|if
condition|(
name|authorizable
operator|!=
literal|null
condition|)
block|{
name|Node
name|n
init|=
name|s
operator|.
name|getNode
argument_list|(
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|n
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|authorizable
operator|=
operator|(
operator|(
name|JackrabbitSession
operator|)
name|s
operator|)
operator|.
name|getUserManager
argument_list|()
operator|.
name|getAuthorizable
argument_list|(
name|USER
operator|+
literal|"0"
argument_list|)
expr_stmt|;
if|if
condition|(
name|authorizable
operator|!=
literal|null
condition|)
block|{
name|Node
name|n
init|=
name|s
operator|.
name|getNode
argument_list|(
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|n
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|s
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|s
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|runTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|s
init|=
literal|null
decl_stmt|;
try|try
block|{
comment|// use system session login to avoid measuring the login-performance here
name|s
operator|=
name|systemLogin
argument_list|()
expr_stmt|;
name|UserManager
name|uMgr
init|=
operator|(
operator|(
name|JackrabbitSession
operator|)
name|s
operator|)
operator|.
name|getUserManager
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|testMembership
argument_list|(
operator|(
name|Group
operator|)
name|uMgr
operator|.
name|getAuthorizableByPath
argument_list|(
name|groupPaths
operator|.
name|get
argument_list|(
name|random
operator|.
name|nextInt
argument_list|(
name|numberOfGroups
argument_list|)
argument_list|)
argument_list|)
argument_list|,
operator|(
name|User
operator|)
name|uMgr
operator|.
name|getAuthorizableByPath
argument_list|(
name|memberPaths
operator|.
name|get
argument_list|(
name|random
operator|.
name|nextInt
argument_list|(
name|numberOfMembers
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|s
operator|.
name|logout
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|Repository
index|[]
name|createRepository
parameter_list|(
name|RepositoryFixture
name|fixture
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|fixture
operator|instanceof
name|OakRepositoryFixture
condition|)
block|{
return|return
operator|(
operator|(
name|OakRepositoryFixture
operator|)
name|fixture
operator|)
operator|.
name|setUpCluster
argument_list|(
literal|1
argument_list|,
operator|new
name|JcrCreator
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Jcr
name|customize
parameter_list|(
name|Oak
name|oak
parameter_list|)
block|{
name|ConfigurationParameters
name|conf
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|UserConfiguration
operator|.
name|NAME
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|ProtectedItemImporter
operator|.
name|PARAM_IMPORT_BEHAVIOR
argument_list|,
name|ImportBehavior
operator|.
name|NAME_BESTEFFORT
argument_list|)
argument_list|)
decl_stmt|;
name|SecurityProvider
name|sp
init|=
name|SecurityProviderBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|with
argument_list|(
name|conf
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
operator|new
name|Jcr
argument_list|(
name|oak
argument_list|)
operator|.
name|with
argument_list|(
name|sp
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|createRepository
argument_list|(
name|fixture
argument_list|)
return|;
block|}
block|}
specifier|protected
specifier|abstract
name|void
name|testMembership
parameter_list|(
annotation|@
name|NotNull
name|Group
name|g
parameter_list|,
annotation|@
name|NotNull
name|User
name|member
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
end_class

end_unit

