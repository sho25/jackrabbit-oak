begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|AuthInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|PrincipalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|AuthInfoImplTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|USER_ID
init|=
literal|"userId"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ATTRIBUTES
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"attr"
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Set
argument_list|<
name|Principal
argument_list|>
name|PRINCIPALS
init|=
name|ImmutableSet
operator|.
expr|<
name|Principal
operator|>
name|of
argument_list|(
operator|new
name|PrincipalImpl
argument_list|(
literal|"principalName"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|AuthInfoImpl
name|authInfo
init|=
operator|new
name|AuthInfoImpl
argument_list|(
name|USER_ID
argument_list|,
name|ATTRIBUTES
argument_list|,
name|PRINCIPALS
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testGetUserID
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|USER_ID
argument_list|,
name|authInfo
operator|.
name|getUserID
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAttributeNames
parameter_list|()
block|{
name|String
index|[]
name|attrNames
init|=
name|authInfo
operator|.
name|getAttributeNames
argument_list|()
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|ATTRIBUTES
operator|.
name|keySet
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|attrNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAttribute
parameter_list|()
block|{
for|for
control|(
name|String
name|attrName
range|:
name|ATTRIBUTES
operator|.
name|keySet
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|ATTRIBUTES
operator|.
name|get
argument_list|(
name|attrName
argument_list|)
argument_list|,
name|authInfo
operator|.
name|getAttribute
argument_list|(
name|attrName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPrincipals
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|PRINCIPALS
argument_list|,
name|authInfo
operator|.
name|getPrincipals
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToString
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|authInfo
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateFromSubjectWithAuthInfo
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|subject
operator|.
name|getPublicCredentials
argument_list|()
operator|.
name|add
argument_list|(
name|authInfo
argument_list|)
expr_stmt|;
name|AuthInfo
name|info
init|=
name|AuthInfoImpl
operator|.
name|createFromSubject
argument_list|(
name|subject
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|USER_ID
argument_list|,
name|info
operator|.
name|getUserID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PRINCIPALS
argument_list|,
name|info
operator|.
name|getPrincipals
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|authInfo
operator|.
name|getAttributeNames
argument_list|()
argument_list|,
name|info
operator|.
name|getAttributeNames
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateFromSubjectWithPrincipals
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|subject
operator|.
name|getPrincipals
argument_list|()
operator|.
name|addAll
argument_list|(
name|PRINCIPALS
argument_list|)
expr_stmt|;
name|AuthInfo
name|info
init|=
name|AuthInfoImpl
operator|.
name|createFromSubject
argument_list|(
name|subject
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|info
operator|.
name|getUserID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PRINCIPALS
argument_list|,
name|info
operator|.
name|getPrincipals
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|info
operator|.
name|getAttributeNames
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateFromSubjectWithSimpleCredentials
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|subject
operator|.
name|getPublicCredentials
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
name|USER_ID
argument_list|,
operator|new
name|char
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|AuthInfo
name|info
init|=
name|AuthInfoImpl
operator|.
name|createFromSubject
argument_list|(
name|subject
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|USER_ID
argument_list|,
name|info
operator|.
name|getUserID
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getPrincipals
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|info
operator|.
name|getAttributeNames
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateFromSubjectWithPrivateSimpleCredentials
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|subject
operator|.
name|getPrivateCredentials
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
name|USER_ID
argument_list|,
operator|new
name|char
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|AuthInfo
name|info
init|=
name|AuthInfoImpl
operator|.
name|createFromSubject
argument_list|(
name|subject
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|info
operator|.
name|getUserID
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getPrincipals
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|info
operator|.
name|getAttributeNames
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateFromSubjectWithAnyCredentials
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|subject
operator|.
name|getPublicCredentials
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Credentials
argument_list|()
block|{         }
argument_list|)
expr_stmt|;
name|AuthInfo
name|info
init|=
name|AuthInfoImpl
operator|.
name|createFromSubject
argument_list|(
name|subject
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|info
operator|.
name|getUserID
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getPrincipals
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|info
operator|.
name|getAttributeNames
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

