begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|external
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_comment
comment|/**  * SyncMode... TODO: define sync-modes  */
end_comment

begin_class
specifier|public
class|class
name|SyncMode
block|{
specifier|public
specifier|static
specifier|final
name|int
name|MODE_NO_SYNC
init|=
literal|0
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MODE_CREATE_USER
init|=
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MODE_CREATE_GROUPS
init|=
literal|2
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MODE_UPDATE
init|=
literal|4
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NO_SYNC
init|=
literal|""
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CREATE_USER
init|=
literal|"createUser"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CREATE_GROUP
init|=
literal|"createGroup"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|UPDATE
init|=
literal|"update"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|SyncMode
name|DEFAULT_SYNC
init|=
operator|new
name|SyncMode
argument_list|(
name|MODE_CREATE_USER
operator||
name|MODE_CREATE_GROUPS
operator||
name|MODE_UPDATE
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|int
name|mode
decl_stmt|;
specifier|private
name|SyncMode
parameter_list|(
name|int
name|mode
parameter_list|)
block|{
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
block|}
specifier|public
name|boolean
name|contains
parameter_list|(
name|int
name|mode
parameter_list|)
block|{
return|return
operator|(
name|this
operator|.
name|mode
operator|&
name|mode
operator|)
operator|==
name|mode
return|;
block|}
specifier|public
specifier|static
name|SyncMode
name|fromObject
parameter_list|(
name|Object
name|smValue
parameter_list|)
block|{
if|if
condition|(
name|smValue
operator|instanceof
name|SyncMode
condition|)
block|{
return|return
operator|(
name|SyncMode
operator|)
name|smValue
return|;
block|}
elseif|else
if|if
condition|(
name|smValue
operator|instanceof
name|String
index|[]
condition|)
block|{
return|return
name|fromStrings
argument_list|(
operator|(
name|String
index|[]
operator|)
name|smValue
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|fromStrings
argument_list|(
name|Text
operator|.
name|explode
argument_list|(
name|smValue
operator|.
name|toString
argument_list|()
argument_list|,
literal|','
argument_list|,
literal|false
argument_list|)
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|SyncMode
name|fromString
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|int
name|mode
decl_stmt|;
if|if
condition|(
name|CREATE_USER
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|mode
operator|=
name|MODE_CREATE_USER
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|CREATE_GROUP
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|mode
operator|=
name|MODE_CREATE_GROUPS
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|UPDATE
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|mode
operator|=
name|MODE_UPDATE
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|mode
operator|=
name|MODE_NO_SYNC
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"invalid sync mode name "
operator|+
name|name
argument_list|)
throw|;
block|}
return|return
name|fromInt
argument_list|(
name|mode
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SyncMode
name|fromStrings
parameter_list|(
name|String
modifier|...
name|names
parameter_list|)
block|{
name|int
name|mode
init|=
name|MODE_NO_SYNC
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|names
control|)
block|{
name|mode
operator||=
name|fromString
argument_list|(
name|name
operator|.
name|trim
argument_list|()
argument_list|)
operator|.
name|mode
expr_stmt|;
block|}
return|return
operator|new
name|SyncMode
argument_list|(
name|mode
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|SyncMode
name|fromInt
parameter_list|(
name|int
name|mode
parameter_list|)
block|{
if|if
condition|(
name|mode
operator|==
name|DEFAULT_SYNC
operator|.
name|mode
condition|)
block|{
return|return
name|DEFAULT_SYNC
return|;
block|}
if|if
condition|(
name|mode
argument_list|<
literal|0
operator|||
name|mode
argument_list|>
name|DEFAULT_SYNC
operator|.
name|mode
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"invalid sync mode: "
operator|+
name|mode
argument_list|)
throw|;
block|}
else|else
block|{
return|return
operator|new
name|SyncMode
argument_list|(
name|mode
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

