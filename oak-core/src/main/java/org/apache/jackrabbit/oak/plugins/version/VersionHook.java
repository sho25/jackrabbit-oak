begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|version
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Collections2
operator|.
name|transform
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
operator|.
name|newHashSet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CompositeHook
operator|.
name|compose
import|;
end_import

begin_comment
comment|/**  * This class gathers together editors related to handling version storage:  *<ol>  *<li>  *         {@link VersionEditorProvider}  *<ul>  *<li>  *                 {@link VersionEditor} - creates version history, handles  *                 checking-in, checking-out and restoring, prevents a  *                 checked-in node from being modified,  *</li>  *<li>  *                 {@link VersionStorageEditor} - validates changes on the  *                 version storage,  *</li>  *</ul>  *</li>  *<li>  *         {@link VersionableCollector} - collects all existing versionable  *         UUIDs, so assigned histories won't be removed in the next step,  *</li>  *<li>  *         {@link OrphanedVersionCleaner} - removes all histories that are  *         empty and have no longer a parent versionable node.  *</li>  *</ol>  *  */
end_comment

begin_class
annotation|@
name|Component
argument_list|(
name|service
operator|=
name|CommitHook
operator|.
name|class
argument_list|)
specifier|public
class|class
name|VersionHook
implements|implements
name|CommitHook
block|{
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|NodeState
name|processCommit
parameter_list|(
name|NodeState
name|before
parameter_list|,
name|NodeState
name|after
parameter_list|,
name|CommitInfo
name|info
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|existingVersionables
init|=
name|newHashSet
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|EditorProvider
argument_list|>
name|providers
init|=
name|newArrayList
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|VersionEditorProvider
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|VersionableCollector
operator|.
name|Provider
argument_list|(
name|existingVersionables
argument_list|)
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|OrphanedVersionCleaner
operator|.
name|Provider
argument_list|(
name|existingVersionables
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|compose
argument_list|(
name|transform
argument_list|(
name|providers
argument_list|,
operator|new
name|Function
argument_list|<
name|EditorProvider
argument_list|,
name|CommitHook
argument_list|>
argument_list|()
block|{
annotation|@
name|Nullable
annotation|@
name|Override
specifier|public
name|CommitHook
name|apply
parameter_list|(
annotation|@
name|Nullable
name|EditorProvider
name|input
parameter_list|)
block|{
return|return
operator|new
name|EditorHook
argument_list|(
name|input
argument_list|)
return|;
block|}
block|}
argument_list|)
argument_list|)
operator|.
name|processCommit
argument_list|(
name|before
argument_list|,
name|after
argument_list|,
name|info
argument_list|)
return|;
block|}
block|}
end_class

end_unit

