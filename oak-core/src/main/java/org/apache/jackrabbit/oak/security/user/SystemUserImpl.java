begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|UnsupportedRepositoryOperationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|util
operator|.
name|UserUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_comment
comment|/**  * Default implementation for a system user.  */
end_comment

begin_class
class|class
name|SystemUserImpl
extends|extends
name|UserImpl
block|{
name|SystemUserImpl
parameter_list|(
annotation|@
name|NotNull
name|String
name|id
parameter_list|,
annotation|@
name|NotNull
name|Tree
name|tree
parameter_list|,
annotation|@
name|NotNull
name|UserManagerImpl
name|userManager
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|super
argument_list|(
name|id
argument_list|,
name|tree
argument_list|,
name|userManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|checkValidTree
parameter_list|(
annotation|@
name|NotNull
name|Tree
name|tree
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|super
operator|.
name|checkValidTree
argument_list|(
name|tree
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|UserUtil
operator|.
name|isSystemUser
argument_list|(
name|tree
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid user node: node type rep:SystemUser expected."
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Principal
name|getPrincipal
parameter_list|()
throws|throws
name|RepositoryException
block|{
if|if
condition|(
name|isAdmin
argument_list|()
condition|)
block|{
return|return
operator|new
name|AdminPrincipalImpl
argument_list|(
name|getPrincipalName
argument_list|()
argument_list|,
name|getTree
argument_list|()
argument_list|,
name|getUserManager
argument_list|()
operator|.
name|getNamePathMapper
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|SystemUserPrincipalImpl
argument_list|(
name|getPrincipalName
argument_list|()
argument_list|,
name|getTree
argument_list|()
argument_list|,
name|getUserManager
argument_list|()
operator|.
name|getNamePathMapper
argument_list|()
argument_list|)
return|;
block|}
block|}
comment|//---------------------------------------------------------------< User>---
annotation|@
name|Override
specifier|public
name|boolean
name|isSystemUser
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|changePassword
parameter_list|(
name|String
name|password
parameter_list|)
throws|throws
name|RepositoryException
block|{
throw|throw
operator|new
name|UnsupportedRepositoryOperationException
argument_list|(
literal|"system user"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|changePassword
parameter_list|(
name|String
name|password
parameter_list|,
name|String
name|oldPassword
parameter_list|)
throws|throws
name|RepositoryException
block|{
throw|throw
operator|new
name|UnsupportedRepositoryOperationException
argument_list|(
literal|"system user"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

