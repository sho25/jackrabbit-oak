begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|run
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionParser
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionSet
import|;
end_import

begin_import
import|import
name|joptsimple
operator|.
name|OptionSpec
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_class
specifier|public
class|class
name|CommonOptions
implements|implements
name|OptionsBean
block|{
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_CONNECTION_STRING
init|=
literal|"{<path-to-repository> |<mongodb-uri>} |<rdb-uri>}"
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|Void
argument_list|>
name|help
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|Void
argument_list|>
name|readWriteOption
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|String
argument_list|>
name|nonOption
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|Void
argument_list|>
name|metrics
decl_stmt|;
specifier|private
specifier|final
name|OptionSpec
argument_list|<
name|Void
argument_list|>
name|segment
decl_stmt|;
specifier|private
name|OptionSet
name|options
decl_stmt|;
specifier|public
name|CommonOptions
parameter_list|(
name|OptionParser
name|parser
parameter_list|)
block|{
name|help
operator|=
name|parser
operator|.
name|acceptsAll
argument_list|(
name|asList
argument_list|(
literal|"h"
argument_list|,
literal|"?"
argument_list|,
literal|"help"
argument_list|)
argument_list|,
literal|"Show help"
argument_list|)
operator|.
name|forHelp
argument_list|()
expr_stmt|;
name|readWriteOption
operator|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"read-write"
argument_list|,
literal|"Connect to repository in read-write mode"
argument_list|)
expr_stmt|;
name|metrics
operator|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"metrics"
argument_list|,
literal|"Enables metrics based statistics collection"
argument_list|)
expr_stmt|;
name|segment
operator|=
name|parser
operator|.
name|accepts
argument_list|(
literal|"segment"
argument_list|,
literal|"Use older oak-segment support"
argument_list|)
expr_stmt|;
name|nonOption
operator|=
name|parser
operator|.
name|nonOptions
argument_list|(
name|DEFAULT_CONNECTION_STRING
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|OptionSet
name|options
parameter_list|)
block|{
name|this
operator|.
name|options
operator|=
name|options
expr_stmt|;
block|}
specifier|public
name|boolean
name|isHelpRequested
parameter_list|()
block|{
return|return
name|options
operator|.
name|has
argument_list|(
name|help
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isReadWrite
parameter_list|()
block|{
return|return
name|options
operator|.
name|has
argument_list|(
name|readWriteOption
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getNonOptions
parameter_list|()
block|{
return|return
name|nonOption
operator|.
name|values
argument_list|(
name|options
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isMongo
parameter_list|()
block|{
return|return
name|getStoreArg
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"mongodb://"
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isRDB
parameter_list|()
block|{
return|return
name|getStoreArg
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"jdbc"
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isOldSegment
parameter_list|()
block|{
return|return
name|options
operator|.
name|has
argument_list|(
name|segment
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isDocument
parameter_list|()
block|{
return|return
name|isMongo
argument_list|()
operator|||
name|isRDB
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isMetricsEnabled
parameter_list|()
block|{
return|return
name|options
operator|.
name|has
argument_list|(
name|metrics
argument_list|)
return|;
block|}
specifier|public
name|String
name|getStoreArg
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|nonOptions
init|=
name|nonOption
operator|.
name|values
argument_list|(
name|options
argument_list|)
decl_stmt|;
return|return
name|nonOptions
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|?
name|nonOptions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
else|:
literal|""
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|title
parameter_list|()
block|{
return|return
literal|"Global Options"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|order
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|operationNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptySet
argument_list|()
return|;
block|}
block|}
end_class

end_unit

