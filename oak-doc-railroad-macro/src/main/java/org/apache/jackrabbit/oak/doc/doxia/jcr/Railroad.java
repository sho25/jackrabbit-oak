begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|doc
operator|.
name|doxia
operator|.
name|jcr
package|;
end_package

begin_import
import|import
name|org
operator|.
name|h2
operator|.
name|bnf
operator|.
name|Bnf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|h2
operator|.
name|server
operator|.
name|web
operator|.
name|PageParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|h2
operator|.
name|tools
operator|.
name|Csv
import|;
end_import

begin_import
import|import
name|org
operator|.
name|h2
operator|.
name|util
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|h2
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSetMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * JCR 2.0 / SQL-2 railroad generator.  */
end_comment

begin_class
specifier|public
class|class
name|Railroad
block|{
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
decl_stmt|;
specifier|public
name|Railroad
parameter_list|(
name|String
name|fileName
parameter_list|)
throws|throws
name|Exception
block|{
name|Bnf
name|bnf
init|=
name|Bnf
operator|.
name|getInstance
argument_list|(
name|getReader
argument_list|(
name|fileName
argument_list|)
argument_list|)
decl_stmt|;
name|Csv
name|csv
init|=
operator|new
name|Csv
argument_list|()
decl_stmt|;
name|csv
operator|.
name|setLineCommentCharacter
argument_list|(
literal|'#'
argument_list|)
expr_stmt|;
name|ResultSet
name|rs
init|=
name|csv
operator|.
name|read
argument_list|(
name|getReader
argument_list|(
name|fileName
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|map
operator|=
name|map
argument_list|(
name|bnf
argument_list|,
name|rs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|render
parameter_list|(
name|String
name|topic
parameter_list|)
block|{
return|return
name|map
operator|.
name|get
argument_list|(
name|topic
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|getLink
parameter_list|(
name|String
name|topic
parameter_list|)
block|{
name|String
name|link
init|=
name|topic
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|link
operator|=
name|link
operator|.
name|replace
argument_list|(
literal|' '
argument_list|,
literal|'_'
argument_list|)
expr_stmt|;
comment|// link = StringUtils.replaceAll(link, "_", "");
name|link
operator|=
name|link
operator|.
name|replace
argument_list|(
literal|'@'
argument_list|,
literal|'_'
argument_list|)
expr_stmt|;
return|return
name|link
return|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
parameter_list|(
name|Bnf
name|bnf
parameter_list|,
name|ResultSet
name|rs
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
while|while
condition|(
name|rs
operator|.
name|next
argument_list|()
condition|)
block|{
name|ResultSetMetaData
name|meta
init|=
name|rs
operator|.
name|getMetaData
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|meta
operator|.
name|getColumnCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|k
init|=
name|StringUtils
operator|.
name|toLowerEnglish
argument_list|(
name|meta
operator|.
name|getColumnLabel
argument_list|(
name|i
operator|+
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|rs
operator|.
name|getString
argument_list|(
name|i
operator|+
literal|1
argument_list|)
decl_stmt|;
name|value
operator|=
name|value
operator|.
name|trim
argument_list|()
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|k
argument_list|,
name|PageParser
operator|.
name|escapeHtml
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|topic
init|=
name|rs
operator|.
name|getString
argument_list|(
literal|"TOPIC"
argument_list|)
decl_stmt|;
name|String
name|syntax
init|=
name|rs
operator|.
name|getString
argument_list|(
literal|"SYNTAX"
argument_list|)
operator|.
name|trim
argument_list|()
decl_stmt|;
name|BnfRailroad
name|r
init|=
operator|new
name|BnfRailroad
argument_list|()
decl_stmt|;
name|String
name|railroad
init|=
name|r
operator|.
name|getHtml
argument_list|(
name|bnf
argument_list|,
name|syntax
argument_list|)
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|topic
argument_list|,
name|railroad
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeSilently
argument_list|(
name|rs
argument_list|)
expr_stmt|;
block|}
return|return
name|map
return|;
block|}
specifier|private
specifier|static
name|Reader
name|getReader
parameter_list|(
name|String
name|fileName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|FileReader
argument_list|(
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

