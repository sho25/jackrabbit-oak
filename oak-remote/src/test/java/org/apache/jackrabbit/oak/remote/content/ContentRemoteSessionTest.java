begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|content
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|AuthInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteBinaryFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteBinaryId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteCommitException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteRevision
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteTreeFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doThrow
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|ContentRemoteSessionTest
block|{
specifier|private
name|ContentRemoteSession
name|createSession
parameter_list|()
block|{
return|return
name|createSession
argument_list|(
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|ContentRemoteSession
name|createSession
parameter_list|(
name|ContentRemoteBinaries
name|binaries
parameter_list|)
block|{
return|return
operator|new
name|ContentRemoteSession
argument_list|(
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
argument_list|,
name|mock
argument_list|(
name|ContentRemoteRevisions
operator|.
name|class
argument_list|)
argument_list|,
name|binaries
argument_list|)
return|;
block|}
specifier|private
name|ContentRemoteSession
name|createSession
parameter_list|(
name|ContentSession
name|session
parameter_list|,
name|ContentRemoteBinaries
name|binaries
parameter_list|)
block|{
return|return
operator|new
name|ContentRemoteSession
argument_list|(
name|session
argument_list|,
name|mock
argument_list|(
name|ContentRemoteRevisions
operator|.
name|class
argument_list|)
argument_list|,
name|binaries
argument_list|)
return|;
block|}
specifier|private
name|ContentRemoteSession
name|createSession
parameter_list|(
name|ContentSession
name|session
parameter_list|,
name|ContentRemoteRevisions
name|revisions
parameter_list|)
block|{
return|return
operator|new
name|ContentRemoteSession
argument_list|(
name|session
argument_list|,
name|revisions
argument_list|,
name|mock
argument_list|(
name|ContentRemoteBinaries
operator|.
name|class
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|ContentRemoteSession
name|createSession
parameter_list|(
name|ContentSession
name|session
parameter_list|)
block|{
return|return
operator|new
name|ContentRemoteSession
argument_list|(
name|session
argument_list|,
name|mock
argument_list|(
name|ContentRemoteRevisions
operator|.
name|class
argument_list|)
argument_list|,
name|mock
argument_list|(
name|ContentRemoteBinaries
operator|.
name|class
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevision
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|readLastRevision
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionAsString
parameter_list|()
block|{
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuthInfo
name|authInfo
init|=
name|mock
argument_list|(
name|AuthInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentSession
name|session
init|=
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|authInfo
argument_list|)
operator|.
name|when
argument_list|(
name|session
argument_list|)
operator|.
name|getAuthInfo
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|session
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
expr_stmt|;
name|ContentRemoteRevisions
name|revisions
init|=
name|mock
argument_list|(
name|ContentRemoteRevisions
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"id"
argument_list|)
operator|.
name|when
argument_list|(
name|revisions
argument_list|)
operator|.
name|put
argument_list|(
name|authInfo
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|createSession
argument_list|(
name|session
argument_list|,
name|revisions
argument_list|)
operator|.
name|readLastRevision
argument_list|()
operator|.
name|asString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadRevision
parameter_list|()
block|{
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuthInfo
name|authInfo
init|=
name|mock
argument_list|(
name|AuthInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentSession
name|session
init|=
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|authInfo
argument_list|)
operator|.
name|when
argument_list|(
name|session
argument_list|)
operator|.
name|getAuthInfo
argument_list|()
expr_stmt|;
name|ContentRemoteRevisions
name|revisions
init|=
name|mock
argument_list|(
name|ContentRemoteRevisions
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|revisions
argument_list|)
operator|.
name|get
argument_list|(
name|authInfo
argument_list|,
literal|"id"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|createSession
argument_list|(
name|session
argument_list|,
name|revisions
argument_list|)
operator|.
name|readRevision
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadRevisionAsString
parameter_list|()
block|{
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuthInfo
name|authInfo
init|=
name|mock
argument_list|(
name|AuthInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentSession
name|session
init|=
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|authInfo
argument_list|)
operator|.
name|when
argument_list|(
name|session
argument_list|)
operator|.
name|getAuthInfo
argument_list|()
expr_stmt|;
name|ContentRemoteRevisions
name|revisions
init|=
name|mock
argument_list|(
name|ContentRemoteRevisions
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|revisions
argument_list|)
operator|.
name|get
argument_list|(
name|authInfo
argument_list|,
literal|"id"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|createSession
argument_list|(
name|session
argument_list|,
name|revisions
argument_list|)
operator|.
name|readRevision
argument_list|(
literal|"id"
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadTreeWithNullRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|readTree
argument_list|(
literal|null
argument_list|,
literal|"/"
argument_list|,
operator|new
name|RemoteTreeFilters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadTreeWithInvalidRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|readTree
argument_list|(
name|mock
argument_list|(
name|RemoteRevision
operator|.
name|class
argument_list|)
argument_list|,
literal|"/"
argument_list|,
operator|new
name|RemoteTreeFilters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadTreeWithNullPath
parameter_list|()
throws|throws
name|Exception
block|{
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|createSession
argument_list|()
operator|.
name|readTree
argument_list|(
name|revision
argument_list|,
literal|null
argument_list|,
operator|new
name|RemoteTreeFilters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadTreeWithInvalidPath
parameter_list|()
throws|throws
name|Exception
block|{
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|createSession
argument_list|()
operator|.
name|readTree
argument_list|(
name|revision
argument_list|,
literal|"invalid"
argument_list|,
operator|new
name|RemoteTreeFilters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadTreeWithNullFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|createSession
argument_list|()
operator|.
name|readTree
argument_list|(
name|revision
argument_list|,
literal|"/"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadNonExistingTree
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tree
init|=
name|mock
argument_list|(
name|Tree
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|tree
operator|.
name|exists
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tree
argument_list|)
expr_stmt|;
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|revision
argument_list|)
operator|.
name|getRoot
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|readTree
argument_list|(
name|revision
argument_list|,
literal|"/"
argument_list|,
operator|new
name|RemoteTreeFilters
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadExistingTree
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tree
init|=
name|mock
argument_list|(
name|Tree
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|tree
operator|.
name|exists
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tree
argument_list|)
expr_stmt|;
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|revision
argument_list|)
operator|.
name|getRoot
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|readTree
argument_list|(
name|revision
argument_list|,
literal|"/"
argument_list|,
operator|new
name|RemoteTreeFilters
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateAddOperation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|createAddOperation
argument_list|(
literal|"/test"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateAddOperationWithNullPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createAddOperation
argument_list|(
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateAddOperationWithInvalidPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createAddOperation
argument_list|(
literal|"invalid"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateAddOperationWithRootPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createAddOperation
argument_list|(
literal|"/"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|RemoteValue
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createAddOperationWithNullProperties
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createAddOperation
argument_list|(
literal|"/test"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateRemoveOperation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|createRemoveOperation
argument_list|(
literal|"/test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateRemoveOperationWithNullPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createRemoveOperation
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateRemoveOperationWithInvalidPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createRemoveOperation
argument_list|(
literal|"invalid"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateRemoveOperationWithRootPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createRemoveOperation
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateSetOperation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|createSetOperation
argument_list|(
literal|"/test"
argument_list|,
literal|"name"
argument_list|,
name|RemoteValue
operator|.
name|toText
argument_list|(
literal|"value"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateSetOperationWithNullPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createSetOperation
argument_list|(
literal|null
argument_list|,
literal|"name"
argument_list|,
name|RemoteValue
operator|.
name|toText
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateSetOperationWithInvalidPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createSetOperation
argument_list|(
literal|"invalid"
argument_list|,
literal|"name"
argument_list|,
name|RemoteValue
operator|.
name|toText
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateSetOperationWithNullName
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createSetOperation
argument_list|(
literal|"/test"
argument_list|,
literal|null
argument_list|,
name|RemoteValue
operator|.
name|toText
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateSetOperationWithEmptyName
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createSetOperation
argument_list|(
literal|"/test"
argument_list|,
literal|""
argument_list|,
name|RemoteValue
operator|.
name|toText
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateSetOperationWithNullValue
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createSetOperation
argument_list|(
literal|"/test"
argument_list|,
literal|"name"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateUnsetOperation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|createUnsetOperation
argument_list|(
literal|"/test"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateUnsetOperationWithNullPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createUnsetOperation
argument_list|(
literal|null
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateUnsetOperationWithInvalidPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createUnsetOperation
argument_list|(
literal|"invalid"
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateUnsetOperationWithNullName
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createUnsetOperation
argument_list|(
literal|"/test"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateUnsetOperationWithEmptyName
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createUnsetOperation
argument_list|(
literal|"/test"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createCopyOperation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|createCopyOperation
argument_list|(
literal|"/source"
argument_list|,
literal|"/target"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createCopyOperationWithNullSourcePath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createCopyOperation
argument_list|(
literal|null
argument_list|,
literal|"/target"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createCopyOperationWithInvalidSourcePath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createCopyOperation
argument_list|(
literal|"invalid"
argument_list|,
literal|"/target"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createCopyOperationWithNullTargetPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createCopyOperation
argument_list|(
literal|"/source"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createCopyOperationWithInvalidTargetPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createCopyOperation
argument_list|(
literal|"/source"
argument_list|,
literal|"invalid"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createCopyOperationWithSameSourceAndTargetPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createCopyOperation
argument_list|(
literal|"/same"
argument_list|,
literal|"/same"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createCopyOperationWithSourceAncestorOfTarget
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createCopyOperation
argument_list|(
literal|"/source"
argument_list|,
literal|"/source/target"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createMoveOperation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|createMoveOperation
argument_list|(
literal|"/source"
argument_list|,
literal|"/target"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createMoveOperationWithNullSourcePath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createMoveOperation
argument_list|(
literal|null
argument_list|,
literal|"/target"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createMoveOperationWithInvalidSourcePath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createMoveOperation
argument_list|(
literal|"invalid"
argument_list|,
literal|"/target"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createMoveOperationWithNullTargetPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createMoveOperation
argument_list|(
literal|"/source"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createMoveOperationWithInvalidTargetPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createMoveOperation
argument_list|(
literal|"/source"
argument_list|,
literal|"invalid"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createMoveOperationWithSameSourceAndTargetPath
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createMoveOperation
argument_list|(
literal|"/same"
argument_list|,
literal|"/same"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createMoveOperationWithSourceAncestorOfTarget
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createMoveOperation
argument_list|(
literal|"/source"
argument_list|,
literal|"/source/target"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createAggregateOperation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|createAggregateOperation
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|RemoteOperation
argument_list|>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|createAggregateOperationWithNullList
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|createAggregateOperation
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCommit
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentRemoteOperation
name|operation
init|=
name|mock
argument_list|(
name|ContentRemoteOperation
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|revision
argument_list|)
operator|.
name|getRoot
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|commit
argument_list|(
name|revision
argument_list|,
name|operation
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCommitWithNullRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|commit
argument_list|(
literal|null
argument_list|,
name|mock
argument_list|(
name|ContentRemoteOperation
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCommitWithInvalidRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|commit
argument_list|(
name|mock
argument_list|(
name|RemoteRevision
operator|.
name|class
argument_list|)
argument_list|,
name|mock
argument_list|(
name|ContentRemoteOperation
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCommitWithNullOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|commit
argument_list|(
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCommitWithInvalidOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|commit
argument_list|(
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
argument_list|,
name|mock
argument_list|(
name|RemoteOperation
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RemoteCommitException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCommitWithOperationThrowingException
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentRemoteOperation
name|operation
init|=
name|mock
argument_list|(
name|ContentRemoteOperation
operator|.
name|class
argument_list|)
decl_stmt|;
name|doThrow
argument_list|(
name|RemoteCommitException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|operation
argument_list|)
operator|.
name|apply
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|revision
argument_list|)
operator|.
name|getRoot
argument_list|()
expr_stmt|;
name|createSession
argument_list|()
operator|.
name|commit
argument_list|(
name|revision
argument_list|,
name|operation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RemoteCommitException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCommitWithConflictingCommit
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|doThrow
argument_list|(
name|CommitFailedException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|root
argument_list|)
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ContentRemoteRevision
name|revision
init|=
name|mock
argument_list|(
name|ContentRemoteRevision
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|revision
argument_list|)
operator|.
name|getRoot
argument_list|()
expr_stmt|;
name|createSession
argument_list|()
operator|.
name|commit
argument_list|(
name|revision
argument_list|,
name|mock
argument_list|(
name|ContentRemoteOperation
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryId
parameter_list|()
block|{
name|Blob
name|blob
init|=
name|mock
argument_list|(
name|Blob
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentRemoteBinaries
name|binaries
init|=
name|mock
argument_list|(
name|ContentRemoteBinaries
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|blob
argument_list|)
operator|.
name|when
argument_list|(
name|binaries
argument_list|)
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|ContentRemoteSession
name|remoteSession
init|=
name|createSession
argument_list|(
name|binaries
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|remoteSession
operator|.
name|readBinaryId
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryIdAsString
parameter_list|()
block|{
name|Blob
name|blob
init|=
name|mock
argument_list|(
name|Blob
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentRemoteBinaries
name|binaries
init|=
name|mock
argument_list|(
name|ContentRemoteBinaries
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|blob
argument_list|)
operator|.
name|when
argument_list|(
name|binaries
argument_list|)
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|ContentRemoteSession
name|remoteSession
init|=
name|createSession
argument_list|(
name|binaries
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|remoteSession
operator|.
name|readBinaryId
argument_list|(
literal|"id"
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadBinaryIdWithNullReference
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|readBinaryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadBinaryIdWithEmptyReference
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|readBinaryId
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryIdWithInvalidReference
parameter_list|()
block|{
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|root
argument_list|)
operator|.
name|getBlob
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|ContentSession
name|session
init|=
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|session
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
expr_stmt|;
name|ContentRemoteSession
name|remoteSession
init|=
name|createSession
argument_list|(
name|session
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|remoteSession
operator|.
name|readBinaryId
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinary
parameter_list|()
block|{
name|Blob
name|blob
init|=
name|mock
argument_list|(
name|Blob
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContentRemoteBinaryId
name|binaryId
init|=
name|mock
argument_list|(
name|ContentRemoteBinaryId
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|blob
argument_list|)
operator|.
name|when
argument_list|(
name|binaryId
argument_list|)
operator|.
name|asBlob
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|createSession
argument_list|()
operator|.
name|readBinary
argument_list|(
name|binaryId
argument_list|,
operator|new
name|RemoteBinaryFilters
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadBinaryWithNullId
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|readBinary
argument_list|(
literal|null
argument_list|,
operator|new
name|RemoteBinaryFilters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadBinaryWithInvalidId
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|readBinary
argument_list|(
name|mock
argument_list|(
name|RemoteBinaryId
operator|.
name|class
argument_list|)
argument_list|,
operator|new
name|RemoteBinaryFilters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadBinaryWithNullFilters
parameter_list|()
block|{
name|createSession
argument_list|()
operator|.
name|readBinary
argument_list|(
name|mock
argument_list|(
name|ContentRemoteBinaryId
operator|.
name|class
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteBinary
parameter_list|()
throws|throws
name|Exception
block|{
name|Blob
name|blob
init|=
name|mock
argument_list|(
name|Blob
operator|.
name|class
argument_list|)
decl_stmt|;
name|InputStream
name|stream
init|=
name|mock
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|blob
argument_list|)
operator|.
name|when
argument_list|(
name|root
argument_list|)
operator|.
name|createBlob
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|ContentSession
name|session
init|=
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|session
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
expr_stmt|;
name|ContentRemoteBinaries
name|binaries
init|=
name|mock
argument_list|(
name|ContentRemoteBinaries
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|"id"
argument_list|)
operator|.
name|when
argument_list|(
name|binaries
argument_list|)
operator|.
name|put
argument_list|(
name|blob
argument_list|)
expr_stmt|;
name|ContentRemoteSession
name|remoteSession
init|=
name|createSession
argument_list|(
name|session
argument_list|,
name|binaries
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|remoteSession
operator|.
name|writeBinary
argument_list|(
name|stream
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testWriteBinaryWithNullStream
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|writeBinary
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RuntimeException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testWriteBinaryFailure
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|stream
init|=
name|mock
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|Root
name|root
init|=
name|mock
argument_list|(
name|Root
operator|.
name|class
argument_list|)
decl_stmt|;
name|doThrow
argument_list|(
name|IOException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|root
argument_list|)
operator|.
name|createBlob
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|ContentSession
name|session
init|=
name|mock
argument_list|(
name|ContentSession
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|root
argument_list|)
operator|.
name|when
argument_list|(
name|session
argument_list|)
operator|.
name|getLatestRoot
argument_list|()
expr_stmt|;
name|ContentRemoteSession
name|remoteSession
init|=
name|createSession
argument_list|(
name|session
argument_list|)
decl_stmt|;
name|remoteSession
operator|.
name|writeBinary
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryLength
parameter_list|()
throws|throws
name|Exception
block|{
name|Blob
name|blob
init|=
name|mock
argument_list|(
name|Blob
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
literal|42L
argument_list|)
operator|.
name|when
argument_list|(
name|blob
argument_list|)
operator|.
name|length
argument_list|()
expr_stmt|;
name|ContentRemoteBinaryId
name|binaryId
init|=
name|mock
argument_list|(
name|ContentRemoteBinaryId
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|blob
argument_list|)
operator|.
name|when
argument_list|(
name|binaryId
argument_list|)
operator|.
name|asBlob
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|42L
argument_list|,
name|createSession
argument_list|()
operator|.
name|readBinaryLength
argument_list|(
name|binaryId
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadBinaryLengthWithNullBinaryId
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|readBinaryLength
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReadBinaryLengthWithInvalidBinaryId
parameter_list|()
throws|throws
name|Exception
block|{
name|createSession
argument_list|()
operator|.
name|readBinaryLength
argument_list|(
name|mock
argument_list|(
name|RemoteBinaryId
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

