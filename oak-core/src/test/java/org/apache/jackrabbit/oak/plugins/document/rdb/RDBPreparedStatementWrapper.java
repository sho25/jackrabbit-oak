begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|rdb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Array
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Clob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|NClob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ParameterMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|PreparedStatement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Ref
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSetMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|RowId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLFeatureNotSupportedException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLWarning
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLXML
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|RDBPreparedStatementWrapper
implements|implements
name|PreparedStatement
block|{
specifier|private
specifier|final
name|RDBDataSourceWrapper
name|datasource
decl_stmt|;
specifier|private
specifier|final
name|PreparedStatement
name|statement
decl_stmt|;
specifier|private
name|ResultSet
name|resultSet
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Object
argument_list|>
name|parameters
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|RDBPreparedStatementWrapper
parameter_list|(
name|RDBDataSourceWrapper
name|datasource
parameter_list|,
name|PreparedStatement
name|statement
parameter_list|)
block|{
name|this
operator|.
name|datasource
operator|=
name|datasource
expr_stmt|;
name|this
operator|.
name|statement
operator|=
name|statement
expr_stmt|;
block|}
specifier|public
name|void
name|addBatch
parameter_list|()
throws|throws
name|SQLException
block|{
name|long
name|start
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|statement
operator|.
name|addBatch
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|RDBLogEntry
argument_list|>
name|l
init|=
name|datasource
operator|.
name|getLog
argument_list|()
decl_stmt|;
if|if
condition|(
name|l
operator|!=
literal|null
condition|)
block|{
name|l
operator|.
name|add
argument_list|(
operator|new
name|RDBLogEntry
argument_list|(
name|start
argument_list|,
literal|"statement.addBatch() with parameters: "
operator|+
name|parameters
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|parameters
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|addBatch
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|addBatch
argument_list|(
name|sql
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|cancel
parameter_list|()
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|cancel
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|clearBatch
parameter_list|()
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|clearBatch
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|clearParameters
parameter_list|()
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|clearParameters
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|clearWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|clearWarnings
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|SQLException
block|{
if|if
condition|(
name|resultSet
operator|!=
literal|null
condition|)
block|{
name|resultSet
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|statement
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// needed in Java 7...
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|closeOnCompletion
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLFeatureNotSupportedException
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|execute
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|autoGeneratedKeys
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|execute
argument_list|(
name|sql
argument_list|,
name|autoGeneratedKeys
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
index|[]
name|columnIndexes
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|execute
argument_list|(
name|sql
argument_list|,
name|columnIndexes
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|,
name|String
index|[]
name|columnNames
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|execute
argument_list|(
name|sql
argument_list|,
name|columnNames
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|execute
argument_list|(
name|sql
argument_list|)
return|;
block|}
specifier|public
name|int
index|[]
name|executeBatch
parameter_list|()
throws|throws
name|SQLException
block|{
name|long
name|start
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|int
name|results
index|[]
init|=
block|{}
decl_stmt|;
name|SQLException
name|x
init|=
literal|null
decl_stmt|;
try|try
block|{
name|results
operator|=
name|statement
operator|.
name|executeBatch
argument_list|()
expr_stmt|;
comment|// not all JDBC drivers return the number of affected rows
if|if
condition|(
operator|!
name|datasource
operator|.
name|isBatchResultPrecise
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|results
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|results
index|[
name|i
index|]
operator|>=
literal|0
condition|)
block|{
name|results
index|[
name|i
index|]
operator|=
name|Statement
operator|.
name|SUCCESS_NO_INFO
expr_stmt|;
block|}
block|}
block|}
return|return
name|results
return|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|ex
parameter_list|)
block|{
name|x
operator|=
name|ex
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
name|List
argument_list|<
name|RDBLogEntry
argument_list|>
name|l
init|=
name|datasource
operator|.
name|getLog
argument_list|()
decl_stmt|;
if|if
condition|(
name|l
operator|!=
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"statement.executeBatch() -> "
operator|+
name|Arrays
operator|.
name|toString
argument_list|(
name|results
argument_list|)
decl_stmt|;
if|if
condition|(
name|x
operator|!=
literal|null
condition|)
block|{
name|message
operator|+=
literal|" -> "
operator|+
name|x
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
name|l
operator|.
name|add
argument_list|(
operator|new
name|RDBLogEntry
argument_list|(
name|start
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|ResultSet
name|executeQuery
parameter_list|()
throws|throws
name|SQLException
block|{
name|long
name|start
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|SQLException
name|x
init|=
literal|null
decl_stmt|;
try|try
block|{
name|resultSet
operator|=
operator|new
name|RDBResultSetWrapper
argument_list|(
name|datasource
argument_list|,
name|statement
operator|.
name|executeQuery
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resultSet
return|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|ex
parameter_list|)
block|{
name|x
operator|=
name|ex
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
name|List
argument_list|<
name|RDBLogEntry
argument_list|>
name|l
init|=
name|datasource
operator|.
name|getLog
argument_list|()
decl_stmt|;
if|if
condition|(
name|l
operator|!=
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"statement.executeQuery() with parameters: "
operator|+
name|parameters
decl_stmt|;
if|if
condition|(
name|x
operator|!=
literal|null
condition|)
block|{
name|message
operator|+=
literal|" -> "
operator|+
name|x
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
name|l
operator|.
name|add
argument_list|(
operator|new
name|RDBLogEntry
argument_list|(
name|start
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|ResultSet
name|executeQuery
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|executeQuery
argument_list|(
name|sql
argument_list|)
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|()
throws|throws
name|SQLException
block|{
name|long
name|start
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|SQLException
name|x
init|=
literal|null
decl_stmt|;
name|Integer
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
name|result
operator|=
name|statement
operator|.
name|executeUpdate
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|ex
parameter_list|)
block|{
name|x
operator|=
name|ex
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
name|List
argument_list|<
name|RDBLogEntry
argument_list|>
name|l
init|=
name|datasource
operator|.
name|getLog
argument_list|()
decl_stmt|;
if|if
condition|(
name|l
operator|!=
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"statement.executeUpdate() with parameters: "
operator|+
name|parameters
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|message
operator|+=
literal|" -> "
operator|+
name|result
expr_stmt|;
block|}
if|if
condition|(
name|x
operator|!=
literal|null
condition|)
block|{
name|message
operator|+=
literal|" -> "
operator|+
name|x
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
name|l
operator|.
name|add
argument_list|(
operator|new
name|RDBLogEntry
argument_list|(
name|start
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|autoGeneratedKeys
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|,
name|autoGeneratedKeys
argument_list|)
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
index|[]
name|columnIndexes
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|,
name|columnIndexes
argument_list|)
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|,
name|String
index|[]
name|columnNames
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|,
name|columnNames
argument_list|)
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|)
return|;
block|}
specifier|public
name|Connection
name|getConnection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getConnection
argument_list|()
return|;
block|}
specifier|public
name|int
name|getFetchDirection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getFetchDirection
argument_list|()
return|;
block|}
specifier|public
name|int
name|getFetchSize
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getFetchSize
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getGeneratedKeys
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getGeneratedKeys
argument_list|()
return|;
block|}
specifier|public
name|int
name|getMaxFieldSize
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getMaxFieldSize
argument_list|()
return|;
block|}
specifier|public
name|int
name|getMaxRows
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getMaxRows
argument_list|()
return|;
block|}
specifier|public
name|ResultSetMetaData
name|getMetaData
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getMetaData
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getMoreResults
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getMoreResults
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getMoreResults
parameter_list|(
name|int
name|current
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getMoreResults
argument_list|(
name|current
argument_list|)
return|;
block|}
specifier|public
name|ParameterMetaData
name|getParameterMetaData
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getParameterMetaData
argument_list|()
return|;
block|}
specifier|public
name|int
name|getQueryTimeout
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getQueryTimeout
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getResultSet
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getResultSet
argument_list|()
return|;
block|}
specifier|public
name|int
name|getResultSetConcurrency
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getResultSetConcurrency
argument_list|()
return|;
block|}
specifier|public
name|int
name|getResultSetHoldability
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getResultSetHoldability
argument_list|()
return|;
block|}
specifier|public
name|int
name|getResultSetType
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getResultSetType
argument_list|()
return|;
block|}
specifier|public
name|int
name|getUpdateCount
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getUpdateCount
argument_list|()
return|;
block|}
specifier|public
name|SQLWarning
name|getWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|getWarnings
argument_list|()
return|;
block|}
comment|// needed in Java 7...
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|boolean
name|isCloseOnCompletion
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLFeatureNotSupportedException
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|isClosed
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|isClosed
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isPoolable
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|isPoolable
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|isWrapperFor
argument_list|(
name|iface
argument_list|)
return|;
block|}
specifier|public
name|void
name|setArray
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Array
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setArray
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setAsciiStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setAsciiStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setAsciiStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBigDecimal
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|BigDecimal
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBigDecimal
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBinaryStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBinaryStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBinaryStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Blob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBlob
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBlob
argument_list|(
name|parameterIndex
argument_list|,
name|inputStream
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|inputStream
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBlob
argument_list|(
name|parameterIndex
argument_list|,
name|inputStream
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|inputStream
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBoolean
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|boolean
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBoolean
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setByte
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|byte
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setByte
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBytes
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|byte
index|[]
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setBytes
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|x
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Clob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setClob
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCursorName
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setCursorName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Date
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setDate
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|cal
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Date
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setDate
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDouble
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|double
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setDouble
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEscapeProcessing
parameter_list|(
name|boolean
name|enable
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setEscapeProcessing
argument_list|(
name|enable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setFetchDirection
parameter_list|(
name|int
name|direction
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setFetchDirection
argument_list|(
name|direction
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setFetchSize
parameter_list|(
name|int
name|rows
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setFetchSize
argument_list|(
name|rows
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setFloat
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|float
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setFloat
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setInt
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|int
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setInt
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setLong
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|long
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setLong
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setMaxFieldSize
parameter_list|(
name|int
name|max
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setMaxFieldSize
argument_list|(
name|max
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setMaxRows
parameter_list|(
name|int
name|max
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setMaxRows
argument_list|(
name|max
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|value
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|value
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|NClob
name|value
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNClob
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNString
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNString
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNull
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|int
name|sqlType
parameter_list|,
name|String
name|typeName
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNull
argument_list|(
name|parameterIndex
argument_list|,
name|sqlType
argument_list|,
name|typeName
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
literal|"(null)"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNull
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|int
name|sqlType
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setNull
argument_list|(
name|parameterIndex
argument_list|,
name|sqlType
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
literal|"(null)"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|targetSqlType
parameter_list|,
name|int
name|scaleOrLength
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setObject
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|targetSqlType
argument_list|,
name|scaleOrLength
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|targetSqlType
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setObject
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|targetSqlType
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Object
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setObject
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setPoolable
parameter_list|(
name|boolean
name|poolable
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setPoolable
argument_list|(
name|poolable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setQueryTimeout
parameter_list|(
name|int
name|seconds
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setQueryTimeout
argument_list|(
name|seconds
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRef
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Ref
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setRef
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRowId
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|RowId
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setRowId
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSQLXML
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|SQLXML
name|xmlObject
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setSQLXML
argument_list|(
name|parameterIndex
argument_list|,
name|xmlObject
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|xmlObject
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setShort
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|short
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setShort
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setString
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|String
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setString
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Time
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setTime
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|cal
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Time
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setTime
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Timestamp
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setTimestamp
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|cal
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Timestamp
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setTimestamp
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setURL
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|URL
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setURL
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setUnicodeStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|statement
operator|.
name|setUnicodeStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|record
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|statement
operator|.
name|unwrap
argument_list|(
name|iface
argument_list|)
return|;
block|}
specifier|private
name|void
name|record
parameter_list|(
name|int
name|index
parameter_list|,
name|Object
name|x
parameter_list|)
block|{
name|List
argument_list|<
name|RDBLogEntry
argument_list|>
name|l
init|=
name|datasource
operator|.
name|getLog
argument_list|()
decl_stmt|;
if|if
condition|(
name|l
operator|!=
literal|null
condition|)
block|{
while|while
condition|(
name|parameters
operator|.
name|size
argument_list|()
operator|<
name|index
condition|)
block|{
name|parameters
operator|.
name|add
argument_list|(
literal|"UNSET"
argument_list|)
expr_stmt|;
block|}
name|parameters
operator|.
name|set
argument_list|(
name|index
operator|-
literal|1
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

