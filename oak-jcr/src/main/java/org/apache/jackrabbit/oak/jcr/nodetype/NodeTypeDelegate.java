begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|nodetype
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|NodeTypeDelegate
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|String
index|[]
name|declaredSuperTypeNames
decl_stmt|;
specifier|private
specifier|final
name|String
name|primaryItemName
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|isMixin
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|isAbstract
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|hasOrderableChildNodes
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|PropertyDefinitionDelegate
argument_list|>
name|declaredPropertyDefinitionDelegates
init|=
operator|new
name|ArrayList
argument_list|<
name|PropertyDefinitionDelegate
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|NodeDefinitionDelegate
argument_list|>
name|declaredChildNodeDefinitionDelegates
init|=
operator|new
name|ArrayList
argument_list|<
name|NodeDefinitionDelegate
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|NodeTypeDelegate
parameter_list|(
name|String
name|name
parameter_list|,
name|String
index|[]
name|declaredSuperTypeNames
parameter_list|,
name|String
name|primaryItemName
parameter_list|,
name|boolean
name|isMixin
parameter_list|,
name|boolean
name|isAbstract
parameter_list|,
name|boolean
name|hasOrderableChildNodes
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|declaredSuperTypeNames
operator|=
name|declaredSuperTypeNames
expr_stmt|;
name|this
operator|.
name|primaryItemName
operator|=
name|primaryItemName
expr_stmt|;
name|this
operator|.
name|isMixin
operator|=
name|isMixin
expr_stmt|;
name|this
operator|.
name|isAbstract
operator|=
name|isAbstract
expr_stmt|;
name|this
operator|.
name|hasOrderableChildNodes
operator|=
name|hasOrderableChildNodes
expr_stmt|;
block|}
specifier|public
name|void
name|addPropertyDefinitionDelegate
parameter_list|(
name|PropertyDefinitionDelegate
name|declaredPropertyDefinitionDelegate
parameter_list|)
block|{
name|this
operator|.
name|declaredPropertyDefinitionDelegates
operator|.
name|add
argument_list|(
name|declaredPropertyDefinitionDelegate
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addChildNodeDefinitionDelegate
parameter_list|(
name|NodeDefinitionDelegate
name|declaredChildNodeDefinitionDelegate
parameter_list|)
block|{
name|this
operator|.
name|declaredChildNodeDefinitionDelegates
operator|.
name|add
argument_list|(
name|declaredChildNodeDefinitionDelegate
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getDeclaredSuperTypeNames
parameter_list|()
block|{
return|return
name|declaredSuperTypeNames
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|String
name|getPrimaryItemName
parameter_list|()
block|{
return|return
name|primaryItemName
return|;
block|}
specifier|public
name|List
argument_list|<
name|NodeDefinitionDelegate
argument_list|>
name|getChildNodeDefinitionDelegates
parameter_list|()
block|{
return|return
name|this
operator|.
name|declaredChildNodeDefinitionDelegates
return|;
block|}
specifier|public
name|List
argument_list|<
name|PropertyDefinitionDelegate
argument_list|>
name|getPropertyDefinitionDelegates
parameter_list|()
block|{
return|return
name|this
operator|.
name|declaredPropertyDefinitionDelegates
return|;
block|}
specifier|public
name|boolean
name|hasOrderableChildNodes
parameter_list|()
block|{
return|return
name|hasOrderableChildNodes
return|;
block|}
specifier|public
name|boolean
name|isAbstract
parameter_list|()
block|{
return|return
name|isAbstract
return|;
block|}
specifier|public
name|boolean
name|isMixin
parameter_list|()
block|{
return|return
name|isMixin
return|;
block|}
block|}
end_class

end_unit

