begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|composite
operator|.
name|blueGreen
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedActionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|AccessControlManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|AccessControlPolicy
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|AccessControlPolicyIterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|security
operator|.
name|Privilege
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|JackrabbitRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|JackrabbitAccessControlList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|commons
operator|.
name|jackrabbit
operator|.
name|authorization
operator|.
name|AccessControlUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|InitialContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|composite
operator|.
name|CompositeNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|namepath
operator|.
name|NamePathMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|atomic
operator|.
name|AtomicCounterEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|commit
operator|.
name|ConflictValidatorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|commit
operator|.
name|JcrConflictHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|bundlor
operator|.
name|BundlingConfigInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|IndexConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|WhiteboardIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|counter
operator|.
name|NodeCounterEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|IndexCopier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|IndexTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|LuceneIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|LuceneIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|reader
operator|.
name|DefaultIndexReaderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|lucene
operator|.
name|util
operator|.
name|IndexDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|nodetype
operator|.
name|NodeTypeIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|property
operator|.
name|PropertyIndexEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|property
operator|.
name|PropertyIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|reference
operator|.
name|ReferenceEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|index
operator|.
name|reference
operator|.
name|ReferenceIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|name
operator|.
name|NameValidatorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|name
operator|.
name|NamespaceEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|nodetype
operator|.
name|TypeEditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|observation
operator|.
name|ChangeCollectorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|version
operator|.
name|VersionHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authorization
operator|.
name|composite
operator|.
name|CompositeAuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|internal
operator|.
name|SecurityProviderBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|SegmentNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|SegmentNodeStoreBuilders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|FileStoreBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|segment
operator|.
name|file
operator|.
name|InvalidFileStoreVersionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|BlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|blob
operator|.
name|FileBlobStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|EditorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Observer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|lifecycle
operator|.
name|RepositoryInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|MountInfoProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|mount
operator|.
name|Mounts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|QueryIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|query
operator|.
name|WhiteboardIndexProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|SecurityProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|SystemSubject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|EveryonePrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|UserConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_comment
comment|/**  * Utility class to open a repository.  */
end_comment

begin_class
specifier|public
class|class
name|Persistence
block|{
specifier|private
specifier|static
specifier|final
name|MountInfoProvider
name|MOUNT_INFO_PROVIDER
init|=
name|createMountInfoProvider
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|ArrayList
argument_list|<
name|FileStore
argument_list|>
name|fileStores
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|JackrabbitRepository
name|repository
decl_stmt|;
specifier|public
name|Session
name|session
decl_stmt|;
specifier|public
specifier|static
name|Persistence
name|open
parameter_list|(
name|File
name|directory
parameter_list|,
name|Config
name|config
parameter_list|)
throws|throws
name|Exception
block|{
name|Persistence
name|result
init|=
operator|new
name|Persistence
argument_list|()
decl_stmt|;
name|FileStore
name|fs
init|=
name|openFileStore
argument_list|(
name|directory
argument_list|,
name|config
operator|.
name|blobStore
argument_list|)
decl_stmt|;
name|result
operator|.
name|fileStores
operator|.
name|add
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|SegmentNodeStore
name|ns
init|=
name|openSegmentStore
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|result
operator|.
name|repository
operator|=
name|openRepsitory
argument_list|(
name|ns
argument_list|,
name|config
operator|.
name|indexDir
argument_list|)
expr_stmt|;
name|result
operator|.
name|session
operator|=
name|result
operator|.
name|repository
operator|.
name|login
argument_list|(
name|createCredentials
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
specifier|static
name|Persistence
name|openComposite
parameter_list|(
name|File
name|globalDir
parameter_list|,
name|File
name|libsDir
parameter_list|,
name|Config
name|config
parameter_list|)
throws|throws
name|Exception
block|{
name|Persistence
name|result
init|=
operator|new
name|Persistence
argument_list|()
decl_stmt|;
name|FileStore
name|libsFileStore
init|=
name|openFileStore
argument_list|(
name|libsDir
argument_list|,
name|config
operator|.
name|blobStore
argument_list|)
decl_stmt|;
name|result
operator|.
name|fileStores
operator|.
name|add
argument_list|(
name|libsFileStore
argument_list|)
expr_stmt|;
name|SegmentNodeStore
name|libsStore
init|=
name|openSegmentStore
argument_list|(
name|libsFileStore
argument_list|)
decl_stmt|;
name|FileStore
name|globalFileStore
init|=
name|openFileStore
argument_list|(
name|globalDir
argument_list|,
name|config
operator|.
name|blobStore
argument_list|)
decl_stmt|;
name|result
operator|.
name|fileStores
operator|.
name|add
argument_list|(
name|globalFileStore
argument_list|)
expr_stmt|;
name|SegmentNodeStore
name|globalStore
init|=
name|openSegmentStore
argument_list|(
name|globalFileStore
argument_list|)
decl_stmt|;
name|NodeStore
name|cn
init|=
operator|new
name|CompositeNodeStore
operator|.
name|Builder
argument_list|(
name|MOUNT_INFO_PROVIDER
argument_list|,
name|globalStore
argument_list|)
operator|.
name|addMount
argument_list|(
literal|"libs"
argument_list|,
name|libsStore
argument_list|)
operator|.
name|setPartialReadOnly
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|result
operator|.
name|repository
operator|=
name|openRepsitory
argument_list|(
name|cn
argument_list|,
name|config
operator|.
name|indexDir
argument_list|)
expr_stmt|;
name|result
operator|.
name|session
operator|=
name|result
operator|.
name|repository
operator|.
name|login
argument_list|(
name|createCredentials
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
block|{
name|session
operator|.
name|logout
argument_list|()
expr_stmt|;
name|repository
operator|.
name|shutdown
argument_list|()
expr_stmt|;
for|for
control|(
name|FileStore
name|fs
range|:
name|fileStores
control|)
block|{
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|MountInfoProvider
name|createMountInfoProvider
parameter_list|()
block|{
return|return
name|Mounts
operator|.
name|newBuilder
argument_list|()
operator|.
name|mount
argument_list|(
literal|"libs"
argument_list|,
literal|true
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
comment|// pathsSupportingFragments
literal|"/oak:index/*$"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
comment|// mountedPaths
literal|"/libs"
argument_list|,
literal|"/apps"
argument_list|,
literal|"/jcr:system/rep:permissionStore/oak:mount-libs-crx.default"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|BlobStore
name|getFileBlobStore
parameter_list|(
name|File
name|directory
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|FileBlobStore
argument_list|(
name|directory
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|SecurityProvider
name|createSecurityProvider
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|userConfigMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|userConfigMap
operator|.
name|put
argument_list|(
name|UserConstants
operator|.
name|PARAM_GROUP_PATH
argument_list|,
literal|"/home/groups"
argument_list|)
expr_stmt|;
name|userConfigMap
operator|.
name|put
argument_list|(
name|UserConstants
operator|.
name|PARAM_USER_PATH
argument_list|,
literal|"/home/users"
argument_list|)
expr_stmt|;
name|userConfigMap
operator|.
name|put
argument_list|(
name|UserConstants
operator|.
name|PARAM_DEFAULT_DEPTH
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|ConfigurationParameters
name|userConfig
init|=
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|UserConfiguration
operator|.
name|NAME
argument_list|,
name|ConfigurationParameters
operator|.
name|of
argument_list|(
name|userConfigMap
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|SecurityProvider
name|securityProvider
init|=
name|SecurityProviderBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|with
argument_list|(
name|userConfig
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|AuthorizationConfiguration
name|acConfig
init|=
name|securityProvider
operator|.
name|getConfiguration
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
operator|(
call|(
name|AuthorizationConfigurationImpl
call|)
argument_list|(
operator|(
name|CompositeAuthorizationConfiguration
operator|)
name|acConfig
argument_list|)
operator|.
name|getDefaultConfig
argument_list|()
operator|)
operator|.
name|bindMountInfoProvider
argument_list|(
name|MOUNT_INFO_PROVIDER
argument_list|)
expr_stmt|;
return|return
name|securityProvider
return|;
block|}
specifier|private
specifier|static
name|FileStore
name|openFileStore
parameter_list|(
name|File
name|directory
parameter_list|,
name|BlobStore
name|blobStore
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|FileStoreBuilder
operator|.
name|fileStoreBuilder
argument_list|(
name|directory
argument_list|)
operator|.
name|withBlobStore
argument_list|(
name|blobStore
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|InvalidFileStoreVersionException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|SegmentNodeStore
name|openSegmentStore
parameter_list|(
name|FileStore
name|fileStore
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|SegmentNodeStoreBuilders
operator|.
name|builder
argument_list|(
name|fileStore
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|JackrabbitRepository
name|openRepsitory
parameter_list|(
name|NodeStore
name|nodeStore
parameter_list|,
name|File
name|indexDirectory
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|ExecutorService
name|executorService
init|=
name|Executors
operator|.
name|newFixedThreadPool
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|Oak
name|oak
init|=
operator|new
name|Oak
argument_list|(
name|nodeStore
argument_list|)
decl_stmt|;
name|oak
operator|.
name|withFailOnMissingIndexProvider
argument_list|()
expr_stmt|;
name|InitialContent
name|initialContent
init|=
operator|new
name|InitialContent
argument_list|()
decl_stmt|;
name|EditorProvider
name|atomicCounter
init|=
operator|new
name|AtomicCounterEditorProvider
argument_list|()
decl_stmt|;
name|SecurityProvider
name|securityProvider
init|=
name|createSecurityProvider
argument_list|()
decl_stmt|;
name|Jcr
name|jcr
init|=
operator|new
name|Jcr
argument_list|(
name|oak
argument_list|,
literal|false
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|Executor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
name|Runnable
name|command
parameter_list|)
block|{
name|executorService
operator|.
name|execute
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
operator|.
comment|// with(whiteboard)
name|with
argument_list|(
name|initialContent
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|Content
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
name|JcrConflictHandler
operator|.
name|createJcrConflictHandler
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|VersionHook
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
name|securityProvider
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|NameValidatorProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|NamespaceEditorProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|TypeEditorProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|ConflictValidatorProvider
argument_list|()
argument_list|)
operator|.
name|with
argument_list|(
name|atomicCounter
argument_list|)
operator|.
comment|// one second delay
name|withAsyncIndexing
argument_list|(
literal|"async"
argument_list|,
literal|1
argument_list|)
operator|.
name|withAsyncIndexing
argument_list|(
literal|"fulltext-async"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ChangeCollectorProvider
name|changeCollectorProvider
init|=
operator|new
name|ChangeCollectorProvider
argument_list|()
decl_stmt|;
name|jcr
operator|.
name|with
argument_list|(
name|changeCollectorProvider
argument_list|)
expr_stmt|;
name|WhiteboardIndexProvider
name|indexProvider
init|=
operator|new
name|WhiteboardIndexProvider
argument_list|()
decl_stmt|;
name|WhiteboardIndexEditorProvider
name|indexEditorProvider
init|=
operator|new
name|WhiteboardIndexEditorProvider
argument_list|()
decl_stmt|;
name|boolean
name|fastQueryResultSize
init|=
literal|false
decl_stmt|;
name|jcr
operator|.
name|with
argument_list|(
name|indexProvider
argument_list|)
operator|.
name|with
argument_list|(
name|indexEditorProvider
argument_list|)
operator|.
name|with
argument_list|(
literal|"crx.default"
argument_list|)
operator|.
name|withFastQueryResultSize
argument_list|(
name|fastQueryResultSize
argument_list|)
expr_stmt|;
name|IndexTracker
name|indexTracker
decl_stmt|;
name|IndexCopier
name|indexCopier
decl_stmt|;
try|try
block|{
name|indexCopier
operator|=
operator|new
name|IndexCopier
argument_list|(
name|executorService
argument_list|,
name|indexDirectory
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|MountInfoProvider
name|mip
init|=
name|MOUNT_INFO_PROVIDER
decl_stmt|;
name|DefaultIndexReaderFactory
name|indexReaderFactory
init|=
operator|new
name|DefaultIndexReaderFactory
argument_list|(
name|mip
argument_list|,
name|indexCopier
argument_list|)
decl_stmt|;
name|indexTracker
operator|=
operator|new
name|IndexTracker
argument_list|(
name|indexReaderFactory
argument_list|)
expr_stmt|;
name|LuceneIndexProvider
name|luceneIndexProvider
init|=
operator|new
name|LuceneIndexProvider
argument_list|(
name|indexTracker
argument_list|)
decl_stmt|;
name|LuceneIndexEditorProvider
name|luceneIndexEditor
init|=
operator|new
name|LuceneIndexEditorProvider
argument_list|(
name|indexCopier
argument_list|,
name|indexTracker
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mip
argument_list|)
decl_stmt|;
name|jcr
operator|.
name|with
argument_list|(
operator|new
name|PropertyIndexEditorProvider
argument_list|()
operator|.
name|with
argument_list|(
name|mip
argument_list|)
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|NodeCounterEditorProvider
argument_list|()
operator|.
name|with
argument_list|(
name|mip
argument_list|)
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|PropertyIndexProvider
argument_list|()
operator|.
name|with
argument_list|(
name|mip
argument_list|)
argument_list|)
operator|.
name|with
argument_list|(
name|luceneIndexEditor
argument_list|)
operator|.
name|with
argument_list|(
operator|(
name|QueryIndexProvider
operator|)
name|luceneIndexProvider
argument_list|)
operator|.
name|with
argument_list|(
operator|(
name|Observer
operator|)
name|luceneIndexProvider
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|NodeTypeIndexProvider
argument_list|()
operator|.
name|with
argument_list|(
name|mip
argument_list|)
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|ReferenceEditorProvider
argument_list|()
operator|.
name|with
argument_list|(
name|mip
argument_list|)
argument_list|)
operator|.
name|with
argument_list|(
operator|new
name|ReferenceIndexProvider
argument_list|()
operator|.
name|with
argument_list|(
name|mip
argument_list|)
argument_list|)
operator|.
name|with
argument_list|(
name|BundlingConfigInitializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|ContentRepository
name|contentRepository
init|=
name|jcr
operator|.
name|createContentRepository
argument_list|()
decl_stmt|;
name|setupPermissions
argument_list|(
name|contentRepository
argument_list|,
name|securityProvider
argument_list|)
expr_stmt|;
name|JackrabbitRepository
name|repository
init|=
operator|(
name|JackrabbitRepository
operator|)
name|jcr
operator|.
name|createRepository
argument_list|()
decl_stmt|;
return|return
name|repository
return|;
block|}
specifier|private
specifier|static
name|void
name|setupPermissions
parameter_list|(
name|ContentRepository
name|repo
parameter_list|,
name|SecurityProvider
name|securityProvider
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|ContentSession
name|cs
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cs
operator|=
name|Subject
operator|.
name|doAsPrivileged
argument_list|(
name|SystemSubject
operator|.
name|INSTANCE
argument_list|,
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|ContentSession
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ContentSession
name|run
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|repo
operator|.
name|login
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
block|}
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Root
name|root
init|=
name|cs
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|AuthorizationConfiguration
name|config
init|=
name|securityProvider
operator|.
name|getConfiguration
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|AccessControlManager
name|acMgr
init|=
name|config
operator|.
name|getAccessControlManager
argument_list|(
name|root
argument_list|,
name|NamePathMapper
operator|.
name|DEFAULT
argument_list|)
decl_stmt|;
comment|// protect /oak:index
name|setupPolicy
argument_list|(
literal|"/"
operator|+
name|IndexConstants
operator|.
name|INDEX_DEFINITIONS_NAME
argument_list|,
name|acMgr
argument_list|)
expr_stmt|;
comment|// protect /jcr:system
name|setupPolicy
argument_list|(
literal|"/"
operator|+
name|JcrConstants
operator|.
name|JCR_SYSTEM
argument_list|,
name|acMgr
argument_list|)
expr_stmt|;
if|if
condition|(
name|root
operator|.
name|hasPendingChanges
argument_list|()
condition|)
block|{
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|PrivilegedActionException
decl||
name|CommitFailedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|cs
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|cs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
block|}
specifier|private
specifier|static
name|void
name|setupPolicy
parameter_list|(
name|String
name|path
parameter_list|,
name|AccessControlManager
name|acMgr
parameter_list|)
throws|throws
name|RepositoryException
block|{
comment|// only retrieve applicable policies thus leaving the setup untouched once
comment|// it has been created and has potentially been modified on an existing
comment|// instance
name|AccessControlPolicyIterator
name|it
init|=
name|acMgr
operator|.
name|getApplicablePolicies
argument_list|(
name|path
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|AccessControlPolicy
name|policy
init|=
name|it
operator|.
name|nextAccessControlPolicy
argument_list|()
decl_stmt|;
if|if
condition|(
name|policy
operator|instanceof
name|JackrabbitAccessControlList
condition|)
block|{
name|JackrabbitAccessControlList
name|acl
init|=
operator|(
name|JackrabbitAccessControlList
operator|)
name|policy
decl_stmt|;
name|Privilege
index|[]
name|jcrAll
init|=
name|AccessControlUtils
operator|.
name|privilegesFromNames
argument_list|(
name|acMgr
argument_list|,
name|PrivilegeConstants
operator|.
name|JCR_ALL
argument_list|)
decl_stmt|;
name|acl
operator|.
name|addEntry
argument_list|(
name|EveryonePrincipal
operator|.
name|getInstance
argument_list|()
argument_list|,
name|jcrAll
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|acMgr
operator|.
name|setPolicy
argument_list|(
name|path
argument_list|,
name|acl
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
specifier|private
specifier|static
name|SimpleCredentials
name|createCredentials
parameter_list|()
block|{
return|return
operator|new
name|SimpleCredentials
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
operator|.
name|toCharArray
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|Content
implements|implements
name|RepositoryInitializer
block|{
specifier|private
specifier|static
specifier|final
name|String
name|FULLTEXT_ASYNC
init|=
literal|"fulltext-async"
decl_stmt|;
specifier|private
name|NodeBuilder
name|index
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
annotation|@
name|NotNull
name|NodeBuilder
name|builder
parameter_list|)
block|{
if|if
condition|(
name|builder
operator|.
name|hasChildNode
argument_list|(
name|IndexConstants
operator|.
name|INDEX_DEFINITIONS_NAME
argument_list|)
condition|)
block|{
name|index
operator|=
name|builder
operator|.
name|child
argument_list|(
name|IndexConstants
operator|.
name|INDEX_DEFINITIONS_NAME
argument_list|)
expr_stmt|;
name|configureGlobalFullTextIndex
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|configureGlobalFullTextIndex
parameter_list|()
block|{
name|String
name|indexName
init|=
literal|"lucene"
decl_stmt|;
if|if
condition|(
operator|!
name|index
operator|.
name|hasChildNode
argument_list|(
name|indexName
argument_list|)
condition|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|INCLUDE_PROPS
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|IndexDefinitionBuilder
name|indexBuilder
init|=
operator|new
name|IndexDefinitionBuilder
argument_list|(
name|index
operator|.
name|child
argument_list|(
name|indexName
argument_list|)
argument_list|)
operator|.
name|codec
argument_list|(
literal|"Lucene46"
argument_list|)
operator|.
name|excludedPaths
argument_list|(
literal|"/libs"
argument_list|)
decl_stmt|;
name|indexBuilder
operator|.
name|async
argument_list|(
name|FULLTEXT_ASYNC
argument_list|,
name|IndexConstants
operator|.
name|INDEXING_MODE_NRT
argument_list|)
expr_stmt|;
name|indexBuilder
operator|.
name|aggregateRule
argument_list|(
literal|"nt:file"
argument_list|,
literal|"jcr:content"
argument_list|)
expr_stmt|;
name|indexBuilder
operator|.
name|indexRule
argument_list|(
literal|"rep:Token"
argument_list|)
expr_stmt|;
name|IndexDefinitionBuilder
operator|.
name|IndexRule
name|indexRules
init|=
name|indexBuilder
operator|.
name|indexRule
argument_list|(
literal|"nt:base"
argument_list|)
decl_stmt|;
name|indexRules
operator|.
name|includePropertyTypes
argument_list|(
literal|"String"
argument_list|,
literal|"Binary"
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|includeProp
range|:
name|INCLUDE_PROPS
control|)
block|{
name|indexRules
operator|.
name|property
argument_list|(
name|includeProp
argument_list|)
operator|.
name|propertyIndex
argument_list|()
expr_stmt|;
block|}
name|indexBuilder
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|Config
block|{
specifier|public
name|BlobStore
name|blobStore
decl_stmt|;
specifier|public
name|File
name|indexDir
decl_stmt|;
block|}
block|}
end_class

end_unit

