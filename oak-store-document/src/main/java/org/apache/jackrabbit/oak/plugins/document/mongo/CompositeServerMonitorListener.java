begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|event
operator|.
name|ServerHeartbeatFailedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|event
operator|.
name|ServerHeartbeatStartedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|event
operator|.
name|ServerHeartbeatSucceededEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|event
operator|.
name|ServerMonitorListener
import|;
end_import

begin_comment
comment|/**  * A composite {@link ServerMonitorListener}.  */
end_comment

begin_class
class|class
name|CompositeServerMonitorListener
implements|implements
name|ServerMonitorListener
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|ServerMonitorListener
argument_list|>
name|listeners
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|void
name|addListener
parameter_list|(
name|ServerMonitorListener
name|listener
parameter_list|)
block|{
name|listeners
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
name|void
name|removeListener
parameter_list|(
name|ServerMonitorListener
name|listener
parameter_list|)
block|{
name|listeners
operator|.
name|remove
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serverHearbeatStarted
parameter_list|(
name|ServerHeartbeatStartedEvent
name|event
parameter_list|)
block|{
name|listeners
operator|.
name|forEach
argument_list|(
name|l
lambda|->
name|l
operator|.
name|serverHearbeatStarted
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serverHeartbeatSucceeded
parameter_list|(
name|ServerHeartbeatSucceededEvent
name|event
parameter_list|)
block|{
name|listeners
operator|.
name|forEach
argument_list|(
name|l
lambda|->
name|l
operator|.
name|serverHeartbeatSucceeded
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serverHeartbeatFailed
parameter_list|(
name|ServerHeartbeatFailedEvent
name|event
parameter_list|)
block|{
name|listeners
operator|.
name|forEach
argument_list|(
name|l
lambda|->
name|l
operator|.
name|serverHeartbeatFailed
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

