begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|Revision
import|;
end_import

begin_comment
comment|/**  * Experimental extension point for OAK-1772 to try out alternative approaches for persisting in memory state  * Not part of API  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|MapFactory
block|{
specifier|private
specifier|static
name|MapFactory
name|DEFAULT
init|=
operator|new
name|MapFactory
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ConcurrentMap
argument_list|<
name|Path
argument_list|,
name|Revision
argument_list|>
name|create
parameter_list|()
block|{
return|return
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|abstract
name|ConcurrentMap
argument_list|<
name|Path
argument_list|,
name|Revision
argument_list|>
name|create
parameter_list|()
function_decl|;
specifier|private
specifier|static
name|MapFactory
name|instance
init|=
name|DEFAULT
decl_stmt|;
specifier|public
specifier|static
name|MapFactory
name|getInstance
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
specifier|public
specifier|static
name|void
name|setInstance
parameter_list|(
name|MapFactory
name|instance
parameter_list|)
block|{
name|MapFactory
operator|.
name|instance
operator|=
name|instance
expr_stmt|;
block|}
block|}
end_class

end_unit

