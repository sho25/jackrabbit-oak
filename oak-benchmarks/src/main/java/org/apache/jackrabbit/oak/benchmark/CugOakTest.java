begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|benchmark
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|GuestCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|JcrCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|OakRepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|fixture
operator|.
name|RepositoryFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeLocation
import|;
end_import

begin_comment
comment|/**  * Test the effect of multiple authorization configurations on the general read  * operations.  *  * TODO: setup configured number of cugs.  */
end_comment

begin_class
specifier|public
class|class
name|CugOakTest
extends|extends
name|CugTest
block|{
specifier|private
name|ContentRepository
name|contentRepository
decl_stmt|;
specifier|private
name|ContentSession
name|cs
decl_stmt|;
specifier|private
name|Subject
name|subject
decl_stmt|;
specifier|protected
name|CugOakTest
parameter_list|(
name|boolean
name|runAsAdmin
parameter_list|,
name|int
name|itemsToRead
parameter_list|,
name|boolean
name|singleSession
parameter_list|,
annotation|@
name|Nonnull
name|List
argument_list|<
name|String
argument_list|>
name|supportedPaths
parameter_list|,
name|boolean
name|reverseOrder
parameter_list|)
block|{
name|super
argument_list|(
name|runAsAdmin
argument_list|,
name|itemsToRead
argument_list|,
name|singleSession
argument_list|,
name|supportedPaths
argument_list|,
name|reverseOrder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Repository
index|[]
name|createRepository
parameter_list|(
name|RepositoryFixture
name|fixture
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|fixture
operator|instanceof
name|OakRepositoryFixture
condition|)
block|{
return|return
operator|(
operator|(
name|OakRepositoryFixture
operator|)
name|fixture
operator|)
operator|.
name|setUpCluster
argument_list|(
literal|1
argument_list|,
operator|new
name|JcrCreator
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Jcr
name|customize
parameter_list|(
name|Oak
name|oak
parameter_list|)
block|{
name|Jcr
name|jcr
init|=
operator|new
name|Jcr
argument_list|(
name|oak
argument_list|)
operator|.
name|with
argument_list|(
name|createSecurityProvider
argument_list|()
argument_list|)
decl_stmt|;
name|contentRepository
operator|=
name|jcr
operator|.
name|createContentRepository
argument_list|()
expr_stmt|;
return|return
name|jcr
return|;
block|}
block|}
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Fixture "
operator|+
name|fixture
operator|+
literal|" not supported for this benchmark."
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|beforeSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|beforeSuite
argument_list|()
expr_stmt|;
name|Credentials
name|creds
init|=
operator|(
name|runAsAdmin
operator|)
condition|?
name|getCredentials
argument_list|()
else|:
operator|new
name|GuestCredentials
argument_list|()
decl_stmt|;
name|cs
operator|=
name|contentRepository
operator|.
name|login
argument_list|(
name|creds
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|subject
operator|=
operator|new
name|Subject
argument_list|(
literal|true
argument_list|,
name|cs
operator|.
name|getAuthInfo
argument_list|()
operator|.
name|getPrincipals
argument_list|()
argument_list|,
name|Collections
operator|.
name|emptySet
argument_list|()
argument_list|,
name|Collections
operator|.
name|emptySet
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|afterSuite
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|afterSuite
argument_list|()
expr_stmt|;
name|cs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|runTest
parameter_list|()
throws|throws
name|Exception
block|{
name|boolean
name|logout
init|=
literal|false
decl_stmt|;
name|ContentSession
name|readSession
decl_stmt|;
if|if
condition|(
name|singleSession
condition|)
block|{
name|readSession
operator|=
name|cs
expr_stmt|;
block|}
else|else
block|{
name|readSession
operator|=
name|Subject
operator|.
name|doAs
argument_list|(
name|subject
argument_list|,
operator|new
name|PrivilegedAction
argument_list|<
name|ContentSession
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ContentSession
name|run
parameter_list|()
block|{
try|try
block|{
return|return
name|contentRepository
operator|.
name|login
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|logout
operator|=
literal|true
expr_stmt|;
block|}
name|Root
name|root
init|=
name|readSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|nodeCnt
init|=
literal|0
decl_stmt|;
name|int
name|propertyCnt
init|=
literal|0
decl_stmt|;
name|int
name|noAccess
init|=
literal|0
decl_stmt|;
name|int
name|size
init|=
name|allPaths
operator|.
name|size
argument_list|()
decl_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|itemsToRead
condition|;
name|i
operator|++
control|)
block|{
name|double
name|rand
init|=
name|size
operator|*
name|Math
operator|.
name|random
argument_list|()
decl_stmt|;
name|int
name|index
init|=
operator|(
name|int
operator|)
name|Math
operator|.
name|floor
argument_list|(
name|rand
argument_list|)
decl_stmt|;
name|String
name|path
init|=
name|allPaths
operator|.
name|get
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|TreeLocation
name|treeLocation
init|=
name|TreeLocation
operator|.
name|create
argument_list|(
name|root
argument_list|,
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|treeLocation
operator|.
name|exists
argument_list|()
condition|)
block|{
name|PropertyState
name|ps
init|=
name|treeLocation
operator|.
name|getProperty
argument_list|()
decl_stmt|;
if|if
condition|(
name|ps
operator|!=
literal|null
condition|)
block|{
name|propertyCnt
operator|++
expr_stmt|;
block|}
else|else
block|{
name|nodeCnt
operator|++
expr_stmt|;
block|}
block|}
else|else
block|{
name|noAccess
operator|++
expr_stmt|;
block|}
block|}
name|long
name|end
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
if|if
condition|(
name|doReport
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ContentSession "
operator|+
name|cs
operator|.
name|getAuthInfo
argument_list|()
operator|.
name|getUserID
argument_list|()
operator|+
literal|" reading "
operator|+
operator|(
name|itemsToRead
operator|-
name|noAccess
operator|)
operator|+
literal|" (Tree: "
operator|+
name|nodeCnt
operator|+
literal|"; PropertyState: "
operator|+
name|propertyCnt
operator|+
literal|") completed in "
operator|+
operator|(
name|end
operator|-
name|start
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|logout
condition|)
block|{
name|readSession
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

