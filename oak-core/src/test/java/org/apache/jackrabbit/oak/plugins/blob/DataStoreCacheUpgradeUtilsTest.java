begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|DataStoreCacheUpgradeUtils
operator|.
name|DOWNLOAD_DIR
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|blob
operator|.
name|DataStoreCacheUpgradeUtils
operator|.
name|UPLOAD_STAGING_DIR
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Tests for {@link DataStoreCacheUpgradeUtils}  */
end_comment

begin_class
specifier|public
class|class
name|DataStoreCacheUpgradeUtilsTest
extends|extends
name|AbstractDataStoreCacheTest
block|{
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
name|File
name|homeDir
decl_stmt|;
name|File
name|path
decl_stmt|;
name|File
name|pendingUploads
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|homeDir
operator|=
name|folder
operator|.
name|getRoot
argument_list|()
expr_stmt|;
name|path
operator|=
name|folder
operator|.
name|newFolder
argument_list|(
literal|"repository"
argument_list|,
literal|"datastore"
argument_list|)
expr_stmt|;
name|pendingUploads
operator|=
operator|new
name|File
argument_list|(
name|homeDir
operator|+
literal|"/"
operator|+
name|DataStoreCacheUpgradeUtils
operator|.
name|UPLOAD_MAP
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgradeNoDownloads
parameter_list|()
throws|throws
name|Exception
block|{
name|setupUploads
argument_list|(
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|DataStoreCacheUpgradeUtils
operator|.
name|upgrade
argument_list|(
name|homeDir
argument_list|,
name|path
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertFiles
argument_list|(
name|UPLOAD_STAGING_DIR
argument_list|,
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pendingUploads
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgradeNoDownloadsDelPendingFileFalse
parameter_list|()
throws|throws
name|Exception
block|{
name|setupUploads
argument_list|(
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|DataStoreCacheUpgradeUtils
operator|.
name|upgrade
argument_list|(
name|homeDir
argument_list|,
name|path
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertFiles
argument_list|(
name|UPLOAD_STAGING_DIR
argument_list|,
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pendingUploads
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgradeMoveDownloadsFalse
parameter_list|()
throws|throws
name|Exception
block|{
name|setupUploads
argument_list|(
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|setupDownloads
argument_list|(
literal|"4444440"
argument_list|,
literal|"5555550"
argument_list|,
literal|"6666660"
argument_list|)
expr_stmt|;
name|DataStoreCacheUpgradeUtils
operator|.
name|upgrade
argument_list|(
name|homeDir
argument_list|,
name|path
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertFiles
argument_list|(
name|UPLOAD_STAGING_DIR
argument_list|,
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pendingUploads
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFilesNoMove
argument_list|(
name|DOWNLOAD_DIR
argument_list|,
literal|"4444440"
argument_list|,
literal|"5555550"
argument_list|,
literal|"6666660"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgradeNoUploads
parameter_list|()
throws|throws
name|Exception
block|{
name|setupDownloads
argument_list|(
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|DataStoreCacheUpgradeUtils
operator|.
name|upgrade
argument_list|(
name|homeDir
argument_list|,
name|path
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertFiles
argument_list|(
name|DOWNLOAD_DIR
argument_list|,
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgradeNoUploadMap
parameter_list|()
throws|throws
name|Exception
block|{
name|setupUploads
argument_list|(
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|pendingUploads
argument_list|)
expr_stmt|;
name|DataStoreCacheUpgradeUtils
operator|.
name|upgrade
argument_list|(
name|homeDir
argument_list|,
name|path
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertFiles
argument_list|(
name|DOWNLOAD_DIR
argument_list|,
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pendingUploads
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgrade
parameter_list|()
throws|throws
name|Exception
block|{
name|upgrade
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgradeDelPendingFileFalse
parameter_list|()
throws|throws
name|Exception
block|{
name|upgrade
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|upgrade
parameter_list|(
name|boolean
name|pendingFileDelete
parameter_list|)
throws|throws
name|Exception
block|{
name|setupUploads
argument_list|(
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
name|setupDownloads
argument_list|(
literal|"4444440"
argument_list|,
literal|"5555550"
argument_list|,
literal|"6666660"
argument_list|)
expr_stmt|;
name|DataStoreCacheUpgradeUtils
operator|.
name|upgrade
argument_list|(
name|homeDir
argument_list|,
name|path
argument_list|,
literal|true
argument_list|,
name|pendingFileDelete
argument_list|)
expr_stmt|;
name|assertFiles
argument_list|(
name|UPLOAD_STAGING_DIR
argument_list|,
literal|"1111110"
argument_list|,
literal|"2222220"
argument_list|,
literal|"3333330"
argument_list|)
expr_stmt|;
if|if
condition|(
name|pendingFileDelete
condition|)
block|{
name|assertFalse
argument_list|(
name|pendingUploads
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertTrue
argument_list|(
name|pendingUploads
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertFiles
argument_list|(
name|DOWNLOAD_DIR
argument_list|,
literal|"4444440"
argument_list|,
literal|"5555550"
argument_list|,
literal|"6666660"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setupUploads
parameter_list|(
name|String
modifier|...
name|ids
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|pendingMap
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|File
name|f1
init|=
name|copyToFile
argument_list|(
name|randomStream
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|id
argument_list|)
argument_list|,
literal|4
operator|*
literal|1024
argument_list|)
argument_list|,
name|getFile
argument_list|(
name|id
argument_list|,
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|pendingMap
operator|.
name|put
argument_list|(
name|getFileName
argument_list|(
name|id
argument_list|)
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|serializeMap
argument_list|(
name|pendingMap
argument_list|,
name|pendingUploads
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setupDownloads
parameter_list|(
name|String
modifier|...
name|ids
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|copyToFile
argument_list|(
name|randomStream
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|id
argument_list|)
argument_list|,
literal|4
operator|*
literal|1024
argument_list|)
argument_list|,
name|getFile
argument_list|(
name|id
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|assertFiles
parameter_list|(
name|String
name|moveFolder
parameter_list|,
name|String
modifier|...
name|ids
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|File
name|file
init|=
name|getFile
argument_list|(
name|id
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|file
operator|=
name|getFile
argument_list|(
name|id
argument_list|,
operator|new
name|File
argument_list|(
name|path
argument_list|,
name|moveFolder
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|equal
argument_list|(
name|file
argument_list|,
name|copyToFile
argument_list|(
name|randomStream
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|id
argument_list|)
argument_list|,
literal|4
operator|*
literal|1024
argument_list|)
argument_list|,
name|folder
operator|.
name|newFile
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|assertFilesNoMove
parameter_list|(
name|String
name|moveFolder
parameter_list|,
name|String
modifier|...
name|ids
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|File
name|file
init|=
name|getFile
argument_list|(
name|id
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|equal
argument_list|(
name|file
argument_list|,
name|copyToFile
argument_list|(
name|randomStream
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|id
argument_list|)
argument_list|,
literal|4
operator|*
literal|1024
argument_list|)
argument_list|,
name|folder
operator|.
name|newFile
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|file
operator|=
name|getFile
argument_list|(
name|id
argument_list|,
operator|new
name|File
argument_list|(
name|path
argument_list|,
name|moveFolder
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|String
name|getFileName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|name
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|+
literal|"/"
operator|+
name|name
operator|.
name|substring
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
operator|+
literal|"/"
operator|+
name|name
return|;
block|}
block|}
end_class

end_unit

