begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|user
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|NoSuchWorkspaceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Authorizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|PropertyStates
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|nodetype
operator|.
name|NodeTypeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|SystemSubject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|principal
operator|.
name|EveryonePrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|util
operator|.
name|NodeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
specifier|public
class|class
name|CacheValidatorProviderTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
name|Group
name|testGroup
decl_stmt|;
specifier|private
name|Authorizable
index|[]
name|authorizables
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|testGroup
operator|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createGroup
argument_list|(
literal|"testGroup_"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|authorizables
operator|=
operator|new
name|Authorizable
index|[]
block|{
name|getTestUser
argument_list|()
block|,
name|testGroup
block|}
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
if|if
condition|(
name|testGroup
operator|!=
literal|null
condition|)
block|{
name|testGroup
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|Tree
name|getAuthorizableTree
parameter_list|(
annotation|@
name|NotNull
name|Authorizable
name|authorizable
parameter_list|)
throws|throws
name|RepositoryException
block|{
return|return
name|root
operator|.
name|getTree
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|Tree
name|getCache
parameter_list|(
annotation|@
name|NotNull
name|Authorizable
name|authorizable
parameter_list|)
throws|throws
name|Exception
block|{
name|ContentSession
name|cs
init|=
name|Subject
operator|.
name|doAs
argument_list|(
name|SystemSubject
operator|.
name|INSTANCE
argument_list|,
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|ContentSession
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ContentSession
name|run
parameter_list|()
throws|throws
name|LoginException
throws|,
name|NoSuchWorkspaceException
block|{
return|return
name|login
argument_list|(
literal|null
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
try|try
block|{
name|Root
name|r
init|=
name|cs
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|NodeUtil
name|n
init|=
operator|new
name|NodeUtil
argument_list|(
name|r
operator|.
name|getTree
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|NodeUtil
name|c
init|=
name|n
operator|.
name|getOrAddChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
decl_stmt|;
name|c
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|r
operator|.
name|commit
argument_list|(
name|CacheValidatorProvider
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|cs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
return|return
name|root
operator|.
name|getTree
argument_list|(
name|authorizable
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|getChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateCacheByName
parameter_list|()
throws|throws
name|RepositoryException
block|{
for|for
control|(
name|Authorizable
name|a
range|:
name|authorizables
control|)
block|{
try|try
block|{
name|NodeUtil
name|node
init|=
operator|new
name|NodeUtil
argument_list|(
name|getAuthorizableTree
argument_list|(
name|a
argument_list|)
argument_list|)
decl_stmt|;
name|node
operator|.
name|addChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Creating rep:cache node below a user or group must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateCacheByNodeType
parameter_list|()
throws|throws
name|RepositoryException
block|{
for|for
control|(
name|Authorizable
name|a
range|:
name|authorizables
control|)
block|{
try|try
block|{
name|NodeUtil
name|node
init|=
operator|new
name|NodeUtil
argument_list|(
name|getAuthorizableTree
argument_list|(
name|a
argument_list|)
argument_list|)
decl_stmt|;
name|NodeUtil
name|cache
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"childNode"
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
decl_stmt|;
name|cache
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Creating node with nt rep:Cache below a user or group must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangePrimaryType
parameter_list|()
throws|throws
name|RepositoryException
block|{
for|for
control|(
name|Authorizable
name|a
range|:
name|authorizables
control|)
block|{
try|try
block|{
name|NodeUtil
name|node
init|=
operator|new
name|NodeUtil
argument_list|(
name|getAuthorizableTree
argument_list|(
name|a
argument_list|)
argument_list|)
decl_stmt|;
name|NodeUtil
name|cache
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"childNode"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
decl_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|cache
operator|.
name|setName
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
expr_stmt|;
name|cache
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Changing primary type of residual node below an user/group to rep:Cache must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateCacheWithCommitInfo
parameter_list|()
throws|throws
name|RepositoryException
block|{
for|for
control|(
name|Authorizable
name|a
range|:
name|authorizables
control|)
block|{
try|try
block|{
name|NodeUtil
name|node
init|=
operator|new
name|NodeUtil
argument_list|(
name|getAuthorizableTree
argument_list|(
name|a
argument_list|)
argument_list|)
decl_stmt|;
name|NodeUtil
name|cache
init|=
name|node
operator|.
name|addChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
decl_stmt|;
name|cache
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CacheValidatorProvider
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating rep:cache node below a user or group must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateCacheBelowProfile
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|NodeUtil
name|node
init|=
operator|new
name|NodeUtil
argument_list|(
name|getAuthorizableTree
argument_list|(
name|getTestUser
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|NodeUtil
name|child
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"profile"
argument_list|,
name|NodeTypeConstants
operator|.
name|NT_OAK_UNSTRUCTURED
argument_list|)
decl_stmt|;
name|child
operator|.
name|addChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CacheValidatorProvider
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating rep:cache node below a user or group must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateCacheBelowPersistedProfile
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|NodeUtil
name|node
init|=
operator|new
name|NodeUtil
argument_list|(
name|getAuthorizableTree
argument_list|(
name|getTestUser
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|NodeUtil
name|child
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"profile"
argument_list|,
name|NodeTypeConstants
operator|.
name|NT_OAK_UNSTRUCTURED
argument_list|)
decl_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|child
operator|.
name|addChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CacheValidatorProvider
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating rep:cache node below a user or group must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testModifyCache
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|PropertyState
argument_list|>
name|props
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|props
operator|.
name|add
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|add
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|CacheConstants
operator|.
name|REP_GROUP_PRINCIPAL_NAMES
argument_list|,
name|EveryonePrincipal
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|add
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|add
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
literal|"residualProp"
argument_list|,
literal|"anyvalue"
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|cache
init|=
name|getCache
argument_list|(
name|getTestUser
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|PropertyState
name|prop
range|:
name|props
control|)
block|{
try|try
block|{
name|cache
operator|.
name|setProperty
argument_list|(
name|prop
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CacheValidatorProvider
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Modifying rep:cache node below a user or group must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNestedCache
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeUtil
name|cache
init|=
operator|new
name|NodeUtil
argument_list|(
name|getCache
argument_list|(
name|getTestUser
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|NodeUtil
name|c
init|=
name|cache
operator|.
name|getOrAddChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
decl_stmt|;
name|c
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|223
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CacheValidatorProvider
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating nested cache must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoveCache
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|cache
init|=
name|getCache
argument_list|(
name|getTestUser
argument_list|()
argument_list|)
decl_stmt|;
name|cache
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateCacheOutsideOfAuthorizable
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeUtil
name|n
init|=
operator|new
name|NodeUtil
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|NodeUtil
name|child
init|=
name|n
operator|.
name|addChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|,
name|CacheConstants
operator|.
name|NT_REP_CACHE
argument_list|)
decl_stmt|;
name|child
operator|.
name|setLong
argument_list|(
name|CacheConstants
operator|.
name|REP_EXPIRATION
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Using rep:cache/rep:Cache outside a user or group must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|Tree
name|c
init|=
name|n
operator|.
name|getTree
argument_list|()
operator|.
name|getChild
argument_list|(
name|CacheConstants
operator|.
name|REP_CACHE
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|.
name|exists
argument_list|()
condition|)
block|{
name|c
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

