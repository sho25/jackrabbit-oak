begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|http
operator|.
name|handler
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Charsets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|NodeStoreFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|Oak
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|OakBaseTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|ContentSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Root
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|jcr
operator|.
name|Jcr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|remote
operator|.
name|content
operator|.
name|ContentRemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|ISO8601
import|;
end_import

begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
operator|.
name|newArrayList
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|Unirest
operator|.
name|get
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|Unirest
operator|.
name|head
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|Unirest
operator|.
name|patch
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|Unirest
operator|.
name|post
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|RemoteServerIT
extends|extends
name|OakBaseTest
block|{
specifier|private
name|ContentRepository
name|contentRepository
decl_stmt|;
specifier|private
name|ContentSession
name|contentSession
decl_stmt|;
specifier|private
name|RemoteRepository
name|remoteRepository
decl_stmt|;
specifier|private
name|RemoteServer
name|remoteServer
decl_stmt|;
specifier|public
name|RemoteServerIT
parameter_list|(
name|NodeStoreFixture
name|fixture
parameter_list|)
block|{
name|super
argument_list|(
name|fixture
argument_list|)
expr_stmt|;
block|}
specifier|private
name|InputStream
name|asStream
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|s
operator|.
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|String
name|asString
parameter_list|(
name|Calendar
name|calendar
parameter_list|)
block|{
return|return
name|ISO8601
operator|.
name|format
argument_list|(
name|calendar
argument_list|)
return|;
block|}
specifier|private
name|RemoteServer
name|getRemoteServer
parameter_list|(
name|RemoteRepository
name|repository
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
return|return
operator|new
name|RemoteServer
argument_list|(
name|repository
argument_list|,
name|host
argument_list|,
name|port
argument_list|)
return|;
block|}
specifier|private
name|RemoteRepository
name|getRemoteRepository
parameter_list|(
name|ContentRepository
name|repository
parameter_list|)
block|{
return|return
operator|new
name|ContentRemoteRepository
argument_list|(
name|repository
argument_list|)
return|;
block|}
specifier|private
name|ContentRepository
name|getContentRepository
parameter_list|()
block|{
name|Oak
name|oak
init|=
operator|new
name|Oak
argument_list|(
name|store
argument_list|)
decl_stmt|;
operator|new
name|Jcr
argument_list|(
name|oak
argument_list|)
expr_stmt|;
return|return
name|oak
operator|.
name|createContentRepository
argument_list|()
return|;
block|}
specifier|private
name|ContentSession
name|getContentSession
parameter_list|(
name|ContentRepository
name|repository
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|repository
operator|.
name|login
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
operator|.
name|toCharArray
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|String
name|getHost
parameter_list|()
block|{
return|return
literal|"localhost"
return|;
block|}
specifier|private
name|int
name|getPort
parameter_list|()
block|{
return|return
literal|28080
return|;
block|}
specifier|private
name|String
name|resource
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
literal|"http://"
operator|+
name|getHost
argument_list|()
operator|+
literal|":"
operator|+
name|getPort
argument_list|()
operator|+
name|path
return|;
block|}
specifier|private
name|String
name|load
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
literal|null
decl_stmt|;
try|try
block|{
name|is
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|name
argument_list|)
operator|.
name|openStream
argument_list|()
expr_stmt|;
return|return
name|IOUtils
operator|.
name|toString
argument_list|(
name|is
argument_list|,
name|Charsets
operator|.
name|UTF_8
argument_list|)
return|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|is
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|contentRepository
operator|=
name|getContentRepository
argument_list|()
expr_stmt|;
name|contentSession
operator|=
name|getContentSession
argument_list|(
name|contentRepository
argument_list|)
expr_stmt|;
name|remoteRepository
operator|=
name|getRemoteRepository
argument_list|(
name|contentRepository
argument_list|)
expr_stmt|;
name|remoteServer
operator|=
name|getRemoteServer
argument_list|(
name|remoteRepository
argument_list|,
name|getHost
argument_list|()
argument_list|,
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|remoteServer
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|remoteServer
operator|.
name|stop
argument_list|()
expr_stmt|;
name|contentSession
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|payload
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|payload
operator|.
name|getString
argument_list|(
literal|"revision"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionWithoutAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTree
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeWithoutAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|response
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"oak-revision"
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeWithNotExistingTree
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeHasMoreChildren
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|body
operator|.
name|getBoolean
argument_list|(
literal|"hasMoreChildren"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeChildren
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|child
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|child
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeStringProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|"a"
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"string"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiStringProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|Type
operator|.
name|STRINGS
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"strings"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeBinaryProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARIES
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"binaryIds"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiBinaryProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"binaryId"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeLongProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|42L
argument_list|,
name|Type
operator|.
name|LONG
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"long"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42L
argument_list|,
name|property
operator|.
name|getLong
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiLongProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|4L
argument_list|,
literal|2L
argument_list|)
argument_list|,
name|Type
operator|.
name|LONGS
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"longs"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getLong
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getLong
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeDoubleProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|4.2
argument_list|,
name|Type
operator|.
name|DOUBLE
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"double"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4.2
argument_list|,
name|property
operator|.
name|getDouble
argument_list|(
literal|"value"
argument_list|)
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiDoubleProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|4.2
argument_list|,
literal|2.4
argument_list|)
argument_list|,
name|Type
operator|.
name|DOUBLES
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"doubles"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4.2
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDouble
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2.4
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getDouble
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeDateProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Calendar
name|calendar
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asString
argument_list|(
name|calendar
argument_list|)
argument_list|,
name|Type
operator|.
name|DATE
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"date"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|calendar
operator|.
name|getTimeInMillis
argument_list|()
argument_list|,
name|property
operator|.
name|getLong
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiDateProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Calendar
name|calendar
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
name|asString
argument_list|(
name|calendar
argument_list|)
argument_list|,
name|asString
argument_list|(
name|calendar
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|DATES
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"dates"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|calendar
operator|.
name|getTimeInMillis
argument_list|()
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getLong
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|calendar
operator|.
name|getTimeInMillis
argument_list|()
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getLong
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeBooleanProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|true
argument_list|,
name|Type
operator|.
name|BOOLEAN
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"boolean"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|property
operator|.
name|getBoolean
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiBooleanProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|,
name|Type
operator|.
name|BOOLEANS
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"booleans"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getBoolean
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getBoolean
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeNameProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|"value"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"name"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiNameProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|"first"
argument_list|,
literal|"second"
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"names"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreePathProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|"/value"
argument_list|,
name|Type
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"path"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/value"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiPathProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|"/first"
argument_list|,
literal|"/second"
argument_list|)
argument_list|,
name|Type
operator|.
name|PATHS
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"paths"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/first"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/second"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|"value"
argument_list|,
name|Type
operator|.
name|REFERENCE
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"reference"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|"first"
argument_list|,
literal|"second"
argument_list|)
argument_list|,
name|Type
operator|.
name|REFERENCES
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"references"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeWeakReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|"value"
argument_list|,
name|Type
operator|.
name|WEAKREFERENCE
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"weakReference"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiWeakReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|"first"
argument_list|,
literal|"second"
argument_list|)
argument_list|,
name|Type
operator|.
name|WEAKREFERENCES
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"weakReferences"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeUriProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
literal|"http://acme.org"
argument_list|,
name|Type
operator|.
name|URI
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"uri"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://acme.org"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiUriProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
literal|"http://acme.org"
argument_list|,
literal|"http://acme.com"
argument_list|)
argument_list|,
name|Type
operator|.
name|URIS
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"uris"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://acme.org"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://acme.com"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeDecimalProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|BigDecimal
operator|.
name|ZERO
argument_list|,
name|Type
operator|.
name|DECIMAL
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"decimal"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeMultiDecimalProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"property"
argument_list|,
name|asList
argument_list|(
name|BigDecimal
operator|.
name|ZERO
argument_list|,
name|BigDecimal
operator|.
name|ONE
argument_list|)
argument_list|,
name|Type
operator|.
name|DECIMALS
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|JSONObject
name|body
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|JSONObject
name|property
init|=
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"property"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"decimals"
argument_list|,
name|property
operator|.
name|getString
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|property
operator|.
name|getJSONArray
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeWithDepth
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|child
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|child
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|grandChild
init|=
name|child
operator|.
name|addChild
argument_list|(
literal|"grandChild"
argument_list|)
decl_stmt|;
name|grandChild
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"depth"
argument_list|,
literal|1
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|body
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"child"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|isNull
argument_list|(
literal|"grandChild"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeWithWithPropertyFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"foo"
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|"bar"
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"baz"
argument_list|,
literal|"baz"
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"properties"
argument_list|,
literal|"ba*"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"properties"
argument_list|,
literal|"-baz"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|body
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|has
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|has
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|has
argument_list|(
literal|"baz"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLastRevisionTreeWithWithNodeFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|foo
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|foo
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|bar
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"bar"
argument_list|)
decl_stmt|;
name|bar
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|baz
init|=
name|node
operator|.
name|addChild
argument_list|(
literal|"baz"
argument_list|)
decl_stmt|;
name|baz
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"children"
argument_list|,
literal|"ba*"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"children"
argument_list|,
literal|"-baz"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|body
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|has
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|has
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|body
operator|.
name|getJSONObject
argument_list|(
literal|"children"
argument_list|)
operator|.
name|has
argument_list|(
literal|"baz"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadTreeAtRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|String
name|revision
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"oak-revision"
argument_list|)
decl_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/{revision}/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"revision"
argument_list|,
name|revision
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|revision
argument_list|,
name|response
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"oak-revision"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadTreeAtRevisionWithInvalidRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|410
argument_list|,
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/any/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinary
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"binary"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"test"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryWithoutAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/any"
argument_list|)
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryWithInvalidId
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/any"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryRangeOffsetOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"binary"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"0123456789"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
comment|// Offset = 0
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=0"
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*0\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0123456789"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// Offset = 3
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes = 3"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*3\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"7"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3456789"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// Offset = 9 (last)
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=9"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*9\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"9"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryRangeSuffix
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"binary"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"0123456789"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
comment|// Last 10 bytes (full body)
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=-10"
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*0\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0123456789"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// Last 3 bytes
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=-3"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*7\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"789"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// Last 1 byte
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=-1"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*9\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"9"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinarySingleRange
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"binary"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"0123456789"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
comment|// Range 0-9 (full body)
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=0-9"
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*0\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0123456789"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// Range 0- (full body)
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=0-"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*0\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0123456789"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// Range 3-6
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=3- 6"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*3\\s*\\-\\s*6\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3456"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// Range 9-9
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes= 9 - 9"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"content-range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-range"
argument_list|)
operator|.
name|matches
argument_list|(
literal|"^\\s*9\\s*\\-\\s*9\\s*/\\s*(10|\\*)\\s*$"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"9"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryMultipleRanges
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"binary"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"0123456789"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=0,-1 , 2-2, 3-6"
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|contentType
init|=
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"content-type"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|contentType
argument_list|)
expr_stmt|;
name|Pattern
name|multipartDelimiterPattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^\\s*multipart/byteranges;\\s*boundary=(.+)"
argument_list|)
decl_stmt|;
name|Matcher
name|matcher
init|=
name|multipartDelimiterPattern
operator|.
name|matcher
argument_list|(
name|contentType
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
comment|//TODO: Validate response body
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadBinaryInvalidRanges
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"binary"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"0123456789"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
comment|// Unknown range unit = elephant
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"elephant=0-9"
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertNotEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|500
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Invalid range header
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"this is not correct"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|500
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Missing range unit
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"0"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|500
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Range limit greater than file size
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=0-1000"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|500
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Range start greater than end
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=9-8"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|500
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// One bad range will "break" all ranges
name|binaryResponse
operator|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|header
argument_list|(
literal|"Range"
argument_list|,
literal|"bytes=0, -1, 10000"
argument_list|)
operator|.
name|asString
argument_list|()
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|206
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|500
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExistsBinary
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
literal|"binary"
argument_list|,
name|root
operator|.
name|createBlob
argument_list|(
name|asStream
argument_list|(
literal|"0123456789"
argument_list|)
argument_list|)
argument_list|,
name|Type
operator|.
name|BINARY
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree/node"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getJSONObject
argument_list|(
literal|"properties"
argument_list|)
operator|.
name|getJSONObject
argument_list|(
literal|"binary"
argument_list|)
operator|.
name|getString
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
comment|// Offset = 0
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|head
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bytes"
argument_list|,
name|binaryResponse
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"accept-ranges"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExistsBinaryWithInvalidId
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|response
init|=
name|head
argument_list|(
name|resource
argument_list|(
literal|"/binaries/any"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExistsBinaryWithoutAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|response
init|=
name|head
argument_list|(
name|resource
argument_list|(
literal|"/binaries/any"
argument_list|)
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateBinary
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|post
argument_list|(
name|resource
argument_list|(
literal|"/binaries"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
literal|"body"
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|binaryId
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
operator|.
name|getString
argument_list|(
literal|"binaryId"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|binaryId
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|HttpResponse
argument_list|<
name|String
argument_list|>
name|binaryResponse
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/binaries/{binaryId}"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|routeParam
argument_list|(
literal|"binaryId"
argument_list|,
name|binaryId
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|binaryResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"body"
argument_list|,
name|binaryResponse
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateBinaryWithoutAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|post
argument_list|(
name|resource
argument_list|(
literal|"/binaries"
argument_list|)
argument_list|)
operator|.
name|body
argument_list|(
literal|"body"
argument_list|)
operator|.
name|asJson
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddNodeBinaryProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeBinaryProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddNodeMultiBinaryProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiBinaryProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddNodeBooleanProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeBooleanProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddNodeMultiBooleanProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiBooleanProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddNodeDateProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeDateProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddNodeMultiDateProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiDateProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddDecimalProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeDecimalProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiDecimalProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiDecimalProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddDoubleProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeDoubleProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiDoubleProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiDoubleProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddLongProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeLongProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiLongProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiLongProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddNameProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeNameProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiNameProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiNameProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddPathProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodePathProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiPathProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiPathProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeReferenceProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiReferenceProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddStringProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeStringProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiStringProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiStringProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddUriProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeUriProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiUriProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiUriProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddWeakReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeWeakReferenceProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchLastRevisionAddMultiWeakReferenceProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|patch
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|body
argument_list|(
name|load
argument_list|(
literal|"addNodeMultiWeakReferenceProperty.json"
argument_list|)
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchLastRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|Root
name|root
init|=
name|contentSession
operator|.
name|getLatestRoot
argument_list|()
decl_stmt|;
name|Tree
name|test
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
operator|.
name|addChild
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|test
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|n1
init|=
name|test
operator|.
name|addChild
argument_list|(
literal|"one"
argument_list|)
decl_stmt|;
name|n1
operator|.
name|setProperty
argument_list|(
literal|"name"
argument_list|,
literal|"one"
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|n1
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|Tree
name|n2
init|=
name|test
operator|.
name|addChild
argument_list|(
literal|"two"
argument_list|)
decl_stmt|;
name|n2
operator|.
name|setProperty
argument_list|(
literal|"name"
argument_list|,
literal|"two"
argument_list|,
name|Type
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|n2
operator|.
name|setProperty
argument_list|(
literal|"jcr:primaryType"
argument_list|,
literal|"nt:unstructured"
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"query"
argument_list|,
literal|"select name from nt:unstructured as node where jcr:path like '/test/%'"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"language"
argument_list|,
literal|"sql"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"offset"
argument_list|,
literal|0
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"limit"
argument_list|,
literal|10
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|results
init|=
name|response
operator|.
name|getBody
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
operator|.
name|getLong
argument_list|(
literal|"total"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
name|getStringArray
argument_list|(
name|results
argument_list|,
literal|"columns"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|columns
operator|.
name|contains
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|columns
operator|.
name|contains
argument_list|(
literal|"jcr:path"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectors
init|=
name|getStringArray
argument_list|(
name|results
argument_list|,
literal|"selectors"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|selectors
operator|.
name|contains
argument_list|(
literal|"node"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getStringArray
parameter_list|(
name|JSONObject
name|parent
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
name|newArrayList
argument_list|()
decl_stmt|;
name|JSONArray
name|array
init|=
name|parent
operator|.
name|getJSONArray
argument_list|(
name|name
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|array
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|array
operator|.
name|getString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchLastRevisionWithoutAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"query"
argument_list|,
literal|"select name from nt:unstructured as node where jcr:path like '/test/%'"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"language"
argument_list|,
literal|"sql"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"offset"
argument_list|,
literal|0
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"limit"
argument_list|,
literal|10
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchLastRevisionWithoutQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"language"
argument_list|,
literal|"sql"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"offset"
argument_list|,
literal|0
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"limit"
argument_list|,
literal|10
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchLastRevisionWithoutLanguage
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"query"
argument_list|,
literal|"select name from nt:unstructured as node where jcr:path like '/test/%'"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"offset"
argument_list|,
literal|0
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"limit"
argument_list|,
literal|10
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchLastRevisionWithoutOffset
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"query"
argument_list|,
literal|"select name from nt:unstructured as node where jcr:path like '/test/%'"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"language"
argument_list|,
literal|"sql"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"limit"
argument_list|,
literal|10
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchLastRevisionWithoutLimit
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpResponse
argument_list|<
name|JsonNode
argument_list|>
name|response
init|=
name|get
argument_list|(
name|resource
argument_list|(
literal|"/revisions/last/tree"
argument_list|)
argument_list|)
operator|.
name|basicAuth
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"query"
argument_list|,
literal|"select name from nt:unstructured as node where jcr:path like '/test/%'"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"language"
argument_list|,
literal|"sql"
argument_list|)
operator|.
name|queryString
argument_list|(
literal|"offset"
argument_list|,
literal|0
argument_list|)
operator|.
name|asJson
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

