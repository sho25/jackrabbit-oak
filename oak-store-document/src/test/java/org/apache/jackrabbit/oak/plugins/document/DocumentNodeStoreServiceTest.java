begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FilenameUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
operator|.
name|MongoDocumentStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|mongo
operator|.
name|MongoDocumentStoreTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|document
operator|.
name|spi
operator|.
name|JournalPropertyService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|stats
operator|.
name|StatisticsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|MockOsgi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|testing
operator|.
name|mock
operator|.
name|osgi
operator|.
name|junit
operator|.
name|OsgiContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
specifier|public
class|class
name|DocumentNodeStoreServiceTest
block|{
annotation|@
name|Rule
specifier|public
specifier|final
name|OsgiContext
name|context
init|=
operator|new
name|OsgiContext
argument_list|()
decl_stmt|;
annotation|@
name|Rule
specifier|public
specifier|final
name|TemporaryFolder
name|target
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|DocumentNodeStoreService
name|service
init|=
operator|new
name|DocumentNodeStoreService
argument_list|()
decl_stmt|;
specifier|private
name|String
name|repoHome
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|assumeTrue
argument_list|(
name|MongoUtils
operator|.
name|isAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerService
argument_list|(
name|StatisticsProvider
operator|.
name|class
argument_list|,
name|StatisticsProvider
operator|.
name|NOOP
argument_list|)
expr_stmt|;
name|MockOsgi
operator|.
name|injectServices
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|)
expr_stmt|;
name|repoHome
operator|=
name|target
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|MockOsgi
operator|.
name|deactivate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|)
expr_stmt|;
name|MongoUtils
operator|.
name|dropCollections
argument_list|(
name|MongoUtils
operator|.
name|DB
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|persistentCache
parameter_list|()
block|{
name|String
name|persistentCache
init|=
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"cache"
argument_list|)
decl_stmt|;
name|assertPersistentCachePath
argument_list|(
name|persistentCache
argument_list|,
name|persistentCache
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|journalCache
parameter_list|()
block|{
name|String
name|journalCache
init|=
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"diff-cache"
argument_list|)
decl_stmt|;
name|assertJournalCachePath
argument_list|(
name|journalCache
argument_list|,
name|journalCache
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|persistentCacheWithRepositoryHome
parameter_list|()
block|{
name|assertPersistentCachePath
argument_list|(
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"cache"
argument_list|)
argument_list|,
literal|"cache"
argument_list|,
name|repoHome
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|journalCacheWithRepositoryHome
parameter_list|()
block|{
name|assertJournalCachePath
argument_list|(
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"diff-cache"
argument_list|)
argument_list|,
literal|"diff-cache"
argument_list|,
name|repoHome
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|defaultPersistentCacheWithRepositoryHome
parameter_list|()
block|{
name|String
name|persistentCache
init|=
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"cache"
argument_list|)
decl_stmt|;
name|assertPersistentCachePath
argument_list|(
name|persistentCache
argument_list|,
literal|""
argument_list|,
name|repoHome
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|defaultJournalCacheWithRepositoryHome
parameter_list|()
block|{
name|String
name|journalCache
init|=
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"diff-cache"
argument_list|)
decl_stmt|;
name|assertJournalCachePath
argument_list|(
name|journalCache
argument_list|,
literal|""
argument_list|,
name|repoHome
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|disablePersistentCacheWithRepositoryHome
parameter_list|()
block|{
name|String
name|persistentCache
init|=
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"cache"
argument_list|)
decl_stmt|;
name|assertNoPersistentCachePath
argument_list|(
name|persistentCache
argument_list|,
literal|"-"
argument_list|,
name|repoHome
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|disableJournalCacheWithRepositoryHome
parameter_list|()
block|{
name|String
name|journalCache
init|=
name|FilenameUtils
operator|.
name|concat
argument_list|(
name|repoHome
argument_list|,
literal|"diff-cache"
argument_list|)
decl_stmt|;
name|assertNoJournalCachePath
argument_list|(
name|journalCache
argument_list|,
literal|"-"
argument_list|,
name|repoHome
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|journalPropertyTracker
parameter_list|()
throws|throws
name|Exception
block|{
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|newConfig
argument_list|(
name|repoHome
argument_list|)
argument_list|)
expr_stmt|;
name|DocumentNodeStore
name|store
init|=
name|context
operator|.
name|getService
argument_list|(
name|DocumentNodeStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|store
operator|.
name|getJournalPropertyHandlerFactory
argument_list|()
operator|.
name|getServiceCount
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerService
argument_list|(
name|JournalPropertyService
operator|.
name|class
argument_list|,
name|mock
argument_list|(
name|JournalPropertyService
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getJournalPropertyHandlerFactory
argument_list|()
operator|.
name|getServiceCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|setUpdateLimit
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
name|DocumentNodeStoreService
operator|.
name|PROP_UPDATE_LIMIT
argument_list|,
literal|17
argument_list|)
expr_stmt|;
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|DocumentNodeStore
name|store
init|=
name|context
operator|.
name|getService
argument_list|(
name|DocumentNodeStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|store
operator|.
name|getUpdateLimit
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|keepAlive
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
name|DocumentNodeStoreService
operator|.
name|PROP_SO_KEEP_ALIVE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|DocumentNodeStore
name|store
init|=
name|context
operator|.
name|getService
argument_list|(
name|DocumentNodeStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|MongoDocumentStore
name|mds
init|=
name|getMongoDocumentStore
argument_list|(
name|store
argument_list|)
decl_stmt|;
name|DB
name|db
init|=
name|MongoDocumentStoreTestHelper
operator|.
name|getDB
argument_list|(
name|mds
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|db
operator|.
name|getMongo
argument_list|()
operator|.
name|getMongoOptions
argument_list|()
operator|.
name|isSocketKeepAlive
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|nonContinuousRGCDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
for|for
control|(
name|Runnable
name|r
range|:
name|context
operator|.
name|getServices
argument_list|(
name|Runnable
operator|.
name|class
argument_list|,
literal|null
argument_list|)
control|)
block|{
name|assertNotEquals
argument_list|(
name|r
operator|.
name|getClass
argument_list|()
argument_list|,
name|DocumentNodeStoreService
operator|.
name|RevisionGCJob
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|continuousRGC
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
name|DocumentNodeStoreService
operator|.
name|PROP_VER_GC_CONTINUOUS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|boolean
name|jobScheduled
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Runnable
name|r
range|:
name|context
operator|.
name|getServices
argument_list|(
name|Runnable
operator|.
name|class
argument_list|,
literal|null
argument_list|)
control|)
block|{
name|jobScheduled
operator||=
name|r
operator|.
name|getClass
argument_list|()
operator|.
name|equals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|RevisionGCJob
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|jobScheduled
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|continuousRGCJobAsSupplier
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
name|DocumentNodeStoreService
operator|.
name|PROP_VER_GC_CONTINUOUS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|Runnable
name|rgcJob
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Runnable
name|r
range|:
name|context
operator|.
name|getServices
argument_list|(
name|Runnable
operator|.
name|class
argument_list|,
literal|null
argument_list|)
control|)
block|{
if|if
condition|(
name|r
operator|.
name|getClass
argument_list|()
operator|.
name|equals
argument_list|(
name|DocumentNodeStoreService
operator|.
name|RevisionGCJob
operator|.
name|class
argument_list|)
condition|)
block|{
name|rgcJob
operator|=
name|r
expr_stmt|;
block|}
block|}
name|assertNotNull
argument_list|(
name|rgcJob
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rgcJob
operator|instanceof
name|Supplier
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Supplier
operator|)
name|rgcJob
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|MongoDocumentStore
name|getMongoDocumentStore
parameter_list|(
name|DocumentNodeStore
name|s
parameter_list|)
block|{
try|try
block|{
name|Field
name|f
init|=
name|s
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"nonLeaseCheckingStore"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
operator|(
name|MongoDocumentStore
operator|)
name|f
operator|.
name|get
argument_list|(
name|s
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
specifier|private
name|void
name|assertPersistentCachePath
parameter_list|(
name|String
name|expectedPath
parameter_list|,
name|String
name|persistentCache
parameter_list|,
name|String
name|repoHome
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"persistentCache"
argument_list|,
name|persistentCache
argument_list|)
expr_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"journalCache"
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
name|assertCachePath
argument_list|(
name|expectedPath
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertJournalCachePath
parameter_list|(
name|String
name|expectedPath
parameter_list|,
name|String
name|journalCache
parameter_list|,
name|String
name|repoHome
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"journalCache"
argument_list|,
name|journalCache
argument_list|)
expr_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"persistentCache"
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
name|assertCachePath
argument_list|(
name|expectedPath
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertCachePath
parameter_list|(
name|String
name|expectedPath
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
block|{
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|expectedPath
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|context
operator|.
name|getService
argument_list|(
name|NodeStore
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// must exist after service was activated
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|expectedPath
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertNoPersistentCachePath
parameter_list|(
name|String
name|unexpectedPath
parameter_list|,
name|String
name|persistentCache
parameter_list|,
name|String
name|repoHome
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"persistentCache"
argument_list|,
name|persistentCache
argument_list|)
expr_stmt|;
name|assertNoCachePath
argument_list|(
name|unexpectedPath
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertNoJournalCachePath
parameter_list|(
name|String
name|unexpectedPath
parameter_list|,
name|String
name|journalCache
parameter_list|,
name|String
name|repoHome
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|newConfig
argument_list|(
name|repoHome
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"journalCache"
argument_list|,
name|journalCache
argument_list|)
expr_stmt|;
name|assertNoCachePath
argument_list|(
name|unexpectedPath
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertNoCachePath
parameter_list|(
name|String
name|unexpectedPath
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
block|{
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|unexpectedPath
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|MockOsgi
operator|.
name|activate
argument_list|(
name|service
argument_list|,
name|context
operator|.
name|bundleContext
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|context
operator|.
name|getService
argument_list|(
name|NodeStore
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// must not exist after service was activated
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|unexpectedPath
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// also assert there is no dash directory
comment|// the dash character is used to disable a persistent cache
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|repoHome
argument_list|,
literal|"-"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newConfig
parameter_list|(
name|String
name|repoHome
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"repository.home"
argument_list|,
name|repoHome
argument_list|)
expr_stmt|;
name|config
operator|.
name|put
argument_list|(
literal|"db"
argument_list|,
name|MongoUtils
operator|.
name|DB
argument_list|)
expr_stmt|;
return|return
name|config
return|;
block|}
block|}
end_class

end_unit

