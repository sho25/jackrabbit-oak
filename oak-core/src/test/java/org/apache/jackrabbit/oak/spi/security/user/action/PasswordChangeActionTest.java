begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|ConstraintViolationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|api
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|AbstractSecurityTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
specifier|public
class|class
name|PasswordChangeActionTest
extends|extends
name|AbstractSecurityTest
block|{
specifier|private
name|PasswordChangeAction
name|pwChangeAction
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|pwChangeAction
operator|=
operator|new
name|PasswordChangeAction
argument_list|()
expr_stmt|;
name|pwChangeAction
operator|.
name|init
argument_list|(
name|getSecurityProvider
argument_list|()
argument_list|,
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullPassword
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|pwChangeAction
operator|.
name|onPasswordChange
argument_list|(
name|getTestUser
argument_list|()
argument_list|,
literal|null
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"ConstraintViolationException expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConstraintViolationException
name|e
parameter_list|)
block|{
comment|// success
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSamePassword
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|User
name|user
init|=
name|getTestUser
argument_list|()
decl_stmt|;
name|String
name|pw
init|=
name|user
operator|.
name|getID
argument_list|()
decl_stmt|;
name|pwChangeAction
operator|.
name|onPasswordChange
argument_list|(
name|user
argument_list|,
name|pw
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"ConstraintViolationException expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConstraintViolationException
name|e
parameter_list|)
block|{
comment|// success
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPasswordChange
parameter_list|()
throws|throws
name|Exception
block|{
name|pwChangeAction
operator|.
name|onPasswordChange
argument_list|(
name|getTestUser
argument_list|()
argument_list|,
literal|"changedPassword"
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUserWithoutPassword
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|uid
init|=
literal|"testUser"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
name|User
name|user
init|=
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|createUser
argument_list|(
name|uid
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|pwChangeAction
operator|.
name|onPasswordChange
argument_list|(
name|user
argument_list|,
literal|"changedPassword"
argument_list|,
name|root
argument_list|,
name|getNamePathMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

