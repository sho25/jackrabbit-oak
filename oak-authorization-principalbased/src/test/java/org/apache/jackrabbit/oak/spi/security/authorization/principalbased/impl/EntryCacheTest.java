begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|nodetype
operator|.
name|NodeTypeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|restriction
operator|.
name|RestrictionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|nodetype
operator|.
name|NodeTypeConstants
operator|.
name|NT_OAK_UNSTRUCTURED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|MIX_REP_PRINCIPAL_BASED_MIXIN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|NT_REP_PRINCIPAL_ENTRY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|NT_REP_PRINCIPAL_POLICY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_EFFECTIVE_PATH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_PRINCIPAL_POLICY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|principalbased
operator|.
name|impl
operator|.
name|Constants
operator|.
name|REP_PRIVILEGES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|privilege
operator|.
name|PrivilegeConstants
operator|.
name|JCR_READ
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|EntryCacheTest
extends|extends
name|AbstractPrincipalBasedTest
block|{
specifier|private
name|RestrictionProvider
name|restrictionProvider
decl_stmt|;
specifier|private
name|String
name|accessControlledPath
decl_stmt|;
specifier|private
name|Tree
name|accessControlledTree
decl_stmt|;
specifier|private
name|Tree
name|policyTree
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|restrictionProvider
operator|=
name|getConfig
argument_list|(
name|AuthorizationConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getRestrictionProvider
argument_list|()
expr_stmt|;
name|accessControlledPath
operator|=
name|getNamePathMapper
argument_list|()
operator|.
name|getOakPath
argument_list|(
name|getTestSystemUser
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|accessControlledTree
operator|=
name|root
operator|.
name|getTree
argument_list|(
name|accessControlledPath
argument_list|)
expr_stmt|;
name|TreeUtil
operator|.
name|addMixin
argument_list|(
name|accessControlledTree
argument_list|,
name|MIX_REP_PRINCIPAL_BASED_MIXIN
argument_list|,
name|root
operator|.
name|getTree
argument_list|(
name|NodeTypeConstants
operator|.
name|NODE_TYPES_PATH
argument_list|)
argument_list|,
literal|"uid"
argument_list|)
expr_stmt|;
name|policyTree
operator|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|accessControlledTree
argument_list|,
name|REP_PRINCIPAL_POLICY
argument_list|,
name|NT_REP_PRINCIPAL_POLICY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoEntries
parameter_list|()
block|{
name|EntryCache
name|cache
init|=
operator|new
name|EntryCache
argument_list|(
name|root
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|accessControlledPath
argument_list|)
argument_list|,
name|restrictionProvider
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cache
operator|.
name|getEntries
argument_list|(
name|TEST_OAK_PATH
argument_list|)
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNonEntryChild
parameter_list|()
throws|throws
name|Exception
block|{
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|policyTree
argument_list|,
literal|"invalidChild"
argument_list|,
name|NT_OAK_UNSTRUCTURED
argument_list|)
expr_stmt|;
name|EntryCache
name|cache
init|=
operator|new
name|EntryCache
argument_list|(
name|root
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|accessControlledPath
argument_list|)
argument_list|,
name|restrictionProvider
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cache
operator|.
name|getEntries
argument_list|(
name|TEST_OAK_PATH
argument_list|)
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMissingEntriesForTestPath
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|entry
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|policyTree
argument_list|,
literal|"entry1"
argument_list|,
name|NT_REP_PRINCIPAL_ENTRY
argument_list|)
decl_stmt|;
name|entry
operator|.
name|setProperty
argument_list|(
name|REP_EFFECTIVE_PATH
argument_list|,
name|PathUtils
operator|.
name|ROOT_PATH
argument_list|,
name|Type
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setProperty
argument_list|(
name|REP_PRIVILEGES
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|JCR_READ
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
expr_stmt|;
name|EntryCache
name|cache
init|=
operator|new
name|EntryCache
argument_list|(
name|root
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|accessControlledPath
argument_list|)
argument_list|,
name|restrictionProvider
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cache
operator|.
name|getEntries
argument_list|(
name|TEST_OAK_PATH
argument_list|)
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEntriesForTestPath
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|entry
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|policyTree
argument_list|,
literal|"entry1"
argument_list|,
name|NT_REP_PRINCIPAL_ENTRY
argument_list|)
decl_stmt|;
name|entry
operator|.
name|setProperty
argument_list|(
name|REP_EFFECTIVE_PATH
argument_list|,
name|TEST_OAK_PATH
argument_list|,
name|Type
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setProperty
argument_list|(
name|REP_PRIVILEGES
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|JCR_READ
argument_list|)
argument_list|,
name|Type
operator|.
name|NAMES
argument_list|)
expr_stmt|;
name|EntryCache
name|cache
init|=
operator|new
name|EntryCache
argument_list|(
name|root
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|accessControlledPath
argument_list|)
argument_list|,
name|restrictionProvider
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cache
operator|.
name|getEntries
argument_list|(
name|TEST_OAK_PATH
argument_list|)
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

