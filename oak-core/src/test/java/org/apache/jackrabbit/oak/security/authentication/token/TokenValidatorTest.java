begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|JcrConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|CommitFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|commons
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|memory
operator|.
name|PropertyStates
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|plugins
operator|.
name|tree
operator|.
name|TreeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|commit
operator|.
name|Validator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|nodetype
operator|.
name|NodeTypeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|ConfigurationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|TokenConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authentication
operator|.
name|token
operator|.
name|TokenInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|user
operator|.
name|util
operator|.
name|PasswordUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|ISO8601
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jetbrains
operator|.
name|annotations
operator|.
name|NotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|Type
operator|.
name|DATE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|TokenValidatorTest
extends|extends
name|AbstractTokenTest
block|{
specifier|private
name|String
name|userId
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|userId
operator|=
name|getTestUser
argument_list|()
operator|.
name|getID
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|String
name|getDateValue
parameter_list|()
block|{
name|Calendar
name|calendar
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|calendar
operator|.
name|setTimeInMillis
argument_list|(
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ISO8601
operator|.
name|format
argument_list|(
name|calendar
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateReservedKeyProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tree
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
argument_list|,
literal|"testNode"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
decl_stmt|;
try|try
block|{
name|tree
operator|.
name|setProperty
argument_list|(
name|TOKEN_ATTRIBUTE_KEY
argument_list|,
literal|"anyValue"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The reserved token key property must not used with other node types."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|tree
operator|.
name|remove
argument_list|()
expr_stmt|;
if|if
condition|(
name|root
operator|.
name|hasPendingChanges
argument_list|()
condition|)
block|{
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateReservedKeyProperty2
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tree
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
argument_list|,
literal|"testNode"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
decl_stmt|;
try|try
block|{
name|tree
operator|.
name|setProperty
argument_list|(
name|TOKEN_ATTRIBUTE_KEY
argument_list|,
literal|"anyValue"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"The reserved token key property must only be created by the TokenProvider."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|63
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|tree
operator|.
name|remove
argument_list|()
expr_stmt|;
if|if
condition|(
name|root
operator|.
name|hasPendingChanges
argument_list|()
condition|)
block|{
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangingTokenKey
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|info
argument_list|)
decl_stmt|;
try|try
block|{
name|tokenTree
operator|.
name|setProperty
argument_list|(
name|TOKEN_ATTRIBUTE_KEY
argument_list|,
name|PasswordUtil
operator|.
name|buildPasswordHash
argument_list|(
literal|"anotherValue"
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The token key must never be modified."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|61
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPlaintextTokenKey
parameter_list|()
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|info
argument_list|)
decl_stmt|;
try|try
block|{
name|tokenTree
operator|.
name|setProperty
argument_list|(
name|TOKEN_ATTRIBUTE_KEY
argument_list|,
literal|"anotherValue"
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The token key must not be plaintext."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|66
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testManuallyModifyExpirationDate
parameter_list|()
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|info
argument_list|)
decl_stmt|;
try|try
block|{
name|tokenTree
operator|.
name|setProperty
argument_list|(
name|TOKEN_ATTRIBUTE_EXPIRY
argument_list|,
name|getDateValue
argument_list|()
argument_list|,
name|DATE
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"The token expiry must not manually be changed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|63
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testModifyExpirationDate
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|info
argument_list|)
decl_stmt|;
name|tokenTree
operator|.
name|setProperty
argument_list|(
name|TOKEN_ATTRIBUTE_EXPIRY
argument_list|,
name|getDateValue
argument_list|()
argument_list|,
name|DATE
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateTokenAtInvalidLocationBelowTestNode
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|tokenProvider
operator|.
name|getTokenInfo
argument_list|(
name|info
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|tree
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
argument_list|,
literal|"testNode"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
decl_stmt|;
try|try
block|{
name|replaceTokenTree
argument_list|(
name|info
argument_list|,
name|tree
argument_list|,
name|TOKEN_NT_NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating a new token not  at '/testNode' must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|64
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|tree
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateTokenAtInvalidLocationInsideUser
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|tokenProvider
operator|.
name|getTokenInfo
argument_list|(
name|info
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Tree
name|tree
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|userTree
argument_list|,
literal|"testNode"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
decl_stmt|;
try|try
block|{
name|replaceTokenTree
argument_list|(
name|info
argument_list|,
name|tree
argument_list|,
name|TOKEN_NT_NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating a new token '"
operator|+
name|tree
operator|.
name|getPath
argument_list|()
operator|+
literal|"' must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|65
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|tree
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateTokenAtInvalidLocationInsideUser2
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|tokenProvider
operator|.
name|getTokenInfo
argument_list|(
name|info
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Tree
name|tree
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|userTree
argument_list|,
name|TOKENS_NODE_NAME
argument_list|,
name|TOKENS_NT_NAME
argument_list|)
decl_stmt|;
try|try
block|{
name|tree
operator|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|tree
argument_list|,
literal|"invalid"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
expr_stmt|;
name|replaceTokenTree
argument_list|(
name|info
argument_list|,
name|tree
argument_list|,
name|TOKEN_NT_NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating a new token '"
operator|+
name|tree
operator|.
name|getPath
argument_list|()
operator|+
literal|"' must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|65
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|tree
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testManuallyCreateToken
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|tokenProvider
operator|.
name|getTokenInfo
argument_list|(
name|info
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
comment|// create a valid token node using the test root
name|replaceTokenTree
argument_list|(
name|info
argument_list|,
name|userTree
operator|.
name|getChild
argument_list|(
name|TOKENS_NODE_NAME
argument_list|)
argument_list|,
name|TOKEN_NT_NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Manually creating a token node must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|63
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateTokenWithInvalidNodeType
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|tokenProvider
operator|.
name|getTokenInfo
argument_list|(
name|info
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Tree
name|t
init|=
literal|null
decl_stmt|;
try|try
block|{
name|t
operator|=
name|replaceTokenTree
argument_list|(
name|info
argument_list|,
name|userTree
operator|.
name|getChild
argument_list|(
name|TOKENS_NODE_NAME
argument_list|)
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The token node must be of type rep:Token."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|t
operator|!=
literal|null
condition|)
block|{
name|t
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoveTokenNode
parameter_list|()
throws|throws
name|Exception
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|getTokenTree
argument_list|(
name|info
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalidTokenParentNode
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Tree
name|node
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|userTree
argument_list|,
literal|"testNode"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
decl_stmt|;
try|try
block|{
comment|// Invalid node type of '.tokens' node
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|node
argument_list|,
name|TOKENS_NODE_NAME
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Creating a new token '"
operator|+
name|node
operator|.
name|getPath
argument_list|()
operator|+
literal|"' must fail."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|68
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|node
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testManuallyCreateTokenParent
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|userTree
argument_list|,
name|TOKENS_NODE_NAME
argument_list|,
name|TOKENS_NT_NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testManuallyCreateTokenParentWithNtUnstructured
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|userTree
argument_list|,
name|TOKENS_NODE_NAME
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTokensNodeBelowRoot
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|rootNode
init|=
name|root
operator|.
name|getTree
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|Tree
name|n
init|=
literal|null
decl_stmt|;
try|try
block|{
comment|// Invalid node type of '.tokens' node
name|n
operator|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|rootNode
argument_list|,
name|TOKENS_NODE_NAME
argument_list|,
name|TOKENS_NT_NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"The token parent node must be located below the configured user root."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|64
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|n
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTokensNodeAtInvalidPathBelowUser
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Tree
name|n
init|=
literal|null
decl_stmt|;
try|try
block|{
comment|// Invalid node type of '.tokens' node
name|n
operator|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|userTree
argument_list|,
literal|"test"
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
expr_stmt|;
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|n
argument_list|,
name|TOKENS_NODE_NAME
argument_list|,
name|TOKENS_NT_NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"The token parent node must be located below the user home node."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|68
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|n
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangeTokenParentPrimaryTypeToRepUnstructured
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Tree
name|node
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|userTree
argument_list|,
name|TOKENS_NODE_NAME
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|)
decl_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|TOKENS_NT_NAME
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangeTokenParentPrimaryType
parameter_list|()
block|{
name|TokenInfo
name|info
init|=
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
decl_stmt|;
try|try
block|{
name|Tree
name|tokensTree
init|=
name|getTokenTree
argument_list|(
name|info
argument_list|)
operator|.
name|getParent
argument_list|()
decl_stmt|;
name|tokensTree
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"The primary type of the token parent must not be changed from rep:Unstructured to another type."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|69
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangeRegularRepUnstructuredPrimaryType
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|userTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getUserManager
argument_list|(
name|root
argument_list|)
operator|.
name|getAuthorizable
argument_list|(
name|userId
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Tree
name|n
init|=
name|TreeUtil
operator|.
name|getOrAddChild
argument_list|(
name|userTree
argument_list|,
literal|"test"
argument_list|,
name|NodeTypeConstants
operator|.
name|NT_REP_UNSTRUCTURED
argument_list|)
decl_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|n
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangeToReservedTokenNodeType
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|parentPath
init|=
name|getTestUser
argument_list|()
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|TokenConstants
operator|.
name|TOKENS_NODE_NAME
decl_stmt|;
name|String
name|path
init|=
name|parentPath
operator|+
literal|"/node"
decl_stmt|;
try|try
block|{
name|Tree
name|t
init|=
name|root
operator|.
name|getTree
argument_list|(
name|getTestUser
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|addChild
argument_list|(
name|TokenConstants
operator|.
name|TOKENS_NODE_NAME
argument_list|)
decl_stmt|;
name|t
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|t
operator|.
name|addChild
argument_list|(
literal|"node"
argument_list|)
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|JcrConstants
operator|.
name|NT_UNSTRUCTURED
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
name|Tree
name|node
init|=
name|root
operator|.
name|getTree
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_PRIMARYTYPE
argument_list|,
name|TokenConstants
operator|.
name|TOKEN_NT_NAME
argument_list|,
name|Type
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
name|JcrConstants
operator|.
name|JCR_UUID
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
name|TokenConstants
operator|.
name|TOKEN_ATTRIBUTE_KEY
argument_list|,
name|PasswordUtil
operator|.
name|buildPasswordHash
argument_list|(
literal|"key"
argument_list|)
argument_list|)
expr_stmt|;
name|node
operator|.
name|setProperty
argument_list|(
name|TokenConstants
operator|.
name|TOKEN_ATTRIBUTE_EXPIRY
argument_list|,
name|getDateValue
argument_list|()
argument_list|,
name|Type
operator|.
name|DATE
argument_list|)
expr_stmt|;
name|root
operator|.
name|commit
argument_list|(
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|62
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|root
operator|.
name|getTree
argument_list|(
name|parentPath
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|root
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReservedPropertyAddedValidParent
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tokenTree
init|=
name|TreeUtil
operator|.
name|addChild
argument_list|(
name|root
operator|.
name|getTree
argument_list|(
name|PathUtils
operator|.
name|ROOT_PATH
argument_list|)
argument_list|,
literal|"name"
argument_list|,
name|TOKEN_NT_NAME
argument_list|)
decl_stmt|;
name|Validator
name|v
init|=
name|createRootValidator
argument_list|(
name|tokenTree
argument_list|,
name|tokenTree
argument_list|)
decl_stmt|;
name|v
operator|.
name|propertyAdded
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|TokenConstants
operator|.
name|TOKEN_ATTRIBUTE_EXPIRY
argument_list|,
literal|"anyValue"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testReservedPropertyAddedInvalidParent
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|rootTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|PathUtils
operator|.
name|ROOT_PATH
argument_list|)
decl_stmt|;
try|try
block|{
name|Validator
name|v
init|=
name|createRootValidator
argument_list|(
name|rootTree
argument_list|,
name|rootTree
argument_list|)
decl_stmt|;
name|v
operator|.
name|propertyAdded
argument_list|(
name|PropertyStates
operator|.
name|createProperty
argument_list|(
name|TokenConstants
operator|.
name|TOKEN_ATTRIBUTE_EXPIRY
argument_list|,
literal|"anyValue"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAddTokenTreeMissingKey
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
argument_list|)
decl_stmt|;
name|tokenTree
operator|.
name|removeProperty
argument_list|(
name|TokenConstants
operator|.
name|TOKEN_ATTRIBUTE_KEY
argument_list|)
expr_stmt|;
name|Tree
name|rootTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|PathUtils
operator|.
name|ROOT_PATH
argument_list|)
decl_stmt|;
try|try
block|{
name|Validator
name|v
init|=
name|createValidator
argument_list|(
name|rootTree
argument_list|,
name|rootTree
argument_list|,
name|tokenTree
operator|.
name|getParent
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|v
operator|.
name|childNodeAdded
argument_list|(
name|tokenTree
operator|.
name|getName
argument_list|()
argument_list|,
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|tokenTree
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|66
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAddTokenTreeMissingTokensParent
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
argument_list|)
decl_stmt|;
name|root
operator|.
name|move
argument_list|(
name|tokenTree
operator|.
name|getPath
argument_list|()
argument_list|,
name|PathUtils
operator|.
name|concat
argument_list|(
name|getTestUser
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|tokenTree
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Tree
name|rootTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|PathUtils
operator|.
name|ROOT_PATH
argument_list|)
decl_stmt|;
try|try
block|{
name|Validator
name|v
init|=
name|createValidator
argument_list|(
name|rootTree
argument_list|,
name|rootTree
argument_list|,
name|getTestUser
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|v
operator|.
name|childNodeAdded
argument_list|(
name|tokenTree
operator|.
name|getName
argument_list|()
argument_list|,
name|mock
argument_list|(
name|NodeState
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAddTokenTreeMissingUserGrandParent
parameter_list|()
throws|throws
name|Exception
block|{
comment|// since adding/changing an invalid tokens-parent node will be detected, mocking is required to
comment|// reach the desired invalid state, where the .tokens node isn't located below the user home.
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
argument_list|)
decl_stmt|;
name|Tree
name|tokensTree
init|=
name|tokenTree
operator|.
name|getParent
argument_list|()
decl_stmt|;
comment|// move .tokens node one level up
name|String
name|destPath
init|=
name|PathUtils
operator|.
name|concat
argument_list|(
name|PathUtils
operator|.
name|getParentPath
argument_list|(
name|getTestUser
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
name|tokensTree
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|root
operator|.
name|move
argument_list|(
name|tokensTree
operator|.
name|getPath
argument_list|()
argument_list|,
name|destPath
argument_list|)
expr_stmt|;
try|try
block|{
comment|// create a validator that has 'tokensTree' as parentBefore and parentAfter
name|NodeState
name|ns
init|=
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|tokensTree
argument_list|)
decl_stmt|;
name|TreeProvider
name|tp
init|=
name|when
argument_list|(
name|mock
argument_list|(
name|TreeProvider
operator|.
name|class
argument_list|)
operator|.
name|createReadOnlyTree
argument_list|(
name|ns
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tokensTree
argument_list|)
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|TokenValidatorProvider
name|tvp
init|=
operator|new
name|TokenValidatorProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|,
name|tp
argument_list|)
decl_stmt|;
name|Validator
name|v
init|=
name|tvp
operator|.
name|getRootValidator
argument_list|(
name|ns
argument_list|,
name|ns
argument_list|,
operator|new
name|CommitInfo
argument_list|(
literal|"sid"
argument_list|,
literal|"uid"
argument_list|,
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|v
operator|.
name|childNodeChanged
argument_list|(
name|tokenTree
operator|.
name|getName
argument_list|()
argument_list|,
name|mock
argument_list|(
name|NodeState
operator|.
name|class
argument_list|)
argument_list|,
name|mock
argument_list|(
name|NodeState
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAddTokenTreeInvalidKey
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
argument_list|)
decl_stmt|;
name|tokenTree
operator|.
name|setProperty
argument_list|(
name|TokenConstants
operator|.
name|TOKEN_ATTRIBUTE_KEY
argument_list|,
literal|"someValue"
argument_list|)
expr_stmt|;
name|Tree
name|rootTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|PathUtils
operator|.
name|ROOT_PATH
argument_list|)
decl_stmt|;
try|try
block|{
name|Validator
name|v
init|=
name|createValidator
argument_list|(
name|rootTree
argument_list|,
name|rootTree
argument_list|,
name|tokenTree
operator|.
name|getParent
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|v
operator|.
name|childNodeAdded
argument_list|(
name|tokenTree
operator|.
name|getName
argument_list|()
argument_list|,
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|tokenTree
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|66
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CommitFailedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAddTokenTreeMissingExpiry
parameter_list|()
throws|throws
name|Exception
block|{
name|Tree
name|tokenTree
init|=
name|getTokenTree
argument_list|(
name|createTokenInfo
argument_list|(
name|tokenProvider
argument_list|,
name|userId
argument_list|)
argument_list|)
decl_stmt|;
name|tokenTree
operator|.
name|removeProperty
argument_list|(
name|TokenConstants
operator|.
name|TOKEN_ATTRIBUTE_EXPIRY
argument_list|)
expr_stmt|;
name|Tree
name|rootTree
init|=
name|root
operator|.
name|getTree
argument_list|(
name|PathUtils
operator|.
name|ROOT_PATH
argument_list|)
decl_stmt|;
name|Validator
name|v
init|=
name|createValidator
argument_list|(
name|rootTree
argument_list|,
name|rootTree
argument_list|,
name|tokenTree
operator|.
name|getParent
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
try|try
block|{
name|v
operator|.
name|childNodeAdded
argument_list|(
name|tokenTree
operator|.
name|getName
argument_list|()
argument_list|,
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|tokenTree
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CommitFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|isConstraintViolation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|67
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
name|root
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|NotNull
specifier|private
name|Validator
name|createRootValidator
parameter_list|(
annotation|@
name|NotNull
name|Tree
name|before
parameter_list|,
annotation|@
name|NotNull
name|Tree
name|after
parameter_list|)
block|{
name|TokenValidatorProvider
name|tvp
init|=
operator|new
name|TokenValidatorProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
decl_stmt|;
name|Validator
name|v
init|=
name|tvp
operator|.
name|getRootValidator
argument_list|(
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|before
argument_list|)
argument_list|,
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|after
argument_list|)
argument_list|,
operator|new
name|CommitInfo
argument_list|(
literal|"sid"
argument_list|,
literal|"uid"
argument_list|,
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|v
argument_list|)
expr_stmt|;
return|return
name|v
return|;
block|}
annotation|@
name|NotNull
specifier|private
name|Validator
name|createValidator
parameter_list|(
annotation|@
name|NotNull
name|Tree
name|before
parameter_list|,
annotation|@
name|NotNull
name|Tree
name|after
parameter_list|,
annotation|@
name|NotNull
name|String
name|path
parameter_list|,
name|boolean
name|isAdd
parameter_list|)
throws|throws
name|CommitFailedException
block|{
name|TokenValidatorProvider
name|tvp
init|=
operator|new
name|TokenValidatorProvider
argument_list|(
name|ConfigurationParameters
operator|.
name|EMPTY
argument_list|,
name|getTreeProvider
argument_list|()
argument_list|)
decl_stmt|;
name|NodeState
name|b
init|=
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|before
argument_list|)
decl_stmt|;
name|NodeState
name|a
init|=
name|getTreeProvider
argument_list|()
operator|.
name|asNodeState
argument_list|(
name|after
argument_list|)
decl_stmt|;
name|Validator
name|v
init|=
name|tvp
operator|.
name|getRootValidator
argument_list|(
name|b
argument_list|,
name|a
argument_list|,
operator|new
name|CommitInfo
argument_list|(
literal|"sid"
argument_list|,
literal|"uid"
argument_list|,
name|CommitMarker
operator|.
name|asCommitAttributes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|PathUtils
operator|.
name|elements
argument_list|(
name|path
argument_list|)
control|)
block|{
name|assertNotNull
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|b
operator|=
name|b
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|a
operator|=
name|a
operator|.
name|getChildNode
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|v
operator|=
operator|(
name|isAdd
operator|)
condition|?
name|v
operator|.
name|childNodeAdded
argument_list|(
name|name
argument_list|,
name|a
argument_list|)
else|:
name|v
operator|.
name|childNodeChanged
argument_list|(
name|name
argument_list|,
name|b
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
name|v
argument_list|)
expr_stmt|;
return|return
name|v
return|;
block|}
block|}
end_class

end_unit

