begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|exercise
operator|.
name|security
operator|.
name|authorization
operator|.
name|models
operator|.
name|simplifiedroles
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|api
operator|.
name|PropertyState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|Permissions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|security
operator|.
name|authorization
operator|.
name|permission
operator|.
name|TreePermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|oak
operator|.
name|spi
operator|.
name|state
operator|.
name|NodeState
import|;
end_import

begin_class
class|class
name|ThreeRolesTreePermission
implements|implements
name|TreePermission
implements|,
name|ThreeRolesConstants
block|{
specifier|private
specifier|final
name|Role
name|role
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|isAcContent
decl_stmt|;
name|ThreeRolesTreePermission
parameter_list|(
annotation|@
name|Nonnull
name|Role
name|role
parameter_list|,
name|boolean
name|isAcContent
parameter_list|)
block|{
name|this
operator|.
name|role
operator|=
name|role
expr_stmt|;
name|this
operator|.
name|isAcContent
operator|=
name|isAcContent
expr_stmt|;
block|}
annotation|@
name|Nonnull
name|Role
name|getRole
parameter_list|()
block|{
return|return
name|role
return|;
block|}
annotation|@
name|Nonnull
annotation|@
name|Override
specifier|public
name|TreePermission
name|getChildPermission
parameter_list|(
annotation|@
name|Nonnull
name|String
name|childName
parameter_list|,
annotation|@
name|Nonnull
name|NodeState
name|childState
parameter_list|)
block|{
if|if
condition|(
name|isAcContent
condition|)
block|{
return|return
name|this
return|;
block|}
else|else
block|{
comment|// EXERCISE: respect access controlled content defined by other modules
return|return
operator|new
name|ThreeRolesTreePermission
argument_list|(
name|role
argument_list|,
name|REP_3_ROLES_POLICY
operator|.
name|equals
argument_list|(
name|childName
argument_list|)
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canRead
parameter_list|()
block|{
if|if
condition|(
name|isAcContent
condition|)
block|{
return|return
name|isGranted
argument_list|(
name|Permissions
operator|.
name|READ_ACCESS_CONTROL
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|isGranted
argument_list|(
name|Permissions
operator|.
name|READ
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canRead
parameter_list|(
annotation|@
name|Nonnull
name|PropertyState
name|property
parameter_list|)
block|{
return|return
name|canRead
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canReadAll
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canReadProperties
parameter_list|()
block|{
return|return
name|canRead
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isGranted
parameter_list|(
name|long
name|permissions
parameter_list|)
block|{
return|return
name|role
operator|.
name|grants
argument_list|(
name|permissions
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isGranted
parameter_list|(
name|long
name|permissions
parameter_list|,
annotation|@
name|Nonnull
name|PropertyState
name|property
parameter_list|)
block|{
return|return
name|isGranted
argument_list|(
name|permissions
argument_list|)
return|;
block|}
block|}
end_class

end_unit

